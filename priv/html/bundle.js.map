{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 65a9751e8ae7ff05771b","webpack:///./src/index.js","webpack:///./src/index.html","webpack:///./src/app.js","webpack:///./src/fakeServer.js","webpack:///./src/Server.js","webpack:///./src/Renderer.js","webpack:///./~/fabric/dist/fabric.js","webpack:///./~/buffer/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./~/process/browser.js","webpack:///./~/url/url.js","webpack:///./~/url/~/punycode/punycode.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/url/util.js","webpack:///./~/querystring/index.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/stream-http/index.js","webpack:///./~/stream-http/lib/request.js","webpack:///./~/stream-http/lib/capability.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/stream-http/lib/response.js","webpack:///./~/stream-http/~/readable-stream/readable-browser.js","webpack:///./~/stream-http/~/readable-stream/lib/_stream_readable.js","webpack:///./~/process-nextick-args/index.js","webpack:///./~/events/events.js","webpack:///./~/stream-http/~/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./~/safe-buffer/index.js","webpack:///./~/core-util-is/lib/util.js","webpack:///./~/stream-http/~/readable-stream/lib/internal/streams/BufferList.js","webpack:///./~/stream-http/~/readable-stream/lib/internal/streams/destroy.js","webpack:///./~/stream-http/~/readable-stream/lib/_stream_duplex.js","webpack:///./~/stream-http/~/readable-stream/lib/_stream_writable.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/util-deprecate/browser.js","webpack:///./~/stream-http/~/string_decoder/lib/string_decoder.js","webpack:///./~/stream-http/~/readable-stream/lib/_stream_transform.js","webpack:///./~/stream-http/~/readable-stream/lib/_stream_passthrough.js","webpack:///./~/to-arraybuffer/index.js","webpack:///./~/xtend/immutable.js","webpack:///./~/builtin-status-codes/browser.js","webpack:///./~/https-browserify/index.js","webpack:///./src/Asteroid.js","webpack:///./src/shapes.js","webpack:///./src/utils.js","webpack:///./src/Ship.js","webpack:///./src/Explosion.js","webpack:///./src/Bullet.js","webpack:///./src/FpsCounter.js","webpack:///./src/transformFrame.js"],"names":["modules","hotDownloadUpdateChunk","chunkId","head","document","getElementsByTagName","script","createElement","type","charset","src","__webpack_require__","p","hotCurrentHash","appendChild","hotDownloadManifest","callback","XMLHttpRequest","Error","request","requestPath","open","timeout","send","err","onreadystatechange","readyState","status","update","JSON","parse","responseText","e","hotCreateRequire","moduleId","ensure","hotStatus","hotSetStatus","hotChunksLoading","finishChunkLoading","hotWaitingFilesMap","hotEnsureUpdateChunk","hotWaitingFiles","hotUpdateDownloaded","call","fn","me","installedModules","hot","active","parents","indexOf","push","children","hotCurrentParents","console","warn","name","Object","prototype","hasOwnProperty","canDefineProperty","defineProperty","configurable","enumerable","get","set","value","hotCreateModule","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","accept","dep","i","length","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","splice","check","hotCheck","apply","hotApply","l","hotStatusHandlers","addStatusHandler","removeStatusHandler","data","hotCurrentModuleData","newStatus","toModuleId","id","isNumber","hotApplyOnUpdate","hotRequestedFilesMap","hotAvailibleFilesMap","c","hotUpdateNewHash","h","hotCallback","hotUpdate","hotAddUpdateChunk","moreModules","outdatedModules","options","getAffectedStuff","module","outdatedDependencies","queue","slice","pop","parentId","parent","addAllToSet","a","b","item","appliedUpdate","result","ignoreUnaccepted","outdatedSelfAcceptedModules","errorHandler","disposeHandlers","j","cb","child","moduleOutdatedDependencies","dependency","error","callbacks","exports","loaded","parentHotUpdateCallback","this","x","m","_interopRequireDefault","obj","__esModule","default","_extends","assign","target","arguments","source","key","_fakeServer","_Server","_Server2","_Renderer","_Renderer2","_transformFrame","_transformFrame2","serverDimensions","WIDTH","HEIGHT","clientDimensions","renderer","Renderer","FRAME_RATE","server","Server","on","frame","transformRatio","start","connect","getRandomIntBounded","max","Math","floor","random","fakeServer","_ref","generateAsteroid","generateShip","randomHexColour","generateExplosion","moveAsteroid","_ref2","_ref3","_slicedToArray","y","r","rotateShip","_ref4","_ref5","t","col","that","subscribers","toString","state","s","stateReducer","map","getNextFrame","event","render","forEach","setTimeout","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","Array","isArray","TypeError","_classCallCheck","instance","Constructor","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","_this","url","onOpen","log","onClose","websocket","WebSocket","onopen","onclose","onmessage","onMessage","message","eventName","close","_fabric","_Asteroid","_Asteroid2","_Ship","_Ship2","_Explosion","_Explosion2","_Bullet","_Bullet2","_FpsCounter","_FpsCounter2","asteroids","ships","bullets","canvas","fabric","Canvas","renderOnAddRemove","stateful","setWidth","setHeight","setBackgroundColor","calcOffset","addEventListener","keyCode","goFullscreen","getSelectionElement","parentNode","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","roid","theRoid","Asteroid","ship","theShip","Ship","bullet","theBullet","Bullet","_this2","deadAsteroidIds","keys","filter","existingId","some","remove","getOrAddAsteroid","_this3","getOrAddShip","explosions","_this4","splosion","Explosion","_this5","getOrAddBullet","paused","updateAsteroids","updateShips","updateExplosions","updateBullets","_this6","fpsCounter","FpsCounter","step","timestamp","util","requestAnimFrame","getElement","renderAll","Buffer","process","version","window","jsdom","decodeURIComponent","createWindow","parentWindow","isTouchSupported","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","_removeEventListener","handler","__eventListeners","eventListener","array","fill","observe","prop","stopObserving","fire","listenersForEvent","len","Observable","off","trigger","Collection","_objects","add","_onObjectAdded","insertAt","object","index","nonSplicing","objects","getObjects","somethingRemoved","_onObjectRemoved","forEachObject","context","o","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","_initGradient","filler","property","colorStops","Gradient","_initPattern","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","_set","toggle","global","sqrt","atan2","pow","abs","PiBy180","PI","removeFromArray","getRandomInt","min","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","addEquals","vector","sin","cos","rx","ry","transformPoint","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","width","yPoints","minY","maxY","height","left","top","invertTransform","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","resolveNamespace","parts","split","loadImage","crossOrigin","img","createImage","onload","onerror","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forceAsync","klass","fromObject","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","PathGroup","sourcePath","populateWithProperties","destination","properties","drawDashedLine","ctx","x2","y2","da","dx","dy","rot","dc","di","draw","save","translate","moveTo","rotate","restore","createCanvasElement","canvasEl","getContext","G_vmlCanvasManager","initElement","createAccessors","propName","capitalizedPropName","setterName","getterName","proto","stateProperties","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","is2x2","qrDecompose","angle","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","flipX","flipY","setAngle","String","match","isTransparent","tolerance","temp","_isTransparent","imageData","getImageData","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","alignX","alignY","aspectRatioAttrs","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","arcToSegments","toX","toY","large","sweep","rotateX","argsString","_join","arcToSegmentsCache","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","mDelta","mT","th3","segmentToBezier","th2","argsString2","segmentToBezierCache","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","boundsOfCurveCache","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","join","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","invoke","method","args","byProperty","find","value1","value2","k","condition","searchElement","n","POSITIVE_INFINITY","NEGATIVE_INFINITY","every","val","rv","extend","deep","Element","clone","replace","character","capitalize","firstLetterOnly","toLowerCase","escapeXml","trim","Dummy","bind","thisArg","concat","Subclass","callSuper","methodName","parentMethod","constructor","superclass","superClassMethod","createClass","initialize","shift","subclasses","addMethods","emptyFunction","IS_DONTENUM_BUGGY","returnValue","valueOf","areHostMethods","methodNames","test","createListener","uid","wrappedHandler","createWrappedHandler","createDispatcher","handlers","handlersForEvent","getPointer","element","srcElement","unknown","scroll","getScrollLeftTop","pointerX","pointerY","_getPointer","pageProp","clientProp","touchProp","setElement","getUniqueId","__uniqueID","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","removeEventListener","listener","attachEvent","detachEvent","existingHandler","clientX","clientY","setStyle","styles","elementStyle","style","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","getById","getElementById","makeElement","tagName","attributes","el","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","replaceChild","docElement","body","scrollLeft","scrollTop","host","nodeType","getElementStyle","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","parseInt","getBoundingClientRect","clientLeft","clientTop","sliceCanConvertNodelists","_slice","toArray","arrayLike","childNodes","defaultView","getComputedStyle","makeElementUnselectable","onselectstart","selectProp","unselectable","makeElementSelectable","getScript","headEl","scriptEl","loading","addParamToUrl","param","emptyFn","onComplete","xhr","makeXHR","parameters","setRequestHeader","factories","ActiveXObject","req","noop","animate","time","Date","duration","finish","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","calculateColor","begin","end","pos","color","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","posValue","colorEasing","normalize","asin","elastic","opts","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","normalizeAttr","attributesMap","normalizeValue","parentAttributes","parsed","transformMatrix","parseTransformAttribute","visible","isNaN","_setStrokeFillOpacity","colorAttributes","setAlpha","getAlpha","toRgba","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","parseStyleString","oStyle","chunk","pair","parseStyleObject","getGlobalStylesForElement","svgUid","rule","cssRules","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","selector","matcher","classNames","getAttribute","RegExp","elementById","node","nodelist","parseUseDirectives","attrs","xlink","substr","el2","cloneNode","currentTrans","oldLength","applyViewboxTransform","el3","nodeValue","firstChild","removeAttribute","viewBoxWidth","viewBoxHeight","matrix","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","reViewBoxTagNames","reViewBoxAttrValue","missingDimAttr","toBeParsed","parsedDim","translateMatrix","hasAncestorWithNodeName","reAllowedSVGTagNames","reNotAllowedAncestors","reAllowedParents","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","stroke","gradientDefs","rotateMatrix","multiplierX","multiplierY","skewMatrix","commaWsp","scale","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","operation","combinedMatrix","parseSVGDocument","parsingOptions","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","tagArray","elList","idsToXlinkMap","parseAttributes","ownAttributes","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","ElementsParser","parsePointsAttribute","parsedPoints","rules","allRules","styleContents","textContent","text","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","async","loadXML","results","_options","loadSVGFromString","DOMParser","parser","parseFromString","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","instanceFillValue","gradientId","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherAlpha","otherSource","reRGBa","reHSLa","reHex","aqua","black","blue","fuchsia","gray","grey","green","lime","maroon","navy","olive","orange","purple","red","silver","teal","white","yellow","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","substring","oColor","getColorStop","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","position","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","group","reverse","minRadius","maxRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","colorStopEls","forObject","repeat","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","BLUR_BOX","StaticCanvas","CANVAS_INIT_ERROR","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setOverlayColor","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","Image","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setDimensions","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeGroup","_activeGroup","ignoreVpt","skipAbsolute","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","canvasToDrawOn","renderCanvas","iVpt","tl","br","tr","bl","_renderBackground","_renderObjects","drawControls","_renderOverlay","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","_char","charIndex","fontList","_setSVGObject","sendToBack","objs","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","BaseBrush","strokeLineCap","strokeLineJoin","strokeDashArray","setShadow","_setBrushStyles","contextTop","strokeStyle","lineWidth","lineCap","lineJoin","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","originX","originY","translateToGivenOrigin","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","Group","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","sprayChunkPoints","globalAlpha","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","STROKE_OFFSET","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","freeDrawingBrush","_chooseObjectsToRender","getActiveGroup","activeObject","getActiveObject","objsToRender","activeGroupObjects","contextTopDirty","renderTop","_drawSelection","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","ignoreZoom","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","hasBorders","transparentCorners","contextCache","originalColor","selectionBackgroundColor","_renderControls","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lastAngle","curAngle","hasRoated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","targets","_searchPossibleTargets","_fireOverOutEvents","overOpt","outOpt","hoveredTarget","_hoveredTarget","previousTarget","nextTarget","_checkTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","_setActiveObject","_activeObject","onDeselect","setActiveObject","currentActiveObject","_discardActiveObject","discardActiveObject","_setActiveGroup","setActiveGroup","_discardActiveGroup","destroy","discardActiveGroup","deactivateAll","allObjects","deactivateAllWithDispatch","removeListeners","removeChild","_drawObjectsControls","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","layoutProps","realizeTransform","_setCursorFromEvent","checkClick","which","button","cursorOffset","mr","mb","ml","RIGHT_CLICK","MIDDLE_CLICK","LEFT_CLICK","cursorMap","_bindEvents","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","passive","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","eventsBinded","_onMouseUp","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","stopPropagation","preventDefault","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","_handleEvent","_isCurrentlyDrawing","_onMouseUpInDrawingMode","searchTarget","isClick","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","__corner","eventType","targetObj","subTargets","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","currentAction","_setCornerCursor","_getRotatedCornerCursor","hasRotatingPoint","getAngle","_updateActiveGroup","_createActiveGroup","saveCoords","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","_groupSelectedObjects","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","intersectsWithRect","isContainedWithinRect","setObjectsCoords","supportQuality","format","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","__toDataURL","toDataURLWithMultiplier","loadFromDatalessJSON","json","loadFromJSON","serialized","_enlivenObjects","_setBgOverlay","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","ALIASING_LIMIT","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","strokeMiterLimit","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockRotation","lockUniScaling","statefullCache","noScaleCache","dirty","cacheProperties","_cacheProperties","_cacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","zoomX","capped","zoomY","_getCacheCanvasDimensions","objectScale","getObjectScaling","retina","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","sizeShrinking","setTransform","cacheTranslationX","cacheTranslationY","fromLeft","_transformDone","_removeDefaultValues","scaling","shouldConstrainValue","isChanged","_constrainScale","setOnGroup","setSourcePath","getViewportTransform","isNotVisible","noTransform","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","shouldCache","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","_removeCacheCanvas","needsItsOwnCache","isCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","drawImage","skipCanvas","_removeShadow","miterLimit","dashArray","alternative","drawBordersInGroup","drawBorders","multX","multY","_applyPatternGradientTransform","patternTransform","_renderFill","_renderStroke","_renderDashedStroke","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","getLeft","getTop","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","_fromObject","extraParam","originXOffset","originYOffset","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","xFull","yFull","_originalOriginX","_originalOriginY","getCoords","multiplyMatrices","oCoords","aCoords","absolute","calculate","calcCoords","pointTL","pointBR","intersection","other","lines","_getImageLines","_findCrossPoints","centerPoint","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getBoundingRectWidth","getBoundingRectHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","_hypotenuse","mtr","_setCornerCoords","_calcRotateMatrix","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","w","bbox","dimX","dimY","getSvgColorString","str","getSvgStyles","skipShadow","getSvgFilter","getSvgId","getSvgTransform","getSkewX","getSkewY","translatePart","anglePart","scalePart","skewXPart","skewYPart","addTranslateX","flipXPart","addTranslateY","flipYPart","getSvgTransformMatrix","_createBaseSVGMarkup","saveProps","tmpObj","_isEqual","origValue","currentValue","firstPass","originalSet","dashedPropertySet","isVML","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","coordProps","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","cp","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","_callback","line","isValidRadius","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","ellipse","_initRxRy","isRounded","Polyline","_calcDimensions","pathOffset","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","calcDim","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","chunks","addTransform","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","deltaY","pathUrl","paths","parseDimensionsFromPaths","xC","yC","parentCache","caching","isSameColor","pathsToObject","originalDefaults","firstPathFill","pathFill","total","originalPaths","pathGroup","_lockProperties","isAlreadyGrouped","_updateObjectsCoords","_updateObjectsACoords","_calcBounds","skipCoordsChange","_updateObjectCoords","__origHasControls","objectLeft","objectTop","_restoreObjectsState","_setObjectActive","delegatedProperties","textDecoration","textAlign","objsToObject","_renderObject","originalHasRotatingPoint","_restoreObjectState","_originalLeft","_originalTop","hasMoved","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","_lastScaleX","_lastScaleY","minimumScaleTrigger","filters","resizeFilters","_initElement","_element","_originalElement","_initConfig","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","filtered","getSvgSrc","origFill","_src","setSrc","imgElement","forResizing","replacement","retinaScaling","minimumScale","applyTo","toBuffer","pngCompression","elementToDraw","imageMargins","_findMargins","_needsResize","marginX","marginY","scales","_resetWidthHeight","CSS_CANVAS","_initFilters","fromURL","imgOptions","preserveAR","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","BaseFilter","Brightness","brightness","putImageData","Convolute","opaque","dstOff","scx","scy","srcOff","wt","weights","pixels","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","GradientTransparency","Grayscale","Invert","Mask","mask","channel","maskEl","maskCanvasEl","maskImageData","maskData","Noise","noise","rand","Pixelate","blocksize","_ilen","_j","_jlen","RemoveWhite","distance","limit","Sepia","avg","Sepia2","Tint","tintR","tintG","tintB","alpha1","Multiply","Blend","mode","tg","_r","_g","_b","isImage","_el","tmpCanvas","context2","Resize","resizeType","lanczosLobes","rcpScaleX","rcpScaleY","oW","oH","dW","dH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","multW","multH","signW","signH","doneW","doneH","stepW","stepH","tmpCtx","lanczosCreate","lobes","xx","u","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","srcImg","xDiff","yDiff","chnl","origPix","w4","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","ColorMatrix","Contrast","contrast","contrastF","Saturate","saturate","adjust","MIN_TEXT_WIDTH","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","__skipDimension","_initDimensions","_setTextStyles","_textLines","_splitTextIntoLines","_clearCache","_getTextWidth","cursorWidth","_getTextHeight","_renderTextLinesBackground","_renderText","_renderTextDecoration","_renderTextFill","_renderTextStroke","textBaseline","_getFontDeclaration","_getHeightOfSingleLine","_getHeightOfLine","maxWidth","_getLineWidth","currentLineWidth","_renderChars","chars","shortM","additionalSpace","_getWidthOfCharSpacing","measureText","_renderTextLine","lineIndex","word","words","charOffset","wordsWidth","_getWidthOfWords","widthDiff","numSpaces","spaceWidth","leftOffset","charCount","_getLeftOffset","_getTopOffset","isEmptyStyles","_renderTextCommon","lineHeights","heightOfLine","maxHeight","_getLineLeftOffset","lineLeftOffset","lineTopOffset","originalFill","__lineWidths","__lineHeights","_shouldClearDimensionCache","shouldClear","_forceClearCache","wordCount","_measureLine","finalWidth","renderLinesAtOffset","offsets","oLen","halfOfVerticalBox","additionalProperties","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","noShadow","textBgRects","textSpans","svgStyle","textTopOffset","textLeftOffset","_setSVGBg","_setSVGTextLineBg","_setSVGTextLineText","yPos","_setSVGTextLineJustifed","_getFillAttributes","fillColor","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","IText","selectionStart","selectionEnd","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","initBehavior","p3","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","getSelectionStyles","startIndex","endIndex","loc","get2DCursorLocation","_getStyleDeclaration","setSelectionStyles","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","clearContextTop","cursorOffsetCache","renderCursorOrSelection","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","getCurrentCharStyle","getCurrentCharFontSize","getCurrentCharColor","typeOfBoundaries","_getCursorBoundariesOffsets","lineLeft","topOffset","_getWidthOfChar","cursorLocation","charHeight","__isMousedown","startLine","endLine","lineOffset","realLineHeight","boxWidth","j2","j2len","_renderCharsFast","prevStyle","thisStyle","charsToRender","_hasStyleChanged","_renderChar","skipFillStrokeCheck","charWidth","shouldFill","shouldStroke","_charWidth","decl","_getHeightOfChar","_applyCharStylesGetWidth","jChar","fillText","strokeText","_renderCharDecoration","decoration","decorationWeight","positions","underline","line-through","overline","decorations","leftCache","topCache","widthCache","heightCache","colorCache","_getWidthOfCharsAt","_getCacheProp","styleDeclaration","_getFontCache","cacheProp","charDecl","_applyFontStyles","returnCloneOrEmpty","_deleteStyleDeclaration","_deleteLineStyle","_isMeasuring","_getWidthOfSpace","currentCharHeight","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","selected","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","clearTimeout","_currentTickCompleteState","initDelayedCursor","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","getNumNewLinesInSelectedText","selectedText","numNewLines","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","inCompositionMode","_calcTextareaPosition","upperCanvas","_savedProps","_restoreEditingProps","overCursor","isTextChanged","_removeExtraneousStyles","_removeCharsFromTo","_removeSingleCharAndStyle","isBeginningOfLine","indexStyle","removeStyleObject","insertChars","_chars","useCopiedStyle","insertChar","copiedTextStyle","skipUpdate","styleObject","isEndOfLine","insertStyleObjects","insertNewlineStyleObject","shiftLineStyles","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","clonedStyles","numericLine","_removeStyleObject","_getTextOnPreviousLine","lIndex","textOnPreviousLine","newCharIndexOnPrevLine","insertNewline","setSelectionStartEndWithShift","newSelection","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","isDoubleClick","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","widthOfLine","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","cut","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","8","9","27","13","33","34","35","36","37","38","39","40","46","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","diff","charsToInsert","offsetEnd","textLength","newTextLength","prevCompositionLength","compositionStart","forwardDelete","moveCursorRight","removeChars","clipboardData","_getClipboardData","setData","copiedText","getData","_getWidthBeforeCursor","textBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","foundMatch","textOnLine","widthOfCharsOnLine","indexOnLine","widthOfChar","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","_removeCharsNearCursor","leftLineBoundary","leftWordBoundary","_setSVGTextLineChars","_getSVGLineTopOffset","styleDecl","_createTextCharSpan","_createTextCharBg","lastHeight","fillStyles","Textbox","minWidth","dynamicMinWidth","__cachedLines","getTextboxControlVisibility","_generateStyleMap","realLineCount","realLineCharCount","_styleMap","_wrapText","wrapped","_wrapLine","_measureText","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","originalAlign","__oldScaleX","numLines","removed","lineLen","lineChars","getMinWidth","setObjectScaleOverridden","_refreshControlsVisibility","override","tmp","oURL","URL","port","protocol","reqHandler","HTTPS","HTTP","hostname","response","setEncoding","statusCode","errno","ECONNREFUSED","requestFs","fs","readFile","createImageAndCallBack","eval","createCanvasForNode","nodeCanvasOptions","nodeCanvas","nodeCacheCanvas","FabricCanvas","fabricCanvas","Font","originaInitStatic","createPNGStream","createJPEGStream","origSetBackstoreDimension","typedArraySupport","Uint8Array","__proto__","foo","subarray","byteLength","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","arg","encodingOrOffset","allocUnsafe","ArrayBuffer","fromArrayBuffer","fromString","assertSize","alloc","checked","isEncoding","actual","write","fromArrayLike","byteOffset","isBuffer","buffer","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","INSPECT_MAX_BYTES","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","Arr","curByte","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","nextTick","title","browser","env","argv","versions","once","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","umask","Url","slashes","auth","hash","search","query","pathname","href","urlParse","parseQueryString","slashesDenoteHost","isObject","urlFormat","isString","urlResolve","relative","resolve","urlResolveObject","resolveObject","punycode","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","queryIndex","splitter","uSplit","slashRegex","rest","simplePath","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","toASCII","ae","esc","encodeURIComponent","escape","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","isAbsolute","__WEBPACK_AMD_DEFINE_RESULT__","errors","mapDomain","regexSeparators","labels","encoded","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","base","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","damp","baseMinusTMin","tMax","decode","input","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","delimiter","maxInt","tMin","encode","handledCPCount","basicLength","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","regexNonASCII","freeGlobal","overflow","not-basic","invalid-input","ucs2","webpackPolyfill","deprecate","qs","sep","regexp","maxKeys","kstr","vstr","stringifyPrimitive","ks","ClientRequest","statusCodes","defaultProtocol","location","headers","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","decideMode","preferBinary","useFetch","capability","fetch","mozchunkedarraybuffer","msstream","arraybuffer","vbArray","statusValid","inherits","stream","toArrayBuffer","rStates","readyStates","Writable","_opts","_body","_headers","setHeader","abortController","overrideMimeType","_mode","_fetchTimer","_onFinish","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","blobConstructor","Blob","headersList","keyName","signal","controller","AbortController","_fetchAbortController","requestTimeout","credentials","withCredentials","then","_fetchResponse","_connect","reason","_xhr","responseType","ontimeout","_response","LOADING","DONE","_onXHRProgress","onprogress","_write","flushHeaders","setNoDelay","setSocketKeepAlive","getXHR","XDomainRequest","checkTypeSupport","isFunction","ReadableStream","writableStream","WritableStream","haveArrayBuffer","haveSlice","VBArray","create","ctor","superCtor","super_","TempCtor","UNSENT","OPENED","HEADERS_RECEIVED","fetchTimer","reader","catch","Readable","rawHeaders","trailers","rawTrailers","statusMessage","statusText","Promise","reject","_resumeFetch","pipeTo","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","_read","responseBody","newData","MSStreamReader","readAsArrayBuffer","Stream","Duplex","Transform","PassThrough","_uint8ArrayToBuffer","_isUint8Array","OurUint8Array","emitter","_events","ReadableState","isDuplex","objectMode","readableObjectMode","hwm","highWaterMark","readableHwm","readableHighWaterMark","defaultHwm","BufferList","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","destroyed","defaultEncoding","awaitDrain","readingMore","decoder","StringDecoder","_readableState","readable","_destroy","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","er","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","needMoreData","emitReadable","computeNewHighWaterMark","MAX_HWM","howMuchToRead","debug","pna","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resume","resume_","fromList","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","nb","tail","endReadable","endReadableNT","xs","EventEmitter","debugUtil","debuglog","destroyImpl","kProxyEvents","_undestroy","undestroy","isPaused","enc","nOrig","doRead","pipe","dest","pipeOpts","onunpipe","unpipeInfo","hasUnpiped","cleanup","onend","onfinish","ondrain","unpipe","ondata","cleanedUp","_writableState","needDrain","increasedAwaitDrain","pause","doEnd","stdout","stderr","endFn","dests","ev","wrap","_fromList","arg1","arg2","arg3","_maxListeners","isUndefined","defaultMaxListeners","setMaxListeners","newListener","warned","trace","fired","listenerCount","evlistener","copyProps","SafeBuffer","objectToString","isBoolean","isSymbol","isRegExp","isDate","isError","isPrimitive","copyBuffer","entry","custom","readableDestroyed","writableDestroyed","errorEmitted","emitErrorNT","ending","finished","allowHalfOpen","onEndNT","objectKeys","setImmediate","CorkedRequest","onCorkedFinish","nop","WritableState","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","bufferedRequestCount","corkedRequestsFree","realHasInstance","writev","_writev","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","holder","count","allBuffers","callFinal","prefinish","need","endWritable","corkReq","internalUtil","getBuffer","_","hasInstance","cork","uncork","setDefaultEncoding","Timeout","clearFn","_id","_clearFn","scope","setInterval","clearInterval","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","task","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","installNextTickImplementation","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","installPostMessageImplementation","messagePrefix","onGlobalMessage","installMessageChannelImplementation","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","installSetTimeoutImplementation","attachTo","msg","deprecated","config","localStorage","_normalizeEncoding","retried","normalizeEncoding","nenc","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckIncomplete","utf8CheckExtraBytes","utf8Text","utf8End","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","_transform","flush","_flush","err2","arrayCopy","100","101","102","200","201","202","203","204","205","206","207","208","226","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","422","423","424","425","426","428","429","431","451","500","501","502","503","504","505","506","507","508","509","510","511","params","scheme","_interopRequireWildcard","newObj","_shapes","shapes","_utils","utils","asteroid","animation","animationSettings","linear","colour","frames","startTime","now","prevTime","fps","setText","transformFrame","ratio","serverDimmensions","transformAsteroid","transformShip","transformExplosion","_ref6","transformBullet","_ref7","_ref8"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \tvar parentHotUpdateCallback = this[\"webpackHotUpdate\"];\n/******/ \tthis[\"webpackHotUpdate\"] = \r\n/******/ \tfunction webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n/******/ \t\thotAddUpdateChunk(chunkId, moreModules);\r\n/******/ \t\tif(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars\r\n/******/ \t\tvar head = document.getElementsByTagName(\"head\")[0];\r\n/******/ \t\tvar script = document.createElement(\"script\");\r\n/******/ \t\tscript.type = \"text/javascript\";\r\n/******/ \t\tscript.charset = \"utf-8\";\r\n/******/ \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\r\n/******/ \t\thead.appendChild(script);\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars\r\n/******/ \t\tif(typeof XMLHttpRequest === \"undefined\")\r\n/******/ \t\t\treturn callback(new Error(\"No browser support\"));\r\n/******/ \t\ttry {\r\n/******/ \t\t\tvar request = new XMLHttpRequest();\r\n/******/ \t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\r\n/******/ \t\t\trequest.open(\"GET\", requestPath, true);\r\n/******/ \t\t\trequest.timeout = 10000;\r\n/******/ \t\t\trequest.send(null);\r\n/******/ \t\t} catch(err) {\r\n/******/ \t\t\treturn callback(err);\r\n/******/ \t\t}\r\n/******/ \t\trequest.onreadystatechange = function() {\r\n/******/ \t\t\tif(request.readyState !== 4) return;\r\n/******/ \t\t\tif(request.status === 0) {\r\n/******/ \t\t\t\t// timeout\r\n/******/ \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" timed out.\"));\r\n/******/ \t\t\t} else if(request.status === 404) {\r\n/******/ \t\t\t\t// no update available\r\n/******/ \t\t\t\tcallback();\r\n/******/ \t\t\t} else if(request.status !== 200 && request.status !== 304) {\r\n/******/ \t\t\t\t// other failure\r\n/******/ \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\r\n/******/ \t\t\t} else {\r\n/******/ \t\t\t\t// success\r\n/******/ \t\t\t\ttry {\r\n/******/ \t\t\t\t\tvar update = JSON.parse(request.responseText);\r\n/******/ \t\t\t\t} catch(e) {\r\n/******/ \t\t\t\t\tcallback(e);\r\n/******/ \t\t\t\t\treturn;\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tcallback(null, update);\r\n/******/ \t\t\t}\r\n/******/ \t\t};\r\n/******/ \t}\r\n/******/\n/******/ \t\r\n/******/ \t\r\n/******/ \t// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js\r\n/******/ \tvar canDefineProperty = false;\r\n/******/ \ttry {\r\n/******/ \t\tObject.defineProperty({}, \"x\", {\r\n/******/ \t\t\tget: function() {}\r\n/******/ \t\t});\r\n/******/ \t\tcanDefineProperty = true;\r\n/******/ \t} catch(x) {\r\n/******/ \t\t// IE will fail on defineProperty\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tvar hotApplyOnUpdate = true;\r\n/******/ \tvar hotCurrentHash = \"65a9751e8ae7ff05771b\"; // eslint-disable-line no-unused-vars\r\n/******/ \tvar hotCurrentModuleData = {};\r\n/******/ \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\r\n/******/ \t\r\n/******/ \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\r\n/******/ \t\tvar me = installedModules[moduleId];\r\n/******/ \t\tif(!me) return __webpack_require__;\r\n/******/ \t\tvar fn = function(request) {\r\n/******/ \t\t\tif(me.hot.active) {\r\n/******/ \t\t\t\tif(installedModules[request]) {\r\n/******/ \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\r\n/******/ \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\r\n/******/ \t\t\t\t\tif(me.children.indexOf(request) < 0)\r\n/******/ \t\t\t\t\t\tme.children.push(request);\r\n/******/ \t\t\t\t} else hotCurrentParents = [moduleId];\r\n/******/ \t\t\t} else {\r\n/******/ \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\r\n/******/ \t\t\t\thotCurrentParents = [];\r\n/******/ \t\t\t}\r\n/******/ \t\t\treturn __webpack_require__(request);\r\n/******/ \t\t};\r\n/******/ \t\tfor(var name in __webpack_require__) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {\r\n/******/ \t\t\t\tif(canDefineProperty) {\r\n/******/ \t\t\t\t\tObject.defineProperty(fn, name, (function(name) {\r\n/******/ \t\t\t\t\t\treturn {\r\n/******/ \t\t\t\t\t\t\tconfigurable: true,\r\n/******/ \t\t\t\t\t\t\tenumerable: true,\r\n/******/ \t\t\t\t\t\t\tget: function() {\r\n/******/ \t\t\t\t\t\t\t\treturn __webpack_require__[name];\r\n/******/ \t\t\t\t\t\t\t},\r\n/******/ \t\t\t\t\t\t\tset: function(value) {\r\n/******/ \t\t\t\t\t\t\t\t__webpack_require__[name] = value;\r\n/******/ \t\t\t\t\t\t\t}\r\n/******/ \t\t\t\t\t\t};\r\n/******/ \t\t\t\t\t}(name)));\r\n/******/ \t\t\t\t} else {\r\n/******/ \t\t\t\t\tfn[name] = __webpack_require__[name];\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\tfunction ensure(chunkId, callback) {\r\n/******/ \t\t\tif(hotStatus === \"ready\")\r\n/******/ \t\t\t\thotSetStatus(\"prepare\");\r\n/******/ \t\t\thotChunksLoading++;\r\n/******/ \t\t\t__webpack_require__.e(chunkId, function() {\r\n/******/ \t\t\t\ttry {\r\n/******/ \t\t\t\t\tcallback.call(null, fn);\r\n/******/ \t\t\t\t} finally {\r\n/******/ \t\t\t\t\tfinishChunkLoading();\r\n/******/ \t\t\t\t}\r\n/******/ \t\r\n/******/ \t\t\t\tfunction finishChunkLoading() {\r\n/******/ \t\t\t\t\thotChunksLoading--;\r\n/******/ \t\t\t\t\tif(hotStatus === \"prepare\") {\r\n/******/ \t\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\r\n/******/ \t\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n/******/ \t\t\t\t\t\t}\r\n/******/ \t\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n/******/ \t\t\t\t\t\t\thotUpdateDownloaded();\r\n/******/ \t\t\t\t\t\t}\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t});\r\n/******/ \t\t}\r\n/******/ \t\tif(canDefineProperty) {\r\n/******/ \t\t\tObject.defineProperty(fn, \"e\", {\r\n/******/ \t\t\t\tenumerable: true,\r\n/******/ \t\t\t\tvalue: ensure\r\n/******/ \t\t\t});\r\n/******/ \t\t} else {\r\n/******/ \t\t\tfn.e = ensure;\r\n/******/ \t\t}\r\n/******/ \t\treturn fn;\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\r\n/******/ \t\tvar hot = {\r\n/******/ \t\t\t// private stuff\r\n/******/ \t\t\t_acceptedDependencies: {},\r\n/******/ \t\t\t_declinedDependencies: {},\r\n/******/ \t\t\t_selfAccepted: false,\r\n/******/ \t\t\t_selfDeclined: false,\r\n/******/ \t\t\t_disposeHandlers: [],\r\n/******/ \t\r\n/******/ \t\t\t// Module API\r\n/******/ \t\t\tactive: true,\r\n/******/ \t\t\taccept: function(dep, callback) {\r\n/******/ \t\t\t\tif(typeof dep === \"undefined\")\r\n/******/ \t\t\t\t\thot._selfAccepted = true;\r\n/******/ \t\t\t\telse if(typeof dep === \"function\")\r\n/******/ \t\t\t\t\thot._selfAccepted = dep;\r\n/******/ \t\t\t\telse if(typeof dep === \"object\")\r\n/******/ \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n/******/ \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback;\r\n/******/ \t\t\t\telse\r\n/******/ \t\t\t\t\thot._acceptedDependencies[dep] = callback;\r\n/******/ \t\t\t},\r\n/******/ \t\t\tdecline: function(dep) {\r\n/******/ \t\t\t\tif(typeof dep === \"undefined\")\r\n/******/ \t\t\t\t\thot._selfDeclined = true;\r\n/******/ \t\t\t\telse if(typeof dep === \"number\")\r\n/******/ \t\t\t\t\thot._declinedDependencies[dep] = true;\r\n/******/ \t\t\t\telse\r\n/******/ \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n/******/ \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\r\n/******/ \t\t\t},\r\n/******/ \t\t\tdispose: function(callback) {\r\n/******/ \t\t\t\thot._disposeHandlers.push(callback);\r\n/******/ \t\t\t},\r\n/******/ \t\t\taddDisposeHandler: function(callback) {\r\n/******/ \t\t\t\thot._disposeHandlers.push(callback);\r\n/******/ \t\t\t},\r\n/******/ \t\t\tremoveDisposeHandler: function(callback) {\r\n/******/ \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\r\n/******/ \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\r\n/******/ \t\t\t},\r\n/******/ \t\r\n/******/ \t\t\t// Management API\r\n/******/ \t\t\tcheck: hotCheck,\r\n/******/ \t\t\tapply: hotApply,\r\n/******/ \t\t\tstatus: function(l) {\r\n/******/ \t\t\t\tif(!l) return hotStatus;\r\n/******/ \t\t\t\thotStatusHandlers.push(l);\r\n/******/ \t\t\t},\r\n/******/ \t\t\taddStatusHandler: function(l) {\r\n/******/ \t\t\t\thotStatusHandlers.push(l);\r\n/******/ \t\t\t},\r\n/******/ \t\t\tremoveStatusHandler: function(l) {\r\n/******/ \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\r\n/******/ \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\r\n/******/ \t\t\t},\r\n/******/ \t\r\n/******/ \t\t\t//inherit from previous dispose call\r\n/******/ \t\t\tdata: hotCurrentModuleData[moduleId]\r\n/******/ \t\t};\r\n/******/ \t\treturn hot;\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tvar hotStatusHandlers = [];\r\n/******/ \tvar hotStatus = \"idle\";\r\n/******/ \t\r\n/******/ \tfunction hotSetStatus(newStatus) {\r\n/******/ \t\thotStatus = newStatus;\r\n/******/ \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\r\n/******/ \t\t\thotStatusHandlers[i].call(null, newStatus);\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \t// while downloading\r\n/******/ \tvar hotWaitingFiles = 0;\r\n/******/ \tvar hotChunksLoading = 0;\r\n/******/ \tvar hotWaitingFilesMap = {};\r\n/******/ \tvar hotRequestedFilesMap = {};\r\n/******/ \tvar hotAvailibleFilesMap = {};\r\n/******/ \tvar hotCallback;\r\n/******/ \t\r\n/******/ \t// The update info\r\n/******/ \tvar hotUpdate, hotUpdateNewHash;\r\n/******/ \t\r\n/******/ \tfunction toModuleId(id) {\r\n/******/ \t\tvar isNumber = (+id) + \"\" === id;\r\n/******/ \t\treturn isNumber ? +id : id;\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotCheck(apply, callback) {\r\n/******/ \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\r\n/******/ \t\tif(typeof apply === \"function\") {\r\n/******/ \t\t\thotApplyOnUpdate = false;\r\n/******/ \t\t\tcallback = apply;\r\n/******/ \t\t} else {\r\n/******/ \t\t\thotApplyOnUpdate = apply;\r\n/******/ \t\t\tcallback = callback || function(err) {\r\n/******/ \t\t\t\tif(err) throw err;\r\n/******/ \t\t\t};\r\n/******/ \t\t}\r\n/******/ \t\thotSetStatus(\"check\");\r\n/******/ \t\thotDownloadManifest(function(err, update) {\r\n/******/ \t\t\tif(err) return callback(err);\r\n/******/ \t\t\tif(!update) {\r\n/******/ \t\t\t\thotSetStatus(\"idle\");\r\n/******/ \t\t\t\tcallback(null, null);\r\n/******/ \t\t\t\treturn;\r\n/******/ \t\t\t}\r\n/******/ \t\r\n/******/ \t\t\thotRequestedFilesMap = {};\r\n/******/ \t\t\thotAvailibleFilesMap = {};\r\n/******/ \t\t\thotWaitingFilesMap = {};\r\n/******/ \t\t\tfor(var i = 0; i < update.c.length; i++)\r\n/******/ \t\t\t\thotAvailibleFilesMap[update.c[i]] = true;\r\n/******/ \t\t\thotUpdateNewHash = update.h;\r\n/******/ \t\r\n/******/ \t\t\thotSetStatus(\"prepare\");\r\n/******/ \t\t\thotCallback = callback;\r\n/******/ \t\t\thotUpdate = {};\r\n/******/ \t\t\tvar chunkId = 0;\r\n/******/ \t\t\t{ // eslint-disable-line no-lone-blocks\r\n/******/ \t\t\t\t/*globals chunkId */\r\n/******/ \t\t\t\thotEnsureUpdateChunk(chunkId);\r\n/******/ \t\t\t}\r\n/******/ \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n/******/ \t\t\t\thotUpdateDownloaded();\r\n/******/ \t\t\t}\r\n/******/ \t\t});\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n/******/ \t\tif(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\r\n/******/ \t\t\treturn;\r\n/******/ \t\thotRequestedFilesMap[chunkId] = false;\r\n/******/ \t\tfor(var moduleId in moreModules) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\r\n/******/ \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\r\n/******/ \t\t\thotUpdateDownloaded();\r\n/******/ \t\t}\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotEnsureUpdateChunk(chunkId) {\r\n/******/ \t\tif(!hotAvailibleFilesMap[chunkId]) {\r\n/******/ \t\t\thotWaitingFilesMap[chunkId] = true;\r\n/******/ \t\t} else {\r\n/******/ \t\t\thotRequestedFilesMap[chunkId] = true;\r\n/******/ \t\t\thotWaitingFiles++;\r\n/******/ \t\t\thotDownloadUpdateChunk(chunkId);\r\n/******/ \t\t}\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotUpdateDownloaded() {\r\n/******/ \t\thotSetStatus(\"ready\");\r\n/******/ \t\tvar callback = hotCallback;\r\n/******/ \t\thotCallback = null;\r\n/******/ \t\tif(!callback) return;\r\n/******/ \t\tif(hotApplyOnUpdate) {\r\n/******/ \t\t\thotApply(hotApplyOnUpdate, callback);\r\n/******/ \t\t} else {\r\n/******/ \t\t\tvar outdatedModules = [];\r\n/******/ \t\t\tfor(var id in hotUpdate) {\r\n/******/ \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n/******/ \t\t\t\t\toutdatedModules.push(toModuleId(id));\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t\tcallback(null, outdatedModules);\r\n/******/ \t\t}\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotApply(options, callback) {\r\n/******/ \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\r\n/******/ \t\tif(typeof options === \"function\") {\r\n/******/ \t\t\tcallback = options;\r\n/******/ \t\t\toptions = {};\r\n/******/ \t\t} else if(options && typeof options === \"object\") {\r\n/******/ \t\t\tcallback = callback || function(err) {\r\n/******/ \t\t\t\tif(err) throw err;\r\n/******/ \t\t\t};\r\n/******/ \t\t} else {\r\n/******/ \t\t\toptions = {};\r\n/******/ \t\t\tcallback = callback || function(err) {\r\n/******/ \t\t\t\tif(err) throw err;\r\n/******/ \t\t\t};\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\tfunction getAffectedStuff(module) {\r\n/******/ \t\t\tvar outdatedModules = [module];\r\n/******/ \t\t\tvar outdatedDependencies = {};\r\n/******/ \t\r\n/******/ \t\t\tvar queue = outdatedModules.slice();\r\n/******/ \t\t\twhile(queue.length > 0) {\r\n/******/ \t\t\t\tvar moduleId = queue.pop();\r\n/******/ \t\t\t\tvar module = installedModules[moduleId];\r\n/******/ \t\t\t\tif(!module || module.hot._selfAccepted)\r\n/******/ \t\t\t\t\tcontinue;\r\n/******/ \t\t\t\tif(module.hot._selfDeclined) {\r\n/******/ \t\t\t\t\treturn new Error(\"Aborted because of self decline: \" + moduleId);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tif(moduleId === 0) {\r\n/******/ \t\t\t\t\treturn;\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\r\n/******/ \t\t\t\t\tvar parentId = module.parents[i];\r\n/******/ \t\t\t\t\tvar parent = installedModules[parentId];\r\n/******/ \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\r\n/******/ \t\t\t\t\t\treturn new Error(\"Aborted because of declined dependency: \" + moduleId + \" in \" + parentId);\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\r\n/******/ \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\r\n/******/ \t\t\t\t\t\tif(!outdatedDependencies[parentId])\r\n/******/ \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\r\n/******/ \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\r\n/******/ \t\t\t\t\t\tcontinue;\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t\tdelete outdatedDependencies[parentId];\r\n/******/ \t\t\t\t\toutdatedModules.push(parentId);\r\n/******/ \t\t\t\t\tqueue.push(parentId);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\r\n/******/ \t\t\treturn [outdatedModules, outdatedDependencies];\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\tfunction addAllToSet(a, b) {\r\n/******/ \t\t\tfor(var i = 0; i < b.length; i++) {\r\n/******/ \t\t\t\tvar item = b[i];\r\n/******/ \t\t\t\tif(a.indexOf(item) < 0)\r\n/******/ \t\t\t\t\ta.push(item);\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// at begin all updates modules are outdated\r\n/******/ \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\r\n/******/ \t\tvar outdatedDependencies = {};\r\n/******/ \t\tvar outdatedModules = [];\r\n/******/ \t\tvar appliedUpdate = {};\r\n/******/ \t\tfor(var id in hotUpdate) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n/******/ \t\t\t\tvar moduleId = toModuleId(id);\r\n/******/ \t\t\t\tvar result = getAffectedStuff(moduleId);\r\n/******/ \t\t\t\tif(!result) {\r\n/******/ \t\t\t\t\tif(options.ignoreUnaccepted)\r\n/******/ \t\t\t\t\t\tcontinue;\r\n/******/ \t\t\t\t\thotSetStatus(\"abort\");\r\n/******/ \t\t\t\t\treturn callback(new Error(\"Aborted because \" + moduleId + \" is not accepted\"));\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tif(result instanceof Error) {\r\n/******/ \t\t\t\t\thotSetStatus(\"abort\");\r\n/******/ \t\t\t\t\treturn callback(result);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\r\n/******/ \t\t\t\taddAllToSet(outdatedModules, result[0]);\r\n/******/ \t\t\t\tfor(var moduleId in result[1]) {\r\n/******/ \t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {\r\n/******/ \t\t\t\t\t\tif(!outdatedDependencies[moduleId])\r\n/******/ \t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\r\n/******/ \t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// Store self accepted outdated modules to require them later by the module system\r\n/******/ \t\tvar outdatedSelfAcceptedModules = [];\r\n/******/ \t\tfor(var i = 0; i < outdatedModules.length; i++) {\r\n/******/ \t\t\tvar moduleId = outdatedModules[i];\r\n/******/ \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\r\n/******/ \t\t\t\toutdatedSelfAcceptedModules.push({\r\n/******/ \t\t\t\t\tmodule: moduleId,\r\n/******/ \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\r\n/******/ \t\t\t\t});\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// Now in \"dispose\" phase\r\n/******/ \t\thotSetStatus(\"dispose\");\r\n/******/ \t\tvar queue = outdatedModules.slice();\r\n/******/ \t\twhile(queue.length > 0) {\r\n/******/ \t\t\tvar moduleId = queue.pop();\r\n/******/ \t\t\tvar module = installedModules[moduleId];\r\n/******/ \t\t\tif(!module) continue;\r\n/******/ \t\r\n/******/ \t\t\tvar data = {};\r\n/******/ \t\r\n/******/ \t\t\t// Call dispose handlers\r\n/******/ \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\r\n/******/ \t\t\tfor(var j = 0; j < disposeHandlers.length; j++) {\r\n/******/ \t\t\t\tvar cb = disposeHandlers[j];\r\n/******/ \t\t\t\tcb(data);\r\n/******/ \t\t\t}\r\n/******/ \t\t\thotCurrentModuleData[moduleId] = data;\r\n/******/ \t\r\n/******/ \t\t\t// disable module (this disables requires from this module)\r\n/******/ \t\t\tmodule.hot.active = false;\r\n/******/ \t\r\n/******/ \t\t\t// remove module from cache\r\n/******/ \t\t\tdelete installedModules[moduleId];\r\n/******/ \t\r\n/******/ \t\t\t// remove \"parents\" references from all children\r\n/******/ \t\t\tfor(var j = 0; j < module.children.length; j++) {\r\n/******/ \t\t\t\tvar child = installedModules[module.children[j]];\r\n/******/ \t\t\t\tif(!child) continue;\r\n/******/ \t\t\t\tvar idx = child.parents.indexOf(moduleId);\r\n/******/ \t\t\t\tif(idx >= 0) {\r\n/******/ \t\t\t\t\tchild.parents.splice(idx, 1);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// remove outdated dependency from module children\r\n/******/ \t\tfor(var moduleId in outdatedDependencies) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n/******/ \t\t\t\tvar module = installedModules[moduleId];\r\n/******/ \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n/******/ \t\t\t\tfor(var j = 0; j < moduleOutdatedDependencies.length; j++) {\r\n/******/ \t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\r\n/******/ \t\t\t\t\tvar idx = module.children.indexOf(dependency);\r\n/******/ \t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// Not in \"apply\" phase\r\n/******/ \t\thotSetStatus(\"apply\");\r\n/******/ \t\r\n/******/ \t\thotCurrentHash = hotUpdateNewHash;\r\n/******/ \t\r\n/******/ \t\t// insert new code\r\n/******/ \t\tfor(var moduleId in appliedUpdate) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\r\n/******/ \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// call accept handlers\r\n/******/ \t\tvar error = null;\r\n/******/ \t\tfor(var moduleId in outdatedDependencies) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n/******/ \t\t\t\tvar module = installedModules[moduleId];\r\n/******/ \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n/******/ \t\t\t\tvar callbacks = [];\r\n/******/ \t\t\t\tfor(var i = 0; i < moduleOutdatedDependencies.length; i++) {\r\n/******/ \t\t\t\t\tvar dependency = moduleOutdatedDependencies[i];\r\n/******/ \t\t\t\t\tvar cb = module.hot._acceptedDependencies[dependency];\r\n/******/ \t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\r\n/******/ \t\t\t\t\tcallbacks.push(cb);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tfor(var i = 0; i < callbacks.length; i++) {\r\n/******/ \t\t\t\t\tvar cb = callbacks[i];\r\n/******/ \t\t\t\t\ttry {\r\n/******/ \t\t\t\t\t\tcb(outdatedDependencies);\r\n/******/ \t\t\t\t\t} catch(err) {\r\n/******/ \t\t\t\t\t\tif(!error)\r\n/******/ \t\t\t\t\t\t\terror = err;\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// Load self accepted modules\r\n/******/ \t\tfor(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {\r\n/******/ \t\t\tvar item = outdatedSelfAcceptedModules[i];\r\n/******/ \t\t\tvar moduleId = item.module;\r\n/******/ \t\t\thotCurrentParents = [moduleId];\r\n/******/ \t\t\ttry {\r\n/******/ \t\t\t\t__webpack_require__(moduleId);\r\n/******/ \t\t\t} catch(err) {\r\n/******/ \t\t\t\tif(typeof item.errorHandler === \"function\") {\r\n/******/ \t\t\t\t\ttry {\r\n/******/ \t\t\t\t\t\titem.errorHandler(err);\r\n/******/ \t\t\t\t\t} catch(err) {\r\n/******/ \t\t\t\t\t\tif(!error)\r\n/******/ \t\t\t\t\t\t\terror = err;\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t} else if(!error)\r\n/******/ \t\t\t\t\terror = err;\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// handle errors in accept handlers and self accepted module load\r\n/******/ \t\tif(error) {\r\n/******/ \t\t\thotSetStatus(\"fail\");\r\n/******/ \t\t\treturn callback(error);\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\thotSetStatus(\"idle\");\r\n/******/ \t\tcallback(null, outdatedModules);\r\n/******/ \t}\r\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false,\n/******/ \t\t\thot: hotCreateModule(moduleId),\n/******/ \t\t\tparents: hotCurrentParents,\n/******/ \t\t\tchildren: []\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// __webpack_hash__\n/******/ \t__webpack_require__.h = function() { return hotCurrentHash; };\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn hotCreateRequire(0)(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!******************!*\\\n  !*** multi main ***!\n  \\******************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(/*! /Users/devstopfix/Projects/2019/Elixoids/asteroids-graphics/asteroids-renderer/src */1);\n\n\n/***/ }),\n/* 1 */\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(/*! file?name=[name].[ext]!./index.html */ 2);\n\t__webpack_require__(/*! ./app */ 3);\n\n/***/ }),\n/* 2 */\n/*!**********************************************************!*\\\n  !*** ./~/file-loader?name=[name].[ext]!./src/index.html ***!\n  \\**********************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"index.html\";\n\n/***/ }),\n/* 3 */\n/*!********************!*\\\n  !*** ./src/app.js ***!\n  \\********************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _fakeServer = __webpack_require__(/*! ./fakeServer */ 4);\n\t\n\tvar _fakeServer2 = _interopRequireDefault(_fakeServer);\n\t\n\tvar _Server = __webpack_require__(/*! ./Server */ 5);\n\t\n\tvar _Server2 = _interopRequireDefault(_Server);\n\t\n\tvar _Renderer = __webpack_require__(/*! ./Renderer */ 6);\n\t\n\tvar _Renderer2 = _interopRequireDefault(_Renderer);\n\t\n\tvar _transformFrame = __webpack_require__(/*! ./transformFrame */ 59);\n\t\n\tvar _transformFrame2 = _interopRequireDefault(_transformFrame);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar serverDimensions = { WIDTH: 4000, HEIGHT: 2250 };\n\tvar clientDimensions = { WIDTH: 1920, HEIGHT: 1080 };\n\t\n\tvar renderer = new _Renderer2.default(_extends({}, clientDimensions, { FRAME_RATE: 24 }));\n\t//const server = new fakeServer(serverDimensions)\n\tvar server = new _Server2.default();\n\t\n\tserver.on('frame', function (frame) {\n\t    return renderer.update((0, _transformFrame2.default)(frame, transformRatio, serverDimensions));\n\t});\n\t\n\tvar transformRatio = {\n\t    WIDTH: serverDimensions.WIDTH / clientDimensions.WIDTH,\n\t    HEIGHT: serverDimensions.HEIGHT / clientDimensions.HEIGHT\n\t\n\t    // window.onblur = () => {  renderer.pause(); }\n\t    // window.onfocus = () => { renderer.resume(); }\n\t\n\t};renderer.start();\n\tserver.connect();\n\n/***/ }),\n/* 4 */\n/*!***************************!*\\\n  !*** ./src/fakeServer.js ***!\n  \\***************************/\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = fakeServer;\n\t\n\t\n\tfunction getRandomIntBounded(max) {\n\t    return Math.floor(Math.random() * (max + 1));\n\t}\n\t\n\tfunction fakeServer(_ref) {\n\t    var WIDTH = _ref.WIDTH,\n\t        HEIGHT = _ref.HEIGHT;\n\t\n\t    var that = this;\n\t    this.subscribers = {};\n\t    this.FRAME_RATE = 10;\n\t\n\t    var randomHexColour = function randomHexColour() {\n\t        return Math.floor(Math.random() * 16777215).toString(16);\n\t    };\n\t\n\t    function generateAsteroid(id) {\n\t        return [id, getRandomIntBounded(WIDTH), getRandomIntBounded(HEIGHT), Math.random() * 50];\n\t    }\n\t\n\t    function generateShip(id) {\n\t        return [id, getRandomIntBounded(WIDTH), getRandomIntBounded(HEIGHT), 20, 0, randomHexColour()];\n\t    }\n\t\n\t    function generateExplosion() {\n\t        return [getRandomIntBounded(WIDTH), getRandomIntBounded(HEIGHT)];\n\t    }\n\t\n\t    function moveAsteroid(_ref2) {\n\t        var _ref3 = _slicedToArray(_ref2, 4),\n\t            id = _ref3[0],\n\t            x = _ref3[1],\n\t            y = _ref3[2],\n\t            r = _ref3[3];\n\t\n\t        return [id, x > WIDTH ? 0 : x + 3, y > HEIGHT ? 0 : y + 3, r];\n\t    }\n\t\n\t    function rotateShip(_ref4) {\n\t        var _ref5 = _slicedToArray(_ref4, 6),\n\t            id = _ref5[0],\n\t            x = _ref5[1],\n\t            y = _ref5[2],\n\t            r = _ref5[3],\n\t            t = _ref5[4],\n\t            col = _ref5[5];\n\t\n\t        return [id, x, y, r, t + Math.random() - 0.5, col];\n\t    }\n\t\n\t    this.state = {\n\t        a: [generateAsteroid(1), generateAsteroid(2), generateAsteroid(3), generateAsteroid(4), generateAsteroid(5), generateAsteroid(6)],\n\t        s: [generateShip('AAA'), generateShip('BBB'), generateShip('CCC'), generateShip('DDD'), generateShip('EEE'), generateShip('FFF')],\n\t        x: []\n\t    };\n\t\n\t    var stateReducer = function stateReducer(state) {\n\t        return _extends({}, state, {\n\t            a: state.a.map(moveAsteroid),\n\t            s: state.s.map(rotateShip),\n\t            x: [generateExplosion()]\n\t        });\n\t    };\n\t\n\t    this.getNextFrame = function () {\n\t        this.state = stateReducer(this.state);\n\t\n\t        //console.table(this.state);\n\t        return this.state;\n\t    };\n\t\n\t    this.on = function (event, callback) {\n\t        that.subscribers[event] = that.subscribers[event] || [];\n\t        that.subscribers[event].push(callback);\n\t    };\n\t\n\t    this.connect = function () {\n\t        function render(frame) {\n\t            if (that.subscribers['frame']) {\n\t                that.subscribers.frame.forEach(function (callback) {\n\t                    return callback(frame);\n\t                });\n\t            }\n\t\n\t            setTimeout(function () {\n\t                render(that.getNextFrame());\n\t            }, 1000 / that.FRAME_RATE);\n\t        }\n\t\n\t        render(that.getNextFrame());\n\t    };\n\t\n\t    return this;\n\t};\n\n/***/ }),\n/* 5 */\n/*!***********************!*\\\n  !*** ./src/Server.js ***!\n  \\***********************/\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Server = function () {\n\t    function Server() {\n\t        _classCallCheck(this, Server);\n\t\n\t        this.subscribers = {};\n\t    }\n\t\n\t    _createClass(Server, [{\n\t        key: 'connect',\n\t        value: function connect() {\n\t            var _this = this;\n\t\n\t            var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ws://localhost:8065/websocket';\n\t\n\t            var onOpen = function onOpen(event) {\n\t                return console.log('WebSocket: Open');\n\t            };\n\t            var onClose = function onClose(event) {\n\t                return console.log('WebSocket: Closed');\n\t            };\n\t\n\t            this.websocket = new WebSocket(url);\n\t            this.websocket.onopen = function (event) {\n\t                onOpen(event);\n\t            };\n\t            this.websocket.onclose = function (event) {\n\t                onClose(event);\n\t            };\n\t            this.websocket.onmessage = function (event) {\n\t                _this.onMessage(event);\n\t            };\n\t        }\n\t    }, {\n\t        key: 'onMessage',\n\t        value: function onMessage(event) {\n\t            //console.log('WebSocket: Message', event.data)\n\t            var message = JSON.parse(event.data);\n\t            message.s = message.s || [];\n\t            message.x = message.x || [];\n\t\n\t            if (this.subscribers['frame']) {\n\t                this.subscribers.frame.forEach(function (callback) {\n\t                    return callback(message);\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'on',\n\t        value: function on(eventName, callback) {\n\t            this.subscribers[eventName] = this.subscribers[event] || [];\n\t            this.subscribers[eventName].push(callback);\n\t        }\n\t    }, {\n\t        key: 'disconnect',\n\t        value: function disconnect() {\n\t            this.websocket.close();\n\t        }\n\t    }]);\n\t\n\t    return Server;\n\t}();\n\t\n\texports.default = Server;\n\n/***/ }),\n/* 6 */\n/*!*************************!*\\\n  !*** ./src/Renderer.js ***!\n  \\*************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _fabric = __webpack_require__(/*! fabric */ 7);\n\t\n\tvar _Asteroid = __webpack_require__(/*! ./Asteroid */ 52);\n\t\n\tvar _Asteroid2 = _interopRequireDefault(_Asteroid);\n\t\n\tvar _Ship = __webpack_require__(/*! ./Ship */ 55);\n\t\n\tvar _Ship2 = _interopRequireDefault(_Ship);\n\t\n\tvar _Explosion = __webpack_require__(/*! ./Explosion */ 56);\n\t\n\tvar _Explosion2 = _interopRequireDefault(_Explosion);\n\t\n\tvar _Bullet = __webpack_require__(/*! ./Bullet */ 57);\n\t\n\tvar _Bullet2 = _interopRequireDefault(_Bullet);\n\t\n\tvar _FpsCounter = __webpack_require__(/*! ./FpsCounter */ 58);\n\t\n\tvar _FpsCounter2 = _interopRequireDefault(_FpsCounter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Renderer = function () {\n\t    function Renderer(_ref) {\n\t        var _this = this;\n\t\n\t        var FRAME_RATE = _ref.FRAME_RATE,\n\t            WIDTH = _ref.WIDTH,\n\t            HEIGHT = _ref.HEIGHT;\n\t\n\t        _classCallCheck(this, Renderer);\n\t\n\t        this.FRAME_RATE = FRAME_RATE;\n\t        this.state = { asteroids: {}, ships: {}, bullets: {} };\n\t        this.canvas = new _fabric.fabric.Canvas('c');\n\t        this.canvas.renderOnAddRemove = false;\n\t        this.canvas.stateful = false;\n\t\n\t        this.canvas.setWidth(WIDTH);\n\t        this.canvas.setHeight(HEIGHT);\n\t        this.canvas.setBackgroundColor('000000');\n\t        this.canvas.calcOffset();\n\t\n\t        document.addEventListener(\"keydown\", function (e) {\n\t            if (e.keyCode == 13) {\n\t                _this.goFullscreen();\n\t            }\n\t        }, false);\n\t    }\n\t\n\t    _createClass(Renderer, [{\n\t        key: 'goFullscreen',\n\t        value: function goFullscreen() {\n\t            var canvas = this.canvas.getSelectionElement().parentNode;\n\t            if (canvas.requestFullScreen) {\n\t                canvas.requestFullScreen();\n\t            } else if (canvas.webkitRequestFullScreen) {\n\t                canvas.webkitRequestFullScreen();\n\t            } else if (canvas.mozRequestFullScreen) {\n\t                canvas.mozRequestFullScreen();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getOrAddAsteroid',\n\t        value: function getOrAddAsteroid(roid) {\n\t            var theRoid = this.state.asteroids[roid.id] || new _Asteroid2.default(roid, this.canvas);\n\t            this.state.asteroids[theRoid.id] = theRoid;\n\t            return theRoid;\n\t        }\n\t    }, {\n\t        key: 'getOrAddShip',\n\t        value: function getOrAddShip(ship) {\n\t            var theShip = this.state.ships[ship.id] || new _Ship2.default(ship, this.canvas);\n\t            this.state.ships[theShip.id] = theShip;\n\t            return theShip;\n\t        }\n\t    }, {\n\t        key: 'getOrAddBullet',\n\t        value: function getOrAddBullet(bullet) {\n\t            var theBullet = this.state.bullets[bullet.id] || new _Bullet2.default(bullet, this.canvas);\n\t            this.state.bullets[theBullet.id] = theBullet;\n\t            return theBullet;\n\t        }\n\t    }, {\n\t        key: 'updateAsteroids',\n\t        value: function updateAsteroids(asteroids) {\n\t            var _this2 = this;\n\t\n\t            var deadAsteroidIds = Object.keys(this.state.asteroids).filter(function (existingId) {\n\t                return !asteroids.some(function (_ref2) {\n\t                    var id = _ref2.id;\n\t                    return id == existingId;\n\t                });\n\t            });\n\t            deadAsteroidIds.forEach(function (id) {\n\t                _this2.state.asteroids[id].remove();\n\t                delete _this2.state.asteroids[id];\n\t            });\n\t\n\t            asteroids.forEach(function (roid) {\n\t                return _this2.getOrAddAsteroid(roid).update(roid, 1000 / _this2.FRAME_RATE);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'updateShips',\n\t        value: function updateShips(ships) {\n\t            var _this3 = this;\n\t\n\t            ships.forEach(function (ship) {\n\t                return _this3.getOrAddShip(ship).update(ship, 1000 / _this3.FRAME_RATE);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'updateExplosions',\n\t        value: function updateExplosions(explosions) {\n\t            var _this4 = this;\n\t\n\t            explosions.forEach(function (splosion) {\n\t                return new _Explosion2.default(splosion, _this4.canvas);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'updateBullets',\n\t        value: function updateBullets(bullets) {\n\t            var _this5 = this;\n\t\n\t            Object.keys(this.state.bullets).forEach(function (id) {\n\t                _this5.state.bullets[id].remove();\n\t                delete _this5.state.bullets[id];\n\t            });\n\t            bullets.forEach(function (bullet) {\n\t                return _this5.getOrAddBullet(bullet).update(bullet);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(frame) {\n\t            if (!this.paused) {\n\t                //console.log(frame);\n\t                this.updateAsteroids(frame.asteroids);\n\t                this.updateShips(frame.ships);\n\t                this.updateExplosions(frame.explosions);\n\t                this.updateBullets(frame.bullets);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'start',\n\t        value: function start() {\n\t            var _this6 = this;\n\t\n\t            var fpsCounter = new _FpsCounter2.default(this.canvas);\n\t\n\t            var step = function step(timestamp) {\n\t                fpsCounter.update();\n\t\n\t                _fabric.fabric.util.requestAnimFrame(step, _this6.canvas.getElement());\n\t                _this6.canvas.renderAll();\n\t            };\n\t\n\t            step();\n\t        }\n\t    }, {\n\t        key: 'pause',\n\t        value: function pause() {\n\t            this.paused = true;\n\t        }\n\t    }, {\n\t        key: 'resume',\n\t        value: function resume() {\n\t            this.paused = false;\n\t        }\n\t    }]);\n\t\n\t    return Renderer;\n\t}();\n\t\n\texports.default = Renderer;\n\n/***/ }),\n/* 7 */\n/*!*********************************!*\\\n  !*** ./~/fabric/dist/fabric.js ***!\n  \\*********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, process) {/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n\t /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\t\n\tvar fabric = fabric || { version: \"1.7.22\" };\n\tif (true) {\n\t  exports.fabric = fabric;\n\t}\n\t\n\tif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t  fabric.document = document;\n\t  fabric.window = window;\n\t  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n\t  window.fabric = fabric;\n\t}\n\telse {\n\t  // assume we're running under node.js when document/window are not present\n\t  fabric.document = __webpack_require__(/*! jsdom */ 13)\n\t    .jsdom(\n\t      decodeURIComponent(\"%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E\")\n\t    );\n\t\n\t  if (fabric.document.createWindow) {\n\t    fabric.window = fabric.document.createWindow();\n\t  } else {\n\t    fabric.window = fabric.document.parentWindow;\n\t  }\n\t}\n\t\n\t/**\n\t * True when in environment that supports touch events\n\t * @type boolean\n\t */\n\t\n\tfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\t\n\t/**\n\t * True when in environment that's probably Node.js\n\t * @type boolean\n\t */\n\tfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n\t                      typeof window === 'undefined';\n\t\n\t/* _FROM_SVG_START_ */\n\t/**\n\t * Attributes parsed from all SVG elements\n\t * @type array\n\t */\n\tfabric.SHARED_ATTRIBUTES = [\n\t  \"display\",\n\t  \"transform\",\n\t  \"fill\", \"fill-opacity\", \"fill-rule\",\n\t  \"opacity\",\n\t  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n\t  \"stroke-linejoin\", \"stroke-miterlimit\",\n\t  \"stroke-opacity\", \"stroke-width\",\n\t  \"id\"\n\t];\n\t/* _FROM_SVG_END_ */\n\t\n\t/**\n\t * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n\t */\n\tfabric.DPI = 96;\n\tfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\n\tfabric.fontPaths = { };\n\tfabric.iMatrix = [1, 0, 0, 1, 0, 0];\n\tfabric.canvasModule = 'canvas';\n\t\n\t/**\n\t * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n\t * @since 1.7.14\n\t * @type Number\n\t * @default\n\t */\n\tfabric.perfLimitSizeTotal = 2097152;\n\t\n\t/**\n\t * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n\t * @since 1.7.14\n\t * @type Number\n\t * @default\n\t */\n\tfabric.maxCacheSideLimit = 4096;\n\t\n\t/**\n\t * Lowest pixel limit for cache canvases, set at 256PX\n\t * @since 1.7.14\n\t * @type Number\n\t * @default\n\t */\n\tfabric.minCacheSideLimit = 256;\n\t\n\t/**\n\t * Cache Object for widths of chars in text rendering.\n\t */\n\tfabric.charWidthsCache = { };\n\t\n\t/**\n\t * Device Pixel Ratio\n\t * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n\t */\n\tfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n\t                          fabric.window.webkitDevicePixelRatio ||\n\t                          fabric.window.mozDevicePixelRatio ||\n\t                          1;\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  function _removeEventListener(eventName, handler) {\n\t    if (!this.__eventListeners[eventName]) {\n\t      return;\n\t    }\n\t    var eventListener = this.__eventListeners[eventName];\n\t    if (handler) {\n\t      eventListener[eventListener.indexOf(handler)] = false;\n\t    }\n\t    else {\n\t      fabric.util.array.fill(eventListener, false);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Observes specified event\n\t   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias on\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function observe(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      this.__eventListeners = { };\n\t    }\n\t    // one object with key/value pairs was passed\n\t    if (arguments.length === 1) {\n\t      for (var prop in eventName) {\n\t        this.on(prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      if (!this.__eventListeners[eventName]) {\n\t        this.__eventListeners[eventName] = [];\n\t      }\n\t      this.__eventListeners[eventName].push(handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Stops event observing for a particular event handler. Calling this method\n\t   * without arguments removes all handlers for all events\n\t   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias off\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function to be deleted from EventListeners\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function stopObserving(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    // remove all key/value pairs (event name -> event handler)\n\t    if (arguments.length === 0) {\n\t      for (eventName in this.__eventListeners) {\n\t        _removeEventListener.call(this, eventName);\n\t      }\n\t    }\n\t    // one object with key/value pairs was passed\n\t    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n\t      for (var prop in eventName) {\n\t        _removeEventListener.call(this, prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      _removeEventListener.call(this, eventName, handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Fires event with an optional options object\n\t   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias trigger\n\t   * @param {String} eventName Event name to fire\n\t   * @param {Object} [options] Options object\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function fire(eventName, options) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    var listenersForEvent = this.__eventListeners[eventName];\n\t    if (!listenersForEvent) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n\t      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n\t    }\n\t    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n\t      return value !== false;\n\t    });\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.Observable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n\t   * @see {@link http://fabricjs.com/events|Events demo}\n\t   */\n\t  fabric.Observable = {\n\t    observe: observe,\n\t    stopObserving: stopObserving,\n\t    fire: fire,\n\t\n\t    on: observe,\n\t    off: stopObserving,\n\t    trigger: fire\n\t  };\n\t})();\n\t\n\t\n\t/**\n\t * @namespace fabric.Collection\n\t */\n\tfabric.Collection = {\n\t\n\t  _objects: [],\n\t\n\t  /**\n\t   * Adds objects to collection, Canvas or Group, then renders canvas\n\t   * (if `renderOnAddRemove` is not `false`).\n\t   * in case of Group no changes to bounding box are made.\n\t   * Objects should be instances of (or inherit from) fabric.Object\n\t   * Use of this function is highly discouraged for groups.\n\t   * you can add a bunch of objects with the add method but then you NEED\n\t   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  add: function () {\n\t    this._objects.push.apply(this._objects, arguments);\n\t    if (this._onObjectAdded) {\n\t      for (var i = 0, length = arguments.length; i < length; i++) {\n\t        this._onObjectAdded(arguments[i]);\n\t      }\n\t    }\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * An object should be an instance of (or inherit from) fabric.Object\n\t   * Use of this function is highly discouraged for groups.\n\t   * you can add a bunch of objects with the insertAt method but then you NEED\n\t   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n\t   * @param {Object} object Object to insert\n\t   * @param {Number} index Index to insert object at\n\t   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  insertAt: function (object, index, nonSplicing) {\n\t    var objects = this.getObjects();\n\t    if (nonSplicing) {\n\t      objects[index] = object;\n\t    }\n\t    else {\n\t      objects.splice(index, 0, object);\n\t    }\n\t    this._onObjectAdded && this._onObjectAdded(object);\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  remove: function() {\n\t    var objects = this.getObjects(),\n\t        index, somethingRemoved = false;\n\t\n\t    for (var i = 0, length = arguments.length; i < length; i++) {\n\t      index = objects.indexOf(arguments[i]);\n\t\n\t      // only call onObjectRemoved if an object was actually removed\n\t      if (index !== -1) {\n\t        somethingRemoved = true;\n\t        objects.splice(index, 1);\n\t        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n\t      }\n\t    }\n\t\n\t    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Executes given function for each object in this group\n\t   * @param {Function} callback\n\t   *                   Callback invoked with current object as first argument,\n\t   *                   index - as second and an array of all objects - as third.\n\t   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n\t   *                   when no `context` argument is given\n\t   *\n\t   * @param {Object} context Context (aka thisObject)\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  forEachObject: function(callback, context) {\n\t    var objects = this.getObjects();\n\t    for (var i = 0, len = objects.length; i < len; i++) {\n\t      callback.call(context, objects[i], i, objects);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Returns an array of children objects of this instance\n\t   * Type parameter introduced in 1.3.10\n\t   * @param {String} [type] When specified, only objects of this type are returned\n\t   * @return {Array}\n\t   */\n\t  getObjects: function(type) {\n\t    if (typeof type === 'undefined') {\n\t      return this._objects;\n\t    }\n\t    return this._objects.filter(function(o) {\n\t      return o.type === type;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Returns object at specified index\n\t   * @param {Number} index\n\t   * @return {Self} thisArg\n\t   */\n\t  item: function (index) {\n\t    return this.getObjects()[index];\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains no objects\n\t   * @return {Boolean} true if collection is empty\n\t   */\n\t  isEmpty: function () {\n\t    return this.getObjects().length === 0;\n\t  },\n\t\n\t  /**\n\t   * Returns a size of a collection (i.e: length of an array containing its objects)\n\t   * @return {Number} Collection size\n\t   */\n\t  size: function() {\n\t    return this.getObjects().length;\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains an object\n\t   * @param {Object} object Object to check against\n\t   * @return {Boolean} `true` if collection contains an object\n\t   */\n\t  contains: function(object) {\n\t    return this.getObjects().indexOf(object) > -1;\n\t  },\n\t\n\t  /**\n\t   * Returns number representation of a collection complexity\n\t   * @return {Number} complexity\n\t   */\n\t  complexity: function () {\n\t    return this.getObjects().reduce(function (memo, current) {\n\t      memo += current.complexity ? current.complexity() : 0;\n\t      return memo;\n\t    }, 0);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * @namespace fabric.CommonMethods\n\t */\n\tfabric.CommonMethods = {\n\t\n\t  /**\n\t   * Sets object's properties from options\n\t   * @param {Object} [options] Options object\n\t   */\n\t  _setOptions: function(options) {\n\t    for (var prop in options) {\n\t      this.set(prop, options[prop]);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} [filler] Options object\n\t   * @param {String} [property] property to set the Gradient to\n\t   */\n\t  _initGradient: function(filler, property) {\n\t    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n\t      this.set(property, new fabric.Gradient(filler));\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} [filler] Options object\n\t   * @param {String} [property] property to set the Pattern to\n\t   * @param {Function} [callback] callback to invoke after pattern load\n\t   */\n\t  _initPattern: function(filler, property, callback) {\n\t    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n\t      this.set(property, new fabric.Pattern(filler, callback));\n\t    }\n\t    else {\n\t      callback && callback();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} [options] Options object\n\t   */\n\t  _initClipping: function(options) {\n\t    if (!options.clipTo || typeof options.clipTo !== 'string') {\n\t      return;\n\t    }\n\t\n\t    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\t    if (typeof functionBody !== 'undefined') {\n\t      this.clipTo = new Function('ctx', functionBody);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _setObject: function(obj) {\n\t    for (var prop in obj) {\n\t      this._set(prop, obj[prop]);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n\t   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n\t   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  set: function(key, value) {\n\t    if (typeof key === 'object') {\n\t      this._setObject(key);\n\t    }\n\t    else {\n\t      if (typeof value === 'function' && key !== 'clipTo') {\n\t        this._set(key, value(this.get(key)));\n\t      }\n\t      else {\n\t        this._set(key, value);\n\t      }\n\t    }\n\t    return this;\n\t  },\n\t\n\t  _set: function(key, value) {\n\t    this[key] = value;\n\t  },\n\t\n\t  /**\n\t   * Toggles specified property from `true` to `false` or from `false` to `true`\n\t   * @param {String} property Property to toggle\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  toggle: function(property) {\n\t    var value = this.get(property);\n\t    if (typeof value === 'boolean') {\n\t      this.set(property, !value);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Basic getter\n\t   * @param {String} property Property name\n\t   * @return {*} value of a property\n\t   */\n\t  get: function(property) {\n\t    return this[property];\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  var sqrt = Math.sqrt,\n\t      atan2 = Math.atan2,\n\t      pow = Math.pow,\n\t      abs = Math.abs,\n\t      PiBy180 = Math.PI / 180;\n\t\n\t  /**\n\t   * @namespace fabric.util\n\t   */\n\t  fabric.util = {\n\t\n\t    /**\n\t     * Removes value from an array.\n\t     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} array\n\t     * @param {*} value\n\t     * @return {Array} original array\n\t     */\n\t    removeFromArray: function(array, value) {\n\t      var idx = array.indexOf(value);\n\t      if (idx !== -1) {\n\t        array.splice(idx, 1);\n\t      }\n\t      return array;\n\t    },\n\t\n\t    /**\n\t     * Returns random number between 2 specified ones.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} min lower limit\n\t     * @param {Number} max upper limit\n\t     * @return {Number} random value (between min and max)\n\t     */\n\t    getRandomInt: function(min, max) {\n\t      return Math.floor(Math.random() * (max - min + 1)) + min;\n\t    },\n\t\n\t    /**\n\t     * Transforms degrees to radians.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} degrees value in degrees\n\t     * @return {Number} value in radians\n\t     */\n\t    degreesToRadians: function(degrees) {\n\t      return degrees * PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Transforms radians to degrees.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} radians value in radians\n\t     * @return {Number} value in degrees\n\t     */\n\t    radiansToDegrees: function(radians) {\n\t      return radians / PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Rotates `point` around `origin` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Point} point The point to rotate\n\t     * @param {fabric.Point} origin The origin of the rotation\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {fabric.Point} The new rotated point\n\t     */\n\t    rotatePoint: function(point, origin, radians) {\n\t      point.subtractEquals(origin);\n\t      var v = fabric.util.rotateVector(point, radians);\n\t      return new fabric.Point(v.x, v.y).addEquals(origin);\n\t    },\n\t\n\t    /**\n\t     * Rotates `vector` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} vector The vector to rotate (x and y)\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {Object} The new rotated point\n\t     */\n\t    rotateVector: function(vector, radians) {\n\t      var sin = Math.sin(radians),\n\t          cos = Math.cos(radians),\n\t          rx = vector.x * cos - vector.y * sin,\n\t          ry = vector.x * sin + vector.y * cos;\n\t      return {\n\t        x: rx,\n\t        y: ry\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Apply transform t to point p\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {fabric.Point} p The point to transform\n\t     * @param  {Array} t The transform\n\t     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n\t     * @return {fabric.Point} The transformed point\n\t     */\n\t    transformPoint: function(p, t, ignoreOffset) {\n\t      if (ignoreOffset) {\n\t        return new fabric.Point(\n\t          t[0] * p.x + t[2] * p.y,\n\t          t[1] * p.x + t[3] * p.y\n\t        );\n\t      }\n\t      return new fabric.Point(\n\t        t[0] * p.x + t[2] * p.y + t[4],\n\t        t[1] * p.x + t[3] * p.y + t[5]\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n\t     * @param {Array} points 4 points array\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    makeBoundingBoxFromPoints: function(points) {\n\t      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n\t          minX = fabric.util.array.min(xPoints),\n\t          maxX = fabric.util.array.max(xPoints),\n\t          width = Math.abs(minX - maxX),\n\t          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n\t          minY = fabric.util.array.min(yPoints),\n\t          maxY = fabric.util.array.max(yPoints),\n\t          height = Math.abs(minY - maxY);\n\t\n\t      return {\n\t        left: minX,\n\t        top: minY,\n\t        width: width,\n\t        height: height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Invert transformation t\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} t The transform\n\t     * @return {Array} The inverted transform\n\t     */\n\t    invertTransform: function(t) {\n\t      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n\t          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n\t          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n\t      r[4] = -o.x;\n\t      r[5] = -o.y;\n\t      return r;\n\t    },\n\t\n\t    /**\n\t     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number|String} number number to operate on\n\t     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n\t     * @return {Number}\n\t     */\n\t    toFixed: function(number, fractionDigits) {\n\t      return parseFloat(Number(number).toFixed(fractionDigits));\n\t    },\n\t\n\t    /**\n\t     * Converts from attribute value to pixel value if applicable.\n\t     * Returns converted pixels or original value not converted.\n\t     * @param {Number|String} value number to operate on\n\t     * @param {Number} fontSize\n\t     * @return {Number|String}\n\t     */\n\t    parseUnit: function(value, fontSize) {\n\t      var unit = /\\D{0,2}$/.exec(value),\n\t          number = parseFloat(value);\n\t      if (!fontSize) {\n\t        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t      }\n\t      switch (unit[0]) {\n\t        case 'mm':\n\t          return number * fabric.DPI / 25.4;\n\t\n\t        case 'cm':\n\t          return number * fabric.DPI / 2.54;\n\t\n\t        case 'in':\n\t          return number * fabric.DPI;\n\t\n\t        case 'pt':\n\t          return number * fabric.DPI / 72; // or * 4 / 3\n\t\n\t        case 'pc':\n\t          return number * fabric.DPI / 72 * 12; // or * 16\n\t\n\t        case 'em':\n\t          return number * fontSize;\n\t\n\t        default:\n\t          return number;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Function which always returns `false`.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {Boolean}\n\t     */\n\t    falseFunction: function() {\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Returns klass \"Class\" object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} type Type of object (eg. 'circle')\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @return {Object} klass \"Class\"\n\t     */\n\t    getKlass: function(type, namespace) {\n\t      // capitalize first letter only\n\t      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n\t      return fabric.util.resolveNamespace(namespace)[type];\n\t    },\n\t\n\t    /**\n\t     * Returns object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n\t     * @return {Object} Object for given namespace (default fabric)\n\t     */\n\t    resolveNamespace: function(namespace) {\n\t      if (!namespace) {\n\t        return fabric;\n\t      }\n\t\n\t      var parts = namespace.split('.'),\n\t          len = parts.length, i,\n\t          obj = global || fabric.window;\n\t\n\t      for (i = 0; i < len; ++i) {\n\t        obj = obj[parts[i]];\n\t      }\n\t\n\t      return obj;\n\t    },\n\t\n\t    /**\n\t     * Loads image element from given url and passes it to a callback\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL representing an image\n\t     * @param {Function} callback Callback; invoked with loaded image\n\t     * @param {*} [context] Context to invoke callback in\n\t     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n\t     */\n\t    loadImage: function(url, callback, context, crossOrigin) {\n\t      if (!url) {\n\t        callback && callback.call(context, url);\n\t        return;\n\t      }\n\t\n\t      var img = fabric.util.createImage();\n\t\n\t      /** @ignore */\n\t      img.onload = function () {\n\t        callback && callback.call(context, img);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      /** @ignore */\n\t      img.onerror = function() {\n\t        fabric.log('Error loading ' + img.src);\n\t        callback && callback.call(context, null, true);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      // data-urls appear to be buggy with crossOrigin\n\t      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n\t      // see https://code.google.com/p/chromium/issues/detail?id=315152\n\t      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\t      if (url.indexOf('data') !== 0 && crossOrigin) {\n\t        img.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      img.src = url;\n\t    },\n\t\n\t    /**\n\t     * Creates corresponding fabric instances from their object representations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} objects Objects to enliven\n\t     * @param {Function} callback Callback to invoke when all objects are created\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @param {Function} reviver Method for further parsing of object elements,\n\t     * called after each fabric object created.\n\t     */\n\t    enlivenObjects: function(objects, callback, namespace, reviver) {\n\t      objects = objects || [];\n\t\n\t      function onLoaded() {\n\t        if (++numLoadedObjects === numTotalObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }\n\t      }\n\t\n\t      var enlivenedObjects = [],\n\t          numLoadedObjects = 0,\n\t          numTotalObjects = objects.length,\n\t          forceAsync = true;\n\t\n\t      if (!numTotalObjects) {\n\t        callback && callback(enlivenedObjects);\n\t        return;\n\t      }\n\t\n\t      objects.forEach(function (o, index) {\n\t        // if sparse array\n\t        if (!o || !o.type) {\n\t          onLoaded();\n\t          return;\n\t        }\n\t        var klass = fabric.util.getKlass(o.type, namespace);\n\t        klass.fromObject(o, function (obj, error) {\n\t          error || (enlivenedObjects[index] = obj);\n\t          reviver && reviver(o, obj, error);\n\t          onLoaded();\n\t        }, forceAsync);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Create and wait for loading of patterns\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} objects Objects to enliven\n\t     * @param {Function} callback Callback to invoke when all objects are created\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @param {Function} reviver Method for further parsing of object elements,\n\t     * called after each fabric object created.\n\t     */\n\t    enlivenPatterns: function(patterns, callback) {\n\t      patterns = patterns || [];\n\t\n\t      function onLoaded() {\n\t        if (++numLoadedPatterns === numPatterns) {\n\t          callback && callback(enlivenedPatterns);\n\t        }\n\t      }\n\t\n\t      var enlivenedPatterns = [],\n\t          numLoadedPatterns = 0,\n\t          numPatterns = patterns.length;\n\t\n\t      if (!numPatterns) {\n\t        callback && callback(enlivenedPatterns);\n\t        return;\n\t      }\n\t\n\t      patterns.forEach(function (p, index) {\n\t        if (p && p.source) {\n\t          new fabric.Pattern(p, function(pattern) {\n\t            enlivenedPatterns[index] = pattern;\n\t            onLoaded();\n\t          });\n\t        }\n\t        else {\n\t          enlivenedPatterns[index] = p;\n\t          onLoaded();\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Groups SVG elements (usually those retrieved from SVG document)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} elements SVG elements to group\n\t     * @param {Object} [options] Options object\n\t     * @param {String} path Value to set sourcePath to\n\t     * @return {fabric.Object|fabric.PathGroup}\n\t     */\n\t    groupSVGElements: function(elements, options, path) {\n\t      var object;\n\t\n\t      object = new fabric.PathGroup(elements, options);\n\t\n\t      if (typeof path !== 'undefined') {\n\t        object.sourcePath = path;\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Populates an object with properties of another object\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} source Source object\n\t     * @param {Object} destination Destination object\n\t     * @return {Array} properties Propertie names to include\n\t     */\n\t    populateWithProperties: function(source, destination, properties) {\n\t      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n\t        for (var i = 0, len = properties.length; i < len; i++) {\n\t          if (properties[i] in source) {\n\t            destination[properties[i]] = source[properties[i]];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Draws a dashed line between two points\n\t     *\n\t     * This method is used to draw dashed line around selection area.\n\t     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x  start x coordinate\n\t     * @param {Number} y start y coordinate\n\t     * @param {Number} x2 end x coordinate\n\t     * @param {Number} y2 end y coordinate\n\t     * @param {Array} da dash array pattern\n\t     */\n\t    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n\t      var dx = x2 - x,\n\t          dy = y2 - y,\n\t          len = sqrt(dx * dx + dy * dy),\n\t          rot = atan2(dy, dx),\n\t          dc = da.length,\n\t          di = 0,\n\t          draw = true;\n\t\n\t      ctx.save();\n\t      ctx.translate(x, y);\n\t      ctx.moveTo(0, 0);\n\t      ctx.rotate(rot);\n\t\n\t      x = 0;\n\t      while (len > x) {\n\t        x += da[di++ % dc];\n\t        if (x > len) {\n\t          x = len;\n\t        }\n\t        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n\t        draw = !draw;\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Creates canvas element and initializes it via excanvas if necessary\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n\t     * when not given, element is created implicitly\n\t     * @return {CanvasElement} initialized canvas element\n\t     */\n\t    createCanvasElement: function(canvasEl) {\n\t      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n\t      /* eslint-disable camelcase */\n\t      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n\t        G_vmlCanvasManager.initElement(canvasEl);\n\t      }\n\t      /* eslint-enable camelcase */\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * Creates image element (works on client and node)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {HTMLImageElement} HTML image element\n\t     */\n\t    createImage: function() {\n\t      return fabric.isLikelyNode\n\t        ? new (__webpack_require__(/*! canvas */ 14).Image)()\n\t        : fabric.document.createElement('img');\n\t    },\n\t\n\t    /**\n\t     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} klass \"Class\" to create accessors for\n\t     */\n\t    createAccessors: function(klass) {\n\t      var proto = klass.prototype, i, propName,\n\t          capitalizedPropName, setterName, getterName;\n\t\n\t      for (i = proto.stateProperties.length; i--; ) {\n\t\n\t        propName = proto.stateProperties[i];\n\t        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n\t        setterName = 'set' + capitalizedPropName;\n\t        getterName = 'get' + capitalizedPropName;\n\t\n\t        // using `new Function` for better introspection\n\t        if (!proto[getterName]) {\n\t          proto[getterName] = (function(property) {\n\t            return new Function('return this.get(\"' + property + '\")');\n\t          })(propName);\n\t        }\n\t        if (!proto[setterName]) {\n\t          proto[setterName] = (function(property) {\n\t            return new Function('value', 'return this.set(\"' + property + '\", value)');\n\t          })(propName);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Object} receiver Object implementing `clipTo` method\n\t     * @param {CanvasRenderingContext2D} ctx Context to clip\n\t     */\n\t    clipContext: function(receiver, ctx) {\n\t      ctx.save();\n\t      ctx.beginPath();\n\t      receiver.clipTo(ctx);\n\t      ctx.clip();\n\t    },\n\t\n\t    /**\n\t     * Multiply matrix A by matrix B to nest transformations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a First transformMatrix\n\t     * @param  {Array} b Second transformMatrix\n\t     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n\t     * @return {Array} The product of the two transform matrices\n\t     */\n\t    multiplyTransformMatrices: function(a, b, is2x2) {\n\t      // Matrix multiply a * b\n\t      return [\n\t        a[0] * b[0] + a[2] * b[1],\n\t        a[1] * b[0] + a[3] * b[1],\n\t        a[0] * b[2] + a[2] * b[3],\n\t        a[1] * b[2] + a[3] * b[3],\n\t        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n\t        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Decomposes standard 2x2 matrix into transform componentes\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a transformMatrix\n\t     * @return {Object} Components of transform\n\t     */\n\t    qrDecompose: function(a) {\n\t      var angle = atan2(a[1], a[0]),\n\t          denom = pow(a[0], 2) + pow(a[1], 2),\n\t          scaleX = sqrt(denom),\n\t          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n\t          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n\t      return {\n\t        angle: angle  / PiBy180,\n\t        scaleX: scaleX,\n\t        scaleY: scaleY,\n\t        skewX: skewX / PiBy180,\n\t        skewY: 0,\n\t        translateX: a[4],\n\t        translateY: a[5]\n\t      };\n\t    },\n\t\n\t    customTransformMatrix: function(scaleX, scaleY, skewX) {\n\t      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n\t          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n\t      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n\t    },\n\t\n\t    resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.flipX = false;\n\t      target.flipY = false;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of function body\n\t     * @param {Function} fn Function to get body of\n\t     * @return {String} Function body\n\t     */\n\t    getFunctionBody: function(fn) {\n\t      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n\t    },\n\t\n\t    /**\n\t     * Returns true if context has transparent pixel\n\t     * at specified location (taking tolerance into account)\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x x coordinate\n\t     * @param {Number} y y coordinate\n\t     * @param {Number} tolerance Tolerance\n\t     */\n\t    isTransparent: function(ctx, x, y, tolerance) {\n\t\n\t      // If tolerance is > 0 adjust start coords to take into account.\n\t      // If moves off Canvas fix to 0\n\t      if (tolerance > 0) {\n\t        if (x > tolerance) {\n\t          x -= tolerance;\n\t        }\n\t        else {\n\t          x = 0;\n\t        }\n\t        if (y > tolerance) {\n\t          y -= tolerance;\n\t        }\n\t        else {\n\t          y = 0;\n\t        }\n\t      }\n\t\n\t      var _isTransparent = true, i, temp,\n\t          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n\t          l = imageData.data.length;\n\t\n\t      // Split image data - for tolerance > 1, pixelDataSize = 4;\n\t      for (i = 3; i < l; i += 4) {\n\t        temp = imageData.data[i];\n\t        _isTransparent = temp <= 0;\n\t        if (_isTransparent === false) {\n\t          break; // Stop if colour found\n\t        }\n\t      }\n\t\n\t      imageData = null;\n\t\n\t      return _isTransparent;\n\t    },\n\t\n\t    /**\n\t     * Parse preserveAspectRatio attribute from element\n\t     * @param {string} attribute to be parsed\n\t     * @return {Object} an object containing align and meetOrSlice attribute\n\t     */\n\t    parsePreserveAspectRatioAttribute: function(attribute) {\n\t      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n\t          aspectRatioAttrs = attribute.split(' '), align;\n\t\n\t      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n\t        meetOrSlice = aspectRatioAttrs.pop();\n\t        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n\t          align = meetOrSlice;\n\t          meetOrSlice = 'meet';\n\t        }\n\t        else if (aspectRatioAttrs.length) {\n\t          align = aspectRatioAttrs.pop();\n\t        }\n\t      }\n\t      //divide align in alignX and alignY\n\t      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n\t      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n\t      return {\n\t        meetOrSlice: meetOrSlice,\n\t        alignX: alignX,\n\t        alignY: alignY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Clear char widths cache for a font family.\n\t     * @memberOf fabric.util\n\t     * @param {String} [fontFamily] font family to clear\n\t     */\n\t    clearFabricFontCache: function(fontFamily) {\n\t      if (!fontFamily) {\n\t        fabric.charWidthsCache = { };\n\t      }\n\t      else if (fabric.charWidthsCache[fontFamily]) {\n\t        delete fabric.charWidthsCache[fontFamily];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Clear char widths cache for a font family.\n\t     * @memberOf fabric.util\n\t     * @param {Number} ar aspect ratio\n\t     * @param {Number} maximumArea Maximum area you want to achieve\n\t     * @param {Number} maximumSide biggest side allowed\n\t     * @return {Object.x} Limited dimensions by X\n\t     * @return {Object.y} Limited dimensions by Y\n\t     */\n\t    limitDimsByArea: function(ar, maximumArea) {\n\t      var roughWidth = Math.sqrt(maximumArea * ar),\n\t          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n\t      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n\t    },\n\t\n\t    capValue: function(min, value, max) {\n\t      return Math.max(min, Math.min(value, max));\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var arcToSegmentsCache = { },\n\t      segmentToBezierCache = { },\n\t      boundsOfCurveCache = { },\n\t      _join = Array.prototype.join;\n\t\n\t  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n\t   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n\t   * http://mozilla.org/MPL/2.0/\n\t   */\n\t  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n\t    var argsString = _join.call(arguments);\n\t    if (arcToSegmentsCache[argsString]) {\n\t      return arcToSegmentsCache[argsString];\n\t    }\n\t\n\t    var PI = Math.PI, th = rotateX * PI / 180,\n\t        sinTh = Math.sin(th),\n\t        cosTh = Math.cos(th),\n\t        fromX = 0, fromY = 0;\n\t\n\t    rx = Math.abs(rx);\n\t    ry = Math.abs(ry);\n\t\n\t    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n\t        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n\t        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n\t        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n\t        root = 0;\n\t\n\t    if (pl < 0) {\n\t      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n\t      rx *= s;\n\t      ry *= s;\n\t    }\n\t    else {\n\t      root = (large === sweep ? -1.0 : 1.0) *\n\t              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n\t    }\n\t\n\t    var cx = root * rx * py / ry,\n\t        cy = -root * ry * px / rx,\n\t        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n\t        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n\t        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n\t        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\t\n\t    if (sweep === 0 && dtheta > 0) {\n\t      dtheta -= 2 * PI;\n\t    }\n\t    else if (sweep === 1 && dtheta < 0) {\n\t      dtheta += 2 * PI;\n\t    }\n\t\n\t    // Convert into cubic bezier segments <= 90deg\n\t    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n\t        result = [], mDelta = dtheta / segments,\n\t        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n\t        th3 = mTheta + mDelta;\n\t\n\t    for (var i = 0; i < segments; i++) {\n\t      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n\t      fromX = result[i][4];\n\t      fromY = result[i][5];\n\t      mTheta = th3;\n\t      th3 += mDelta;\n\t    }\n\t    arcToSegmentsCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n\t    var argsString2 = _join.call(arguments);\n\t    if (segmentToBezierCache[argsString2]) {\n\t      return segmentToBezierCache[argsString2];\n\t    }\n\t\n\t    var costh2 = Math.cos(th2),\n\t        sinth2 = Math.sin(th2),\n\t        costh3 = Math.cos(th3),\n\t        sinth3 = Math.sin(th3),\n\t        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n\t        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n\t        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n\t        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n\t        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n\t        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\t\n\t    segmentToBezierCache[argsString2] = [\n\t      cp1X, cp1Y,\n\t      cp2X, cp2Y,\n\t      toX, toY\n\t    ];\n\t    return segmentToBezierCache[argsString2];\n\t  }\n\t\n\t  /*\n\t   * Private\n\t   */\n\t  function calcVectorAngle(ux, uy, vx, vy) {\n\t    var ta = Math.atan2(uy, ux),\n\t        tb = Math.atan2(vy, vx);\n\t    if (tb >= ta) {\n\t      return tb - ta;\n\t    }\n\t    else {\n\t      return 2 * Math.PI - (ta - tb);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Draws arc\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @param {Number} fx\n\t   * @param {Number} fy\n\t   * @param {Array} coords\n\t   */\n\t  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n\t    var rx = coords[0],\n\t        ry = coords[1],\n\t        rot = coords[2],\n\t        large = coords[3],\n\t        sweep = coords[4],\n\t        tx = coords[5],\n\t        ty = coords[6],\n\t        segs = [[], [], [], []],\n\t        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segsNorm.length; i < len; i++) {\n\t      segs[i][0] = segsNorm[i][0] + fx;\n\t      segs[i][1] = segsNorm[i][1] + fy;\n\t      segs[i][2] = segsNorm[i][2] + fx;\n\t      segs[i][3] = segsNorm[i][3] + fy;\n\t      segs[i][4] = segsNorm[i][4] + fx;\n\t      segs[i][5] = segsNorm[i][5] + fy;\n\t      ctx.bezierCurveTo.apply(ctx, segs[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a elliptic-arc\n\t   * @param {Number} fx start point of arc\n\t   * @param {Number} fy\n\t   * @param {Number} rx horizontal radius\n\t   * @param {Number} ry vertical radius\n\t   * @param {Number} rot angle of horizontal axe\n\t   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n\t   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n\t   * @param {Number} tx end point of arc\n\t   * @param {Number} ty\n\t   */\n\t  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\t\n\t    var fromX = 0, fromY = 0, bound, bounds = [],\n\t        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segs.length; i < len; i++) {\n\t      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n\t      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n\t      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n\t      fromX = segs[i][4];\n\t      fromY = segs[i][5];\n\t    }\n\t    return bounds;\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a beziercurve\n\t   * @param {Number} x0 starting point\n\t   * @param {Number} y0\n\t   * @param {Number} x1 first control point\n\t   * @param {Number} y1\n\t   * @param {Number} x2 secondo control point\n\t   * @param {Number} y2\n\t   * @param {Number} x3 end of beizer\n\t   * @param {Number} y3\n\t   */\n\t  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\t  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t    var argsString = _join.call(arguments);\n\t    if (boundsOfCurveCache[argsString]) {\n\t      return boundsOfCurveCache[argsString];\n\t    }\n\t\n\t    var sqrt = Math.sqrt,\n\t        min = Math.min, max = Math.max,\n\t        abs = Math.abs, tvalues = [],\n\t        bounds = [[], []],\n\t        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t\n\t    b = 6 * x0 - 12 * x1 + 6 * x2;\n\t    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t    c = 3 * x1 - 3 * x0;\n\t\n\t    for (var i = 0; i < 2; ++i) {\n\t      if (i > 0) {\n\t        b = 6 * y0 - 12 * y1 + 6 * y2;\n\t        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t        c = 3 * y1 - 3 * y0;\n\t      }\n\t\n\t      if (abs(a) < 1e-12) {\n\t        if (abs(b) < 1e-12) {\n\t          continue;\n\t        }\n\t        t = -c / b;\n\t        if (0 < t && t < 1) {\n\t          tvalues.push(t);\n\t        }\n\t        continue;\n\t      }\n\t      b2ac = b * b - 4 * c * a;\n\t      if (b2ac < 0) {\n\t        continue;\n\t      }\n\t      sqrtb2ac = sqrt(b2ac);\n\t      t1 = (-b + sqrtb2ac) / (2 * a);\n\t      if (0 < t1 && t1 < 1) {\n\t        tvalues.push(t1);\n\t      }\n\t      t2 = (-b - sqrtb2ac) / (2 * a);\n\t      if (0 < t2 && t2 < 1) {\n\t        tvalues.push(t2);\n\t      }\n\t    }\n\t\n\t    var x, y, j = tvalues.length, jlen = j, mt;\n\t    while (j--) {\n\t      t = tvalues[j];\n\t      mt = 1 - t;\n\t      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n\t      bounds[0][j] = x;\n\t\n\t      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n\t      bounds[1][j] = y;\n\t    }\n\t\n\t    bounds[0][jlen] = x0;\n\t    bounds[1][jlen] = y0;\n\t    bounds[0][jlen + 1] = x3;\n\t    bounds[1][jlen + 1] = y3;\n\t    var result = [\n\t      {\n\t        x: min.apply(null, bounds[0]),\n\t        y: min.apply(null, bounds[1])\n\t      },\n\t      {\n\t        x: max.apply(null, bounds[0]),\n\t        y: max.apply(null, bounds[1])\n\t      }\n\t    ];\n\t    boundsOfCurveCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice;\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t\n\t  if (!Array.prototype.indexOf) {\n\t    /**\n\t     * Finds index of an element in an array\n\t     * @param {*} searchElement\n\t     * @return {Number}\n\t     */\n\t    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t      if (this === void 0 || this === null) {\n\t        throw new TypeError();\n\t      }\n\t      var t = Object(this), len = t.length >>> 0;\n\t      if (len === 0) {\n\t        return -1;\n\t      }\n\t      var n = 0;\n\t      if (arguments.length > 0) {\n\t        n = Number(arguments[1]);\n\t        if (n !== n) { // shortcut for verifying if it's NaN\n\t          n = 0;\n\t        }\n\t        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n\t          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t        }\n\t      }\n\t      if (n >= len) {\n\t        return -1;\n\t      }\n\t      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t      for (; k < len; k++) {\n\t        if (k in t && t[k] === searchElement) {\n\t          return k;\n\t        }\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.forEach) {\n\t    /**\n\t     * Iterates an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.forEach = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.map) {\n\t    /**\n\t     * Returns a result of iterating over an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.map = function(fn, context) {\n\t      var result = [];\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          result[i] = fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.every) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for all elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.every = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && !fn.call(context, this[i], i, this)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.some) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for at least one element in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.some = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && fn.call(context, this[i], i, this)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.filter) {\n\t    /**\n\t     * Returns the result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.filter = function(fn, context) {\n\t      var result = [], val;\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          val = this[i]; // in case fn mutates this\n\t          if (fn.call(context, val, i, this)) {\n\t            result.push(val);\n\t          }\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.reduce) {\n\t    /**\n\t     * Returns \"folded\" (reduced) result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @return {*}\n\t     */\n\t    Array.prototype.reduce = function(fn /*, initial*/) {\n\t      var len = this.length >>> 0,\n\t          i = 0,\n\t          rv;\n\t\n\t      if (arguments.length > 1) {\n\t        rv = arguments[1];\n\t      }\n\t      else {\n\t        do {\n\t          if (i in this) {\n\t            rv = this[i++];\n\t            break;\n\t          }\n\t          // if array contains no values, no initial value to return\n\t          if (++i >= len) {\n\t            throw new TypeError();\n\t          }\n\t        }\n\t        while (true);\n\t      }\n\t      for (; i < len; i++) {\n\t        if (i in this) {\n\t          rv = fn.call(null, rv, this[i], i, this);\n\t        }\n\t      }\n\t      return rv;\n\t    };\n\t  }\n\t\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Invokes method on all items in a given array\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} method Name of a method to invoke\n\t   * @return {Array}\n\t   */\n\t  function invoke(array, method) {\n\t    var args = slice.call(arguments, 2), result = [];\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Finds maximum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {*}\n\t   */\n\t  function max(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 >= value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Finds minimum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {*}\n\t   */\n\t  function min(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 < value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function fill(array, value) {\n\t    var k = array.length;\n\t    while (k--) {\n\t      array[k] = value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function find(array, byProperty, condition) {\n\t    if (!array || array.length === 0) {\n\t      return;\n\t    }\n\t\n\t    var i = array.length - 1,\n\t        result = byProperty ? array[i][byProperty] : array[i];\n\t    if (byProperty) {\n\t      while (i--) {\n\t        if (condition(array[i][byProperty], result)) {\n\t          result = array[i][byProperty];\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      while (i--) {\n\t        if (condition(array[i], result)) {\n\t          result = array[i];\n\t        }\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.util.array\n\t   */\n\t  fabric.util.array = {\n\t    fill: fill,\n\t    invoke: invoke,\n\t    min: min,\n\t    max: max\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t  /**\n\t   * Copies all enumerable properties of one js object to another\n\t   * Does not clone or extend fabric.Object subclasses.\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} destination Where to copy to\n\t   * @param {Object} source Where to copy from\n\t   * @return {Object}\n\t   */\n\t\n\t  function extend(destination, source, deep) {\n\t    // JScript DontEnum bug is not taken care of\n\t    // the deep clone is for internal use, is not meant to avoid\n\t    // javascript traps or cloning html element or self referenced objects.\n\t    if (deep) {\n\t      if (!fabric.isLikelyNode && source instanceof Element) {\n\t        // avoid cloning deep images, canvases,\n\t        destination = source;\n\t      }\n\t      else if (source instanceof Array) {\n\t        destination = [];\n\t        for (var i = 0, len = source.length; i < len; i++) {\n\t          destination[i] = extend({ }, source[i], deep);\n\t        }\n\t      }\n\t      else if (source && typeof source === 'object') {\n\t        for (var property in source) {\n\t          if (source.hasOwnProperty(property)) {\n\t            destination[property] = extend({ }, source[property], deep);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        // this sounds odd for an extend but is ok for recursive use\n\t        destination = source;\n\t      }\n\t    }\n\t    else {\n\t      for (var property in source) {\n\t        destination[property] = source[property];\n\t      }\n\t    }\n\t    return destination;\n\t  }\n\t\n\t  /**\n\t   * Creates an empty object and copies all enumerable properties of another object to it\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} object Object to clone\n\t   * @return {Object}\n\t   */\n\t  function clone(object, deep) {\n\t    return extend({ }, object, deep);\n\t  }\n\t\n\t  /** @namespace fabric.util.object */\n\t  fabric.util.object = {\n\t    extend: extend,\n\t    clone: clone\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t  if (!String.prototype.trim) {\n\t    /**\n\t     * Trims a string (removing whitespace from the beginning and the end)\n\t     * @function external:String#trim\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n\t     */\n\t    String.prototype.trim = function () {\n\t      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n\t      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n\t    };\n\t  }\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Camelizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to camelize\n\t   * @return {String} Camelized version of a string\n\t   */\n\t  function camelize(string) {\n\t    return string.replace(/-+(.)?/g, function(match, character) {\n\t      return character ? character.toUpperCase() : '';\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Capitalizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to capitalize\n\t   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n\t   * and other letters stay untouched, if false first letter is capitalized\n\t   * and other letters are converted to lowercase.\n\t   * @return {String} Capitalized version of a string\n\t   */\n\t  function capitalize(string, firstLetterOnly) {\n\t    return string.charAt(0).toUpperCase() +\n\t      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n\t  }\n\t\n\t  /**\n\t   * Escapes XML in a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to escape\n\t   * @return {String} Escaped version of a string\n\t   */\n\t  function escapeXml(string) {\n\t    return string.replace(/&/g, '&amp;')\n\t       .replace(/\"/g, '&quot;')\n\t       .replace(/'/g, '&apos;')\n\t       .replace(/</g, '&lt;')\n\t       .replace(/>/g, '&gt;');\n\t  }\n\t\n\t  /**\n\t   * String utilities\n\t   * @namespace fabric.util.string\n\t   */\n\t  fabric.util.string = {\n\t    camelize: camelize,\n\t    capitalize: capitalize,\n\t    escapeXml: escapeXml\n\t  };\n\t})();\n\t\n\t\n\t/* _ES5_COMPAT_START_ */\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice,\n\t      apply = Function.prototype.apply,\n\t      Dummy = function() { };\n\t\n\t  if (!Function.prototype.bind) {\n\t    /**\n\t     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n\t     * @param {Object} thisArg Object to bind function to\n\t     * @param {Any[]} Values to pass to a bound function\n\t     * @return {Function}\n\t     */\n\t    Function.prototype.bind = function(thisArg) {\n\t      var _this = this, args = slice.call(arguments, 1), bound;\n\t      if (args.length) {\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n\t        };\n\t      }\n\t      else {\n\t        /** @ignore */\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n\t        };\n\t      }\n\t      Dummy.prototype = this.prototype;\n\t      bound.prototype = new Dummy();\n\t\n\t      return bound;\n\t    };\n\t  }\n\t\n\t})();\n\t/* _ES5_COMPAT_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice, emptyFunction = function() { },\n\t\n\t      IS_DONTENUM_BUGGY = (function() {\n\t        for (var p in { toString: 1 }) {\n\t          if (p === 'toString') {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      })(),\n\t\n\t      /** @ignore */\n\t      addMethods = function(klass, source, parent) {\n\t        for (var property in source) {\n\t\n\t          if (property in klass.prototype &&\n\t              typeof klass.prototype[property] === 'function' &&\n\t              (source[property] + '').indexOf('callSuper') > -1) {\n\t\n\t            klass.prototype[property] = (function(property) {\n\t              return function() {\n\t\n\t                var superclass = this.constructor.superclass;\n\t                this.constructor.superclass = parent;\n\t                var returnValue = source[property].apply(this, arguments);\n\t                this.constructor.superclass = superclass;\n\t\n\t                if (property !== 'initialize') {\n\t                  return returnValue;\n\t                }\n\t              };\n\t            })(property);\n\t          }\n\t          else {\n\t            klass.prototype[property] = source[property];\n\t          }\n\t\n\t          if (IS_DONTENUM_BUGGY) {\n\t            if (source.toString !== Object.prototype.toString) {\n\t              klass.prototype.toString = source.toString;\n\t            }\n\t            if (source.valueOf !== Object.prototype.valueOf) {\n\t              klass.prototype.valueOf = source.valueOf;\n\t            }\n\t          }\n\t        }\n\t      };\n\t\n\t  function Subclass() { }\n\t\n\t  function callSuper(methodName) {\n\t    var parentMethod = null,\n\t        _this = this;\n\t\n\t    // climb prototype chain to find method not equal to callee's method\n\t    while (_this.constructor.superclass) {\n\t      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n\t      if (_this[methodName] !== superClassMethod) {\n\t        parentMethod = superClassMethod;\n\t        break;\n\t      }\n\t      // eslint-disable-next-line\n\t      _this = _this.constructor.superclass.prototype;\n\t    }\n\t\n\t    if (!parentMethod) {\n\t      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n\t    }\n\t\n\t    return (arguments.length > 1)\n\t      ? parentMethod.apply(this, slice.call(arguments, 1))\n\t      : parentMethod.call(this);\n\t  }\n\t\n\t  /**\n\t   * Helper for creation of \"classes\".\n\t   * @memberOf fabric.util\n\t   * @param {Function} [parent] optional \"Class\" to inherit from\n\t   * @param {Object} [properties] Properties shared by all instances of this class\n\t   *                  (be careful modifying objects defined here as this would affect all instances)\n\t   */\n\t  function createClass() {\n\t    var parent = null,\n\t        properties = slice.call(arguments, 0);\n\t\n\t    if (typeof properties[0] === 'function') {\n\t      parent = properties.shift();\n\t    }\n\t    function klass() {\n\t      this.initialize.apply(this, arguments);\n\t    }\n\t\n\t    klass.superclass = parent;\n\t    klass.subclasses = [];\n\t\n\t    if (parent) {\n\t      Subclass.prototype = parent.prototype;\n\t      klass.prototype = new Subclass();\n\t      parent.subclasses.push(klass);\n\t    }\n\t    for (var i = 0, length = properties.length; i < length; i++) {\n\t      addMethods(klass, properties[i], parent);\n\t    }\n\t    if (!klass.prototype.initialize) {\n\t      klass.prototype.initialize = emptyFunction;\n\t    }\n\t    klass.prototype.constructor = klass;\n\t    klass.prototype.callSuper = callSuper;\n\t    return klass;\n\t  }\n\t\n\t  fabric.util.createClass = createClass;\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var unknown = 'unknown';\n\t\n\t  /* EVENT HANDLING */\n\t\n\t  function areHostMethods(object) {\n\t    var methodNames = Array.prototype.slice.call(arguments, 1),\n\t        t, i, len = methodNames.length;\n\t    for (i = 0; i < len; i++) {\n\t      t = typeof object[methodNames[i]];\n\t      if (!(/^(?:function|object|unknown)$/).test(t)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /** @ignore */\n\t  var getElement,\n\t      setElement,\n\t      getUniqueId = (function () {\n\t        var uid = 0;\n\t        return function (element) {\n\t          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n\t        };\n\t      })();\n\t\n\t  (function () {\n\t    var elements = { };\n\t    /** @ignore */\n\t    getElement = function (uid) {\n\t      return elements[uid];\n\t    };\n\t    /** @ignore */\n\t    setElement = function (uid, element) {\n\t      elements[uid] = element;\n\t    };\n\t  })();\n\t\n\t  function createListener(uid, handler) {\n\t    return {\n\t      handler: handler,\n\t      wrappedHandler: createWrappedHandler(uid, handler)\n\t    };\n\t  }\n\t\n\t  function createWrappedHandler(uid, handler) {\n\t    return function (e) {\n\t      handler.call(getElement(uid), e || fabric.window.event);\n\t    };\n\t  }\n\t\n\t  function createDispatcher(uid, eventName) {\n\t    return function (e) {\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          handlersForEvent[i].call(this, e || fabric.window.event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  var shouldUseAddListenerRemoveListener = (\n\t        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n\t        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\t\n\t      shouldUseAttachEventDetachEvent = (\n\t        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n\t        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\t\n\t      // IE branch\n\t      listeners = { },\n\t\n\t      // DOM L0 branch\n\t      handlers = { },\n\t\n\t      addListener, removeListener;\n\t\n\t  if (shouldUseAddListenerRemoveListener) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler, options) {\n\t      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n\t      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler, options) {\n\t      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n\t    };\n\t  }\n\t\n\t  else if (shouldUseAttachEventDetachEvent) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      if (!element) {\n\t        return;\n\t      }\n\t      var uid = getUniqueId(element);\n\t      setElement(uid, element);\n\t      if (!listeners[uid]) {\n\t        listeners[uid] = { };\n\t      }\n\t      if (!listeners[uid][eventName]) {\n\t        listeners[uid][eventName] = [];\n\t\n\t      }\n\t      var listener = createListener(uid, handler);\n\t      listeners[uid][eventName].push(listener);\n\t      element.attachEvent('on' + eventName, listener.wrappedHandler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      if (!element) {\n\t        return;\n\t      }\n\t      var uid = getUniqueId(element), listener;\n\t      if (listeners[uid] && listeners[uid][eventName]) {\n\t        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n\t          listener = listeners[uid][eventName][i];\n\t          if (listener && listener.handler === handler) {\n\t            element.detachEvent('on' + eventName, listener.wrappedHandler);\n\t            listeners[uid][eventName][i] = null;\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t  else {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      if (!element) {\n\t        return;\n\t      }\n\t      var uid = getUniqueId(element);\n\t      if (!handlers[uid]) {\n\t        handlers[uid] = { };\n\t      }\n\t      if (!handlers[uid][eventName]) {\n\t        handlers[uid][eventName] = [];\n\t        var existingHandler = element['on' + eventName];\n\t        if (existingHandler) {\n\t          handlers[uid][eventName].push(existingHandler);\n\t        }\n\t        element['on' + eventName] = createDispatcher(uid, eventName);\n\t      }\n\t      handlers[uid][eventName].push(handler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      if (!element) {\n\t        return;\n\t      }\n\t      var uid = getUniqueId(element);\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          if (handlersForEvent[i] === handler) {\n\t            handlersForEvent.splice(i, 1);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Adds an event listener to an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.addListener = addListener;\n\t\n\t  /**\n\t   * Removes an event listener from an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.removeListener = removeListener;\n\t\n\t  /**\n\t   * Cross-browser wrapper for getting event's coordinates\n\t   * @memberOf fabric.util\n\t   * @param {Event} event Event object\n\t   */\n\t  function getPointer(event) {\n\t    event || (event = fabric.window.event);\n\t\n\t    var element = event.target ||\n\t                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\t\n\t        scroll = fabric.util.getScrollLeftTop(element);\n\t\n\t    return {\n\t      x: pointerX(event) + scroll.left,\n\t      y: pointerY(event) + scroll.top\n\t    };\n\t  }\n\t\n\t  var pointerX = function(event) {\n\t    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n\t    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n\t    // need to investigate later\n\t        return (typeof event.clientX !== unknown ? event.clientX : 0);\n\t      },\n\t\n\t      pointerY = function(event) {\n\t        return (typeof event.clientY !== unknown ? event.clientY : 0);\n\t      };\n\t\n\t  function _getPointer(event, pageProp, clientProp) {\n\t    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\t\n\t    return (event[touchProp] && event[touchProp][0]\n\t      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n\t        || event[clientProp]\n\t      : event[clientProp]);\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    pointerX = function(event) {\n\t      return _getPointer(event, 'pageX', 'clientX');\n\t    };\n\t    pointerY = function(event) {\n\t      return _getPointer(event, 'pageY', 'clientY');\n\t    };\n\t  }\n\t\n\t  fabric.util.getPointer = getPointer;\n\t\n\t  fabric.util.object.extend(fabric.util, fabric.Observable);\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  /**\n\t   * Cross-browser wrapper for setting element's style\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {Object} styles\n\t   * @return {HTMLElement} Element that was passed as a first argument\n\t   */\n\t  function setStyle(element, styles) {\n\t    var elementStyle = element.style;\n\t    if (!elementStyle) {\n\t      return element;\n\t    }\n\t    if (typeof styles === 'string') {\n\t      element.style.cssText += ';' + styles;\n\t      return styles.indexOf('opacity') > -1\n\t        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n\t        : element;\n\t    }\n\t    for (var property in styles) {\n\t      if (property === 'opacity') {\n\t        setOpacity(element, styles[property]);\n\t      }\n\t      else {\n\t        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n\t          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n\t          : property;\n\t        elementStyle[normalizedProperty] = styles[property];\n\t      }\n\t    }\n\t    return element;\n\t  }\n\t\n\t  var parseEl = fabric.document.createElement('div'),\n\t      supportsOpacity = typeof parseEl.style.opacity === 'string',\n\t      supportsFilters = typeof parseEl.style.filter === 'string',\n\t      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\t\n\t      /** @ignore */\n\t      setOpacity = function (element) { return element; };\n\t\n\t  if (supportsOpacity) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      element.style.opacity = value;\n\t      return element;\n\t    };\n\t  }\n\t  else if (supportsFilters) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      var es = element.style;\n\t      if (element.currentStyle && !element.currentStyle.hasLayout) {\n\t        es.zoom = 1;\n\t      }\n\t      if (reOpacity.test(es.filter)) {\n\t        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n\t        es.filter = es.filter.replace(reOpacity, value);\n\t      }\n\t      else {\n\t        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n\t      }\n\t      return element;\n\t    };\n\t  }\n\t\n\t  fabric.util.setStyle = setStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var _slice = Array.prototype.slice;\n\t\n\t  /**\n\t   * Takes id and returns an element with that id (if one exists in a document)\n\t   * @memberOf fabric.util\n\t   * @param {String|HTMLElement} id\n\t   * @return {HTMLElement|null}\n\t   */\n\t  function getById(id) {\n\t    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n\t  }\n\t\n\t  var sliceCanConvertNodelists,\n\t      /**\n\t       * Converts an array-like object (e.g. arguments or NodeList) to an array\n\t       * @memberOf fabric.util\n\t       * @param {Object} arrayLike\n\t       * @return {Array}\n\t       */\n\t      toArray = function(arrayLike) {\n\t        return _slice.call(arrayLike, 0);\n\t      };\n\t\n\t  try {\n\t    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n\t  }\n\t  catch (err) { }\n\t\n\t  if (!sliceCanConvertNodelists) {\n\t    toArray = function(arrayLike) {\n\t      var arr = new Array(arrayLike.length), i = arrayLike.length;\n\t      while (i--) {\n\t        arr[i] = arrayLike[i];\n\t      }\n\t      return arr;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates specified element with specified attributes\n\t   * @memberOf fabric.util\n\t   * @param {String} tagName Type of an element to create\n\t   * @param {Object} [attributes] Attributes to set on an element\n\t   * @return {HTMLElement} Newly created element\n\t   */\n\t  function makeElement(tagName, attributes) {\n\t    var el = fabric.document.createElement(tagName);\n\t    for (var prop in attributes) {\n\t      if (prop === 'class') {\n\t        el.className = attributes[prop];\n\t      }\n\t      else if (prop === 'for') {\n\t        el.htmlFor = attributes[prop];\n\t      }\n\t      else {\n\t        el.setAttribute(prop, attributes[prop]);\n\t      }\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Adds class to an element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to add class to\n\t   * @param {String} className Class to add to an element\n\t   */\n\t  function addClass(element, className) {\n\t    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n\t      element.className += (element.className ? ' ' : '') + className;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Wraps element with another element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to wrap\n\t   * @param {HTMLElement|String} wrapper Element to wrap with\n\t   * @param {Object} [attributes] Attributes to set on a wrapper\n\t   * @return {HTMLElement} wrapper\n\t   */\n\t  function wrapElement(element, wrapper, attributes) {\n\t    if (typeof wrapper === 'string') {\n\t      wrapper = makeElement(wrapper, attributes);\n\t    }\n\t    if (element.parentNode) {\n\t      element.parentNode.replaceChild(wrapper, element);\n\t    }\n\t    wrapper.appendChild(element);\n\t    return wrapper;\n\t  }\n\t\n\t  /**\n\t   * Returns element scroll offsets\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to operate on\n\t   * @return {Object} Object with left/top values\n\t   */\n\t  function getScrollLeftTop(element) {\n\t\n\t    var left = 0,\n\t        top = 0,\n\t        docElement = fabric.document.documentElement,\n\t        body = fabric.document.body || {\n\t          scrollLeft: 0, scrollTop: 0\n\t        };\n\t\n\t    // While loop checks (and then sets element to) .parentNode OR .host\n\t    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n\t    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n\t    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n\t    while (element && (element.parentNode || element.host)) {\n\t\n\t      // Set element to element parent, or 'host' in case of ShadowDOM\n\t      element = element.parentNode || element.host;\n\t\n\t      if (element === fabric.document) {\n\t        left = body.scrollLeft || docElement.scrollLeft || 0;\n\t        top = body.scrollTop ||  docElement.scrollTop || 0;\n\t      }\n\t      else {\n\t        left += element.scrollLeft || 0;\n\t        top += element.scrollTop || 0;\n\t      }\n\t\n\t      if (element.nodeType === 1 &&\n\t          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n\t        break;\n\t      }\n\t    }\n\t\n\t    return { left: left, top: top };\n\t  }\n\t\n\t  /**\n\t   * Returns offset for a given element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get offset for\n\t   * @return {Object} Object with \"left\" and \"top\" properties\n\t   */\n\t  function getElementOffset(element) {\n\t    var docElem,\n\t        doc = element && element.ownerDocument,\n\t        box = { left: 0, top: 0 },\n\t        offset = { left: 0, top: 0 },\n\t        scrollLeftTop,\n\t        offsetAttributes = {\n\t          borderLeftWidth: 'left',\n\t          borderTopWidth:  'top',\n\t          paddingLeft:     'left',\n\t          paddingTop:      'top'\n\t        };\n\t\n\t    if (!doc) {\n\t      return offset;\n\t    }\n\t\n\t    for (var attr in offsetAttributes) {\n\t      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n\t    }\n\t\n\t    docElem = doc.documentElement;\n\t    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n\t      box = element.getBoundingClientRect();\n\t    }\n\t\n\t    scrollLeftTop = getScrollLeftTop(element);\n\t\n\t    return {\n\t      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n\t      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Returns style attribute value of a given element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get style attribute for\n\t   * @param {String} attr Style attribute to get for element\n\t   * @return {String} Style attribute value of the given element.\n\t   */\n\t  var getElementStyle;\n\t  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n\t    getElementStyle = function(element, attr) {\n\t      var style = fabric.document.defaultView.getComputedStyle(element, null);\n\t      return style ? style[attr] : undefined;\n\t    };\n\t  }\n\t  else {\n\t    getElementStyle = function(element, attr) {\n\t      var value = element.style[attr];\n\t      if (!value && element.currentStyle) {\n\t        value = element.currentStyle[attr];\n\t      }\n\t      return value;\n\t    };\n\t  }\n\t\n\t  (function () {\n\t    var style = fabric.document.documentElement.style,\n\t        selectProp = 'userSelect' in style\n\t          ? 'userSelect'\n\t          : 'MozUserSelect' in style\n\t            ? 'MozUserSelect'\n\t            : 'WebkitUserSelect' in style\n\t              ? 'WebkitUserSelect'\n\t              : 'KhtmlUserSelect' in style\n\t                ? 'KhtmlUserSelect'\n\t                : '';\n\t\n\t    /**\n\t     * Makes element unselectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make unselectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementUnselectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = fabric.util.falseFunction;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = 'none';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = 'on';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    /**\n\t     * Makes element selectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make selectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementSelectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = null;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = '';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = '';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    fabric.util.makeElementUnselectable = makeElementUnselectable;\n\t    fabric.util.makeElementSelectable = makeElementSelectable;\n\t  })();\n\t\n\t  (function() {\n\t\n\t    /**\n\t     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL of a script to load\n\t     * @param {Function} callback Callback to execute when script is finished loading\n\t     */\n\t    function getScript(url, callback) {\n\t      var headEl = fabric.document.getElementsByTagName('head')[0],\n\t          scriptEl = fabric.document.createElement('script'),\n\t          loading = true;\n\t\n\t      /** @ignore */\n\t      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n\t        if (loading) {\n\t          if (typeof this.readyState === 'string' &&\n\t              this.readyState !== 'loaded' &&\n\t              this.readyState !== 'complete') {\n\t            return;\n\t          }\n\t          loading = false;\n\t          callback(e || fabric.window.event);\n\t          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n\t        }\n\t      };\n\t      scriptEl.src = url;\n\t      headEl.appendChild(scriptEl);\n\t      // causes issue in Opera\n\t      // headEl.removeChild(scriptEl);\n\t    }\n\t\n\t    fabric.util.getScript = getScript;\n\t  })();\n\t\n\t  fabric.util.getById = getById;\n\t  fabric.util.toArray = toArray;\n\t  fabric.util.makeElement = makeElement;\n\t  fabric.util.addClass = addClass;\n\t  fabric.util.wrapElement = wrapElement;\n\t  fabric.util.getScrollLeftTop = getScrollLeftTop;\n\t  fabric.util.getElementOffset = getElementOffset;\n\t  fabric.util.getElementStyle = getElementStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function addParamToUrl(url, param) {\n\t    return url + (/\\?/.test(url) ? '&' : '?') + param;\n\t  }\n\t\n\t  var makeXHR = (function() {\n\t    var factories = [\n\t      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n\t      function() { return new XMLHttpRequest(); }\n\t    ];\n\t    for (var i = factories.length; i--; ) {\n\t      try {\n\t        var req = factories[i]();\n\t        if (req) {\n\t          return factories[i];\n\t        }\n\t      }\n\t      catch (err) { }\n\t    }\n\t  })();\n\t\n\t  function emptyFn() { }\n\t\n\t  /**\n\t   * Cross-browser abstraction for sending XMLHttpRequest\n\t   * @memberOf fabric.util\n\t   * @param {String} url URL to send XMLHttpRequest to\n\t   * @param {Object} [options] Options object\n\t   * @param {String} [options.method=\"GET\"]\n\t   * @param {String} [options.parameters] parameters to append to url in GET or in body\n\t   * @param {String} [options.body] body to send with POST or PUT request\n\t   * @param {Function} options.onComplete Callback to invoke when request is completed\n\t   * @return {XMLHttpRequest} request\n\t   */\n\t  function request(url, options) {\n\t\n\t    options || (options = { });\n\t\n\t    var method = options.method ? options.method.toUpperCase() : 'GET',\n\t        onComplete = options.onComplete || function() { },\n\t        xhr = makeXHR(),\n\t        body = options.body || options.parameters;\n\t\n\t    /** @ignore */\n\t    xhr.onreadystatechange = function() {\n\t      if (xhr.readyState === 4) {\n\t        onComplete(xhr);\n\t        xhr.onreadystatechange = emptyFn;\n\t      }\n\t    };\n\t\n\t    if (method === 'GET') {\n\t      body = null;\n\t      if (typeof options.parameters === 'string') {\n\t        url = addParamToUrl(url, options.parameters);\n\t      }\n\t    }\n\t\n\t    xhr.open(method, url, true);\n\t\n\t    if (method === 'POST' || method === 'PUT') {\n\t      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t    }\n\t\n\t    xhr.send(body);\n\t    return xhr;\n\t  }\n\t\n\t  fabric.util.request = request;\n\t})();\n\t\n\t\n\t/**\n\t * Wrapper around `console.log` (when available)\n\t * @param {*} [values] Values to log\n\t */\n\tfabric.log = function() { };\n\t\n\t/**\n\t * Wrapper around `console.warn` (when available)\n\t * @param {*} [values] Values to log as a warning\n\t */\n\tfabric.warn = function() { };\n\t\n\t/* eslint-disable */\n\tif (typeof console !== 'undefined') {\n\t\n\t  ['log', 'warn'].forEach(function(methodName) {\n\t\n\t    if (typeof console[methodName] !== 'undefined' &&\n\t        typeof console[methodName].apply === 'function') {\n\t\n\t      fabric[methodName] = function() {\n\t        return console[methodName].apply(console, arguments);\n\t      };\n\t    }\n\t  });\n\t}\n\t/* eslint-enable */\n\t\n\t\n\t(function() {\n\t\n\t  function noop() {\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n\t   * @memberOf fabric.util\n\t   * @param {Object} [options] Animation options\n\t   * @param {Function} [options.onChange] Callback; invoked on every value change\n\t   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n\t   * @param {Number} [options.startValue=0] Starting value\n\t   * @param {Number} [options.endValue=100] Ending value\n\t   * @param {Number} [options.byValue=100] Value to modify the property by\n\t   * @param {Function} [options.easing] Easing function\n\t   * @param {Number} [options.duration=500] Duration of change (in ms)\n\t   */\n\t  function animate(options) {\n\t\n\t    requestAnimFrame(function(timestamp) {\n\t      options || (options = { });\n\t\n\t      var start = timestamp || +new Date(),\n\t          duration = options.duration || 500,\n\t          finish = start + duration, time,\n\t          onChange = options.onChange || noop,\n\t          abort = options.abort || noop,\n\t          onComplete = options.onComplete || noop,\n\t          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n\t          startValue = 'startValue' in options ? options.startValue : 0,\n\t          endValue = 'endValue' in options ? options.endValue : 100,\n\t          byValue = options.byValue || endValue - startValue;\n\t\n\t      options.onStart && options.onStart();\n\t\n\t      (function tick(ticktime) {\n\t        if (abort()) {\n\t          onComplete(endValue, 1, 1);\n\t          return;\n\t        }\n\t        time = ticktime || +new Date();\n\t        var currentTime = time > finish ? duration : (time - start),\n\t            timePerc = currentTime / duration,\n\t            current = easing(currentTime, startValue, byValue, duration),\n\t            valuePerc = Math.abs((current - startValue) / byValue);\n\t        onChange(current, valuePerc, timePerc);\n\t        if (time > finish) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        requestAnimFrame(tick);\n\t      })(start);\n\t    });\n\t\n\t  }\n\t\n\t  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n\t                          fabric.window.webkitRequestAnimationFrame ||\n\t                          fabric.window.mozRequestAnimationFrame    ||\n\t                          fabric.window.oRequestAnimationFrame      ||\n\t                          fabric.window.msRequestAnimationFrame     ||\n\t                          function(callback) {\n\t                            fabric.window.setTimeout(callback, 1000 / 60);\n\t                          };\n\t\n\t  /**\n\t   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n\t   * @memberOf fabric.util\n\t   * @param {Function} callback Callback to invoke\n\t   * @param {DOMElement} element optional Element to associate with animation\n\t   */\n\t  function requestAnimFrame() {\n\t    return _requestAnimFrame.apply(fabric.window, arguments);\n\t  }\n\t\n\t  fabric.util.animate = animate;\n\t  fabric.util.requestAnimFrame = requestAnimFrame;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t  // Calculate an in-between color. Returns a \"rgba()\" string.\n\t  // Credit: Edwin Martin <edwin@bitstorm.org>\n\t  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n\t  function calculateColor(begin, end, pos) {\n\t    var color = 'rgba('\n\t        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n\t        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n\t        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\t\n\t    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n\t    color += ')';\n\t    return color;\n\t  }\n\t\n\t  /**\n\t   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n\t   * @memberOf fabric.util\n\t   * @param {String} fromColor The starting color in hex or rgb(a) format.\n\t   * @param {String} toColor The starting color in hex or rgb(a) format.\n\t   * @param {Number} [duration] Duration of change (in ms).\n\t   * @param {Object} [options] Animation options\n\t   * @param {Function} [options.onChange] Callback; invoked on every value change\n\t   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n\t   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n\t   */\n\t  function animateColor(fromColor, toColor, duration, options) {\n\t    var startColor = new fabric.Color(fromColor).getSource(),\n\t        endColor = new fabric.Color(toColor).getSource();\n\t\n\t    options = options || {};\n\t\n\t    fabric.util.animate(fabric.util.object.extend(options, {\n\t      duration: duration || 500,\n\t      startValue: startColor,\n\t      endValue: endColor,\n\t      byValue: endColor,\n\t      easing: function (currentTime, startValue, byValue, duration) {\n\t        var posValue = options.colorEasing\n\t              ? options.colorEasing(currentTime, duration)\n\t              : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n\t        return calculateColor(startValue, byValue, posValue);\n\t      }\n\t    }));\n\t  }\n\t\n\t  fabric.util.animateColor = animateColor;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function normalize(a, c, p, s) {\n\t    if (a < Math.abs(c)) {\n\t      a = c;\n\t      s = p / 4;\n\t    }\n\t    else {\n\t      //handle the 0/0 case:\n\t      if (c === 0 && a === 0) {\n\t        s = p / (2 * Math.PI) * Math.asin(1);\n\t      }\n\t      else {\n\t        s = p / (2 * Math.PI) * Math.asin(c / a);\n\t      }\n\t    }\n\t    return { a: a, c: c, p: p, s: s };\n\t  }\n\t\n\t  function elastic(opts, t, d) {\n\t    return opts.a *\n\t      Math.pow(2, 10 * (t -= 1)) *\n\t      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n\t  }\n\t\n\t  /**\n\t   * Cubic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCubic(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Cubic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCubic(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuart(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuart(t, b, c, d) {\n\t    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuart(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t + b;\n\t    }\n\t    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuint(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuint(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuint(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInSine(t, b, c, d) {\n\t    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutSine(t, b, c, d) {\n\t    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutSine(t, b, c, d) {\n\t    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInExpo(t, b, c, d) {\n\t    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutExpo(t, b, c, d) {\n\t    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutExpo(t, b, c, d) {\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    if (t === d) {\n\t      return b + c;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n\t    }\n\t    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInCirc(t, b, c, d) {\n\t    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCirc(t, b, c, d) {\n\t    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCirc(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n\t    }\n\t    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return -elastic(opts, t, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d / 2;\n\t    if (t === 2) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * (0.3 * 1.5);\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    if (t < 1) {\n\t      return -0.5 * elastic(opts, t, d) + b;\n\t    }\n\t    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n\t      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBounce(t, b, c, d) {\n\t    return c - easeOutBounce (d - t, 0, c, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBounce(t, b, c, d) {\n\t    if ((t /= d) < (1 / 2.75)) {\n\t      return c * (7.5625 * t * t) + b;\n\t    }\n\t    else if (t < (2 / 2.75)) {\n\t      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n\t    }\n\t    else if (t < (2.5 / 2.75)) {\n\t      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n\t    }\n\t    else {\n\t      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBounce(t, b, c, d) {\n\t    if (t < d / 2) {\n\t      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n\t    }\n\t    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\t  }\n\t\n\t  /**\n\t   * Easing functions\n\t   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n\t   * @namespace fabric.util.ease\n\t   */\n\t  fabric.util.ease = {\n\t\n\t    /**\n\t     * Quadratic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInQuad: function(t, b, c, d) {\n\t      return c * (t /= d) * t + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeOutQuad: function(t, b, c, d) {\n\t      return -c * (t /= d) * (t - 2) + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing in and out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInOutQuad: function(t, b, c, d) {\n\t      t /= (d / 2);\n\t      if (t < 1) {\n\t        return c / 2 * t * t + b;\n\t      }\n\t      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n\t    },\n\t\n\t    /**\n\t     * Cubic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInCubic: function(t, b, c, d) {\n\t      return c * (t /= d) * t * t + b;\n\t    },\n\t\n\t    easeOutCubic: easeOutCubic,\n\t    easeInOutCubic: easeInOutCubic,\n\t    easeInQuart: easeInQuart,\n\t    easeOutQuart: easeOutQuart,\n\t    easeInOutQuart: easeInOutQuart,\n\t    easeInQuint: easeInQuint,\n\t    easeOutQuint: easeOutQuint,\n\t    easeInOutQuint: easeInOutQuint,\n\t    easeInSine: easeInSine,\n\t    easeOutSine: easeOutSine,\n\t    easeInOutSine: easeInOutSine,\n\t    easeInExpo: easeInExpo,\n\t    easeOutExpo: easeOutExpo,\n\t    easeInOutExpo: easeInOutExpo,\n\t    easeInCirc: easeInCirc,\n\t    easeOutCirc: easeOutCirc,\n\t    easeInOutCirc: easeInOutCirc,\n\t    easeInElastic: easeInElastic,\n\t    easeOutElastic: easeOutElastic,\n\t    easeInOutElastic: easeInOutElastic,\n\t    easeInBack: easeInBack,\n\t    easeOutBack: easeOutBack,\n\t    easeInOutBack: easeInOutBack,\n\t    easeInBounce: easeInBounce,\n\t    easeOutBounce: easeOutBounce,\n\t    easeInOutBounce: easeInOutBounce\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /**\n\t   * @name fabric\n\t   * @namespace\n\t   */\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      parseUnit = fabric.util.parseUnit,\n\t      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\t\n\t      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n\t      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n\t      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata|clipPath|mask)$/i,\n\t      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\t\n\t      attributesMap = {\n\t        cx:                   'left',\n\t        x:                    'left',\n\t        r:                    'radius',\n\t        cy:                   'top',\n\t        y:                    'top',\n\t        display:              'visible',\n\t        visibility:           'visible',\n\t        transform:            'transformMatrix',\n\t        'fill-opacity':       'fillOpacity',\n\t        'fill-rule':          'fillRule',\n\t        'font-family':        'fontFamily',\n\t        'font-size':          'fontSize',\n\t        'font-style':         'fontStyle',\n\t        'font-weight':        'fontWeight',\n\t        'stroke-dasharray':   'strokeDashArray',\n\t        'stroke-linecap':     'strokeLineCap',\n\t        'stroke-linejoin':    'strokeLineJoin',\n\t        'stroke-miterlimit':  'strokeMiterLimit',\n\t        'stroke-opacity':     'strokeOpacity',\n\t        'stroke-width':       'strokeWidth',\n\t        'text-decoration':    'textDecoration',\n\t        'text-anchor':        'originX',\n\t        opacity:              'opacity'\n\t      },\n\t\n\t      colorAttributes = {\n\t        stroke: 'strokeOpacity',\n\t        fill:   'fillOpacity'\n\t      };\n\t\n\t  fabric.cssRules = { };\n\t  fabric.gradientDefs = { };\n\t\n\t  function normalizeAttr(attr) {\n\t    // transform attribute names\n\t    if (attr in attributesMap) {\n\t      return attributesMap[attr];\n\t    }\n\t    return attr;\n\t  }\n\t\n\t  function normalizeValue(attr, value, parentAttributes, fontSize) {\n\t    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n\t        parsed;\n\t\n\t    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n\t      value = '';\n\t    }\n\t    else if (attr === 'strokeDashArray') {\n\t      if (value === 'none') {\n\t        value = null;\n\t      }\n\t      else {\n\t        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n\t          return parseFloat(n);\n\t        });\n\t      }\n\t    }\n\t    else if (attr === 'transformMatrix') {\n\t      if (parentAttributes && parentAttributes.transformMatrix) {\n\t        value = multiplyTransformMatrices(\n\t          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n\t      }\n\t      else {\n\t        value = fabric.parseTransformAttribute(value);\n\t      }\n\t    }\n\t    else if (attr === 'visible') {\n\t      value = (value === 'none' || value === 'hidden') ? false : true;\n\t      // display=none on parent element always takes precedence over child element\n\t      if (parentAttributes && parentAttributes.visible === false) {\n\t        value = false;\n\t      }\n\t    }\n\t    else if (attr === 'opacity') {\n\t      value = parseFloat(value);\n\t      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n\t        value *= parentAttributes.opacity;\n\t      }\n\t    }\n\t    else if (attr === 'originX' /* text-anchor */) {\n\t      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n\t    }\n\t    else {\n\t      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n\t    }\n\t\n\t    return (!isArray && isNaN(parsed) ? value : parsed);\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} attributes Array of attributes to parse\n\t   */\n\t  function _setStrokeFillOpacity(attributes) {\n\t    for (var attr in colorAttributes) {\n\t\n\t      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n\t        continue;\n\t      }\n\t\n\t      if (typeof attributes[attr] === 'undefined') {\n\t        if (!fabric.Object.prototype[attr]) {\n\t          continue;\n\t        }\n\t        attributes[attr] = fabric.Object.prototype[attr];\n\t      }\n\t\n\t      if (attributes[attr].indexOf('url(') === 0) {\n\t        continue;\n\t      }\n\t\n\t      var color = new fabric.Color(attributes[attr]);\n\t      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n\t    }\n\t    return attributes;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _getMultipleNodes(doc, nodeNames) {\n\t    var nodeName, nodeArray = [], nodeList;\n\t    for (var i = 0; i < nodeNames.length; i++) {\n\t      nodeName = nodeNames[i];\n\t      nodeList = doc.getElementsByTagName(nodeName);\n\t      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n\t    }\n\t    return nodeArray;\n\t  }\n\t\n\t  /**\n\t   * Parses \"transform\" attribute, returning an array of values\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {String} attributeValue String containing attribute value\n\t   * @return {Array} Array of 6 elements representing transformation matrix\n\t   */\n\t  fabric.parseTransformAttribute = (function() {\n\t    function rotateMatrix(matrix, args) {\n\t      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n\t          x = 0, y = 0;\n\t      if (args.length === 3) {\n\t        x = args[1];\n\t        y = args[2];\n\t      }\n\t\n\t      matrix[0] = cos;\n\t      matrix[1] = sin;\n\t      matrix[2] = -sin;\n\t      matrix[3] = cos;\n\t      matrix[4] = x - (cos * x - sin * y);\n\t      matrix[5] = y - (sin * x + cos * y);\n\t    }\n\t\n\t    function scaleMatrix(matrix, args) {\n\t      var multiplierX = args[0],\n\t          multiplierY = (args.length === 2) ? args[1] : args[0];\n\t\n\t      matrix[0] = multiplierX;\n\t      matrix[3] = multiplierY;\n\t    }\n\t\n\t    function skewMatrix(matrix, args, pos) {\n\t      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function translateMatrix(matrix, args) {\n\t      matrix[4] = args[0];\n\t      if (args.length === 2) {\n\t        matrix[5] = args[1];\n\t      }\n\t    }\n\t\n\t    // identity matrix\n\t    var iMatrix = [\n\t          1, // a\n\t          0, // b\n\t          0, // c\n\t          1, // d\n\t          0, // e\n\t          0  // f\n\t        ],\n\t\n\t        // == begin transform regexp\n\t        number = fabric.reNum,\n\t\n\t        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\t\n\t        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + ')' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' +\n\t                  '\\\\s*\\\\))',\n\t\n\t        transform = '(?:' +\n\t                    matrix + '|' +\n\t                    translate + '|' +\n\t                    scale + '|' +\n\t                    rotate + '|' +\n\t                    skewX + '|' +\n\t                    skewY +\n\t                    ')',\n\t\n\t        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\t\n\t        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\t\n\t        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n\t        reTransformList = new RegExp(transformList),\n\t        // == end transform regexp\n\t\n\t        reTransform = new RegExp(transform, 'g');\n\t\n\t    return function(attributeValue) {\n\t\n\t      // start with identity matrix\n\t      var matrix = iMatrix.concat(),\n\t          matrices = [];\n\t\n\t      // return if no argument was given or\n\t      // an argument does not match transform attribute regexp\n\t      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n\t        return matrix;\n\t      }\n\t\n\t      attributeValue.replace(reTransform, function(match) {\n\t\n\t        var m = new RegExp(transform).exec(match).filter(function (match) {\n\t              // match !== '' && match != null\n\t              return (!!match);\n\t            }),\n\t            operation = m[1],\n\t            args = m.slice(2).map(parseFloat);\n\t\n\t        switch (operation) {\n\t          case 'translate':\n\t            translateMatrix(matrix, args);\n\t            break;\n\t          case 'rotate':\n\t            args[0] = fabric.util.degreesToRadians(args[0]);\n\t            rotateMatrix(matrix, args);\n\t            break;\n\t          case 'scale':\n\t            scaleMatrix(matrix, args);\n\t            break;\n\t          case 'skewX':\n\t            skewMatrix(matrix, args, 2);\n\t            break;\n\t          case 'skewY':\n\t            skewMatrix(matrix, args, 1);\n\t            break;\n\t          case 'matrix':\n\t            matrix = args;\n\t            break;\n\t        }\n\t\n\t        // snapshot current matrix into matrices array\n\t        matrices.push(matrix.concat());\n\t        // reset\n\t        matrix = iMatrix.concat();\n\t      });\n\t\n\t      var combinedMatrix = matrices[0];\n\t      while (matrices.length > 1) {\n\t        matrices.shift();\n\t        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n\t      }\n\t      return combinedMatrix;\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleString(style, oStyle) {\n\t    var attr, value;\n\t    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n\t      var pair = chunk.split(':');\n\t\n\t      attr = pair[0].trim().toLowerCase();\n\t      value =  pair[1].trim();\n\t\n\t      oStyle[attr] = value;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleObject(style, oStyle) {\n\t    var attr, value;\n\t    for (var prop in style) {\n\t      if (typeof style[prop] === 'undefined') {\n\t        continue;\n\t      }\n\t\n\t      attr = prop.toLowerCase();\n\t      value = style[prop];\n\t\n\t      oStyle[attr] = value;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function getGlobalStylesForElement(element, svgUid) {\n\t    var styles = { };\n\t    for (var rule in fabric.cssRules[svgUid]) {\n\t      if (elementMatchesRule(element, rule.split(' '))) {\n\t        for (var property in fabric.cssRules[svgUid][rule]) {\n\t          styles[property] = fabric.cssRules[svgUid][rule][property];\n\t        }\n\t      }\n\t    }\n\t    return styles;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function elementMatchesRule(element, selectors) {\n\t    var firstMatching, parentMatching = true;\n\t    //start from rightmost selector.\n\t    firstMatching = selectorMatches(element, selectors.pop());\n\t    if (firstMatching && selectors.length) {\n\t      parentMatching = doesSomeParentMatch(element, selectors);\n\t    }\n\t    return firstMatching && parentMatching && (selectors.length === 0);\n\t  }\n\t\n\t  function doesSomeParentMatch(element, selectors) {\n\t    var selector, parentMatching = true;\n\t    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n\t      if (parentMatching) {\n\t        selector = selectors.pop();\n\t      }\n\t      element = element.parentNode;\n\t      parentMatching = selectorMatches(element, selector);\n\t    }\n\t    return selectors.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function selectorMatches(element, selector) {\n\t    var nodeName = element.nodeName,\n\t        classNames = element.getAttribute('class'),\n\t        id = element.getAttribute('id'), matcher;\n\t    // i check if a selector matches slicing away part from it.\n\t    // if i get empty string i should match\n\t    matcher = new RegExp('^' + nodeName, 'i');\n\t    selector = selector.replace(matcher, '');\n\t    if (id && selector.length) {\n\t      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n\t      selector = selector.replace(matcher, '');\n\t    }\n\t    if (classNames && selector.length) {\n\t      classNames = classNames.split(' ');\n\t      for (var i = classNames.length; i--;) {\n\t        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n\t        selector = selector.replace(matcher, '');\n\t      }\n\t    }\n\t    return selector.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * to support IE8 missing getElementById on SVGdocument\n\t   */\n\t  function elementById(doc, id) {\n\t    var el;\n\t    doc.getElementById && (el = doc.getElementById(id));\n\t    if (el) {\n\t      return el;\n\t    }\n\t    var node, i, nodelist = doc.getElementsByTagName('*');\n\t    for (i = 0; i < nodelist.length; i++) {\n\t      node = nodelist[i];\n\t      if (id === node.getAttribute('id')) {\n\t        return node;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseUseDirectives(doc) {\n\t    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\t\n\t    while (nodelist.length && i < nodelist.length) {\n\t      var el = nodelist[i],\n\t          xlink = el.getAttribute('xlink:href').substr(1),\n\t          x = el.getAttribute('x') || 0,\n\t          y = el.getAttribute('y') || 0,\n\t          el2 = elementById(doc, xlink).cloneNode(true),\n\t          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n\t          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\t\n\t      applyViewboxTransform(el2);\n\t      if (/^svg$/i.test(el2.nodeName)) {\n\t        var el3 = el2.ownerDocument.createElement('g');\n\t        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n\t          attr = attrs.item(j);\n\t          el3.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t        // el2.firstChild != null\n\t        while (el2.firstChild) {\n\t          el3.appendChild(el2.firstChild);\n\t        }\n\t        el2 = el3;\n\t      }\n\t\n\t      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n\t        attr = attrs.item(j);\n\t        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n\t          continue;\n\t        }\n\t\n\t        if (attr.nodeName === 'transform') {\n\t          currentTrans = attr.nodeValue + ' ' + currentTrans;\n\t        }\n\t        else {\n\t          el2.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t      }\n\t\n\t      el2.setAttribute('transform', currentTrans);\n\t      el2.setAttribute('instantiated_by_use', '1');\n\t      el2.removeAttribute('id');\n\t      parentNode = el.parentNode;\n\t      parentNode.replaceChild(el2, el);\n\t      // some browsers do not shorten nodelist after replaceChild (IE8)\n\t      if (nodelist.length === oldLength) {\n\t        i++;\n\t      }\n\t    }\n\t  }\n\t\n\t  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n\t  // matches, e.g.: +14.56e-12, etc.\n\t  var reViewBoxAttrValue = new RegExp(\n\t    '^' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n\t    '$'\n\t  );\n\t\n\t  /**\n\t   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n\t   */\n\t  function applyViewboxTransform(element) {\n\t\n\t    var viewBoxAttr = element.getAttribute('viewBox'),\n\t        scaleX = 1,\n\t        scaleY = 1,\n\t        minX = 0,\n\t        minY = 0,\n\t        viewBoxWidth, viewBoxHeight, matrix, el,\n\t        widthAttr = element.getAttribute('width'),\n\t        heightAttr = element.getAttribute('height'),\n\t        x = element.getAttribute('x') || 0,\n\t        y = element.getAttribute('y') || 0,\n\t        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n\t        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n\t                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n\t        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n\t        toBeParsed = missingViewBox && missingDimAttr,\n\t        parsedDim = { }, translateMatrix = '';\n\t\n\t    parsedDim.width = 0;\n\t    parsedDim.height = 0;\n\t    parsedDim.toBeParsed = toBeParsed;\n\t\n\t    if (toBeParsed) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (missingViewBox) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      return parsedDim;\n\t    }\n\t\n\t    minX = -parseFloat(viewBoxAttr[1]);\n\t    minY = -parseFloat(viewBoxAttr[2]);\n\t    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n\t    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\t\n\t    if (!missingDimAttr) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      scaleX = parsedDim.width / viewBoxWidth;\n\t      scaleY = parsedDim.height / viewBoxHeight;\n\t    }\n\t    else {\n\t      parsedDim.width = viewBoxWidth;\n\t      parsedDim.height = viewBoxHeight;\n\t    }\n\t\n\t    // default is to preserve aspect ratio\n\t    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n\t    if (preserveAspectRatio.alignX !== 'none') {\n\t      //translate all container for the effect of Mid, Min, Max\n\t      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n\t    }\n\t\n\t    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (x || y) {\n\t      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n\t    }\n\t\n\t    matrix = translateMatrix + ' matrix(' + scaleX +\n\t                  ' 0' +\n\t                  ' 0 ' +\n\t                  scaleY + ' ' +\n\t                  (minX * scaleX) + ' ' +\n\t                  (minY * scaleY) + ') ';\n\t\n\t    if (element.nodeName === 'svg') {\n\t      el = element.ownerDocument.createElement('g');\n\t      // element.firstChild != null\n\t      while (element.firstChild) {\n\t        el.appendChild(element.firstChild);\n\t      }\n\t      element.appendChild(el);\n\t    }\n\t    else {\n\t      el = element;\n\t      matrix = el.getAttribute('transform') + matrix;\n\t    }\n\t\n\t    el.setAttribute('transform', matrix);\n\t    return parsedDim;\n\t  }\n\t\n\t  function hasAncestorWithNodeName(element, nodeName) {\n\t    while (element && (element = element.parentNode)) {\n\t      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n\t        && !element.getAttribute('instantiated_by_use')) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {SVGDocument} doc SVG document to parse\n\t   * @param {Function} callback Callback to call when parsing is finished;\n\t   * It's being passed an array of elements (parsed from a document).\n\t   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t   * @param {Object} [parsingOptions] options for parsing document\n\t   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n\t   */\n\t  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n\t    if (!doc) {\n\t      return;\n\t    }\n\t\n\t    parseUseDirectives(doc);\n\t\n\t    var svgUid =  fabric.Object.__uid++,\n\t        options = applyViewboxTransform(doc),\n\t        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\t    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n\t    options.svgUid = svgUid;\n\t\n\t    if (descendants.length === 0 && fabric.isLikelyNode) {\n\t      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n\t      // https://github.com/ajaxorg/node-o3-xml/issues/21\n\t      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n\t      var arr = [];\n\t      for (var i = 0, len = descendants.length; i < len; i++) {\n\t        arr[i] = descendants[i];\n\t      }\n\t      descendants = arr;\n\t    }\n\t\n\t    var elements = descendants.filter(function(el) {\n\t      applyViewboxTransform(el);\n\t      return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n\t            !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n\t    });\n\t\n\t    if (!elements || (elements && !elements.length)) {\n\t      callback && callback([], {});\n\t      return;\n\t    }\n\t\n\t    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n\t    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n\t    // Precedence of rules:   style > class > attribute\n\t    fabric.parseElements(elements, function(instances) {\n\t      if (callback) {\n\t        callback(instances, options);\n\t      }\n\t    }, clone(options), reviver, parsingOptions);\n\t  };\n\t\n\t  var reFontDeclaration = new RegExp(\n\t    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n\t    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n\t      fabric.reNum +\n\t    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\t\n\t  extend(fabric, {\n\t    /**\n\t     * Parses a short font declaration, building adding its properties to a style object\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {String} value font declaration\n\t     * @param {Object} oStyle definition\n\t     */\n\t    parseFontDeclaration: function(value, oStyle) {\n\t      var match = value.match(reFontDeclaration);\n\t\n\t      if (!match) {\n\t        return;\n\t      }\n\t      var fontStyle = match[1],\n\t          // font variant is not used\n\t          // fontVariant = match[2],\n\t          fontWeight = match[3],\n\t          fontSize = match[4],\n\t          lineHeight = match[5],\n\t          fontFamily = match[6];\n\t\n\t      if (fontStyle) {\n\t        oStyle.fontStyle = fontStyle;\n\t      }\n\t      if (fontWeight) {\n\t        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n\t      }\n\t      if (fontSize) {\n\t        oStyle.fontSize = parseUnit(fontSize);\n\t      }\n\t      if (fontFamily) {\n\t        oStyle.fontFamily = fontFamily;\n\t      }\n\t      if (lineHeight) {\n\t        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Parses an SVG document, returning all of the gradient declarations found in it\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n\t     */\n\t    getGradientDefs: function(doc) {\n\t      var tagArray = [\n\t            'linearGradient',\n\t            'radialGradient',\n\t            'svg:linearGradient',\n\t            'svg:radialGradient'],\n\t          elList = _getMultipleNodes(doc, tagArray),\n\t          el, j = 0, id, xlink,\n\t          gradientDefs = { }, idsToXlinkMap = { };\n\t\n\t      j = elList.length;\n\t\n\t      while (j--) {\n\t        el = elList[j];\n\t        xlink = el.getAttribute('xlink:href');\n\t        id = el.getAttribute('id');\n\t        if (xlink) {\n\t          idsToXlinkMap[id] = xlink.substr(1);\n\t        }\n\t        gradientDefs[id] = el;\n\t      }\n\t\n\t      for (id in idsToXlinkMap) {\n\t        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n\t        el = gradientDefs[id];\n\t        while (el2.firstChild) {\n\t          el.appendChild(el2.firstChild);\n\t        }\n\t      }\n\t      return gradientDefs;\n\t    },\n\t\n\t    /**\n\t     * Returns an object of attributes' name/value, given element and an array of attribute names;\n\t     * Parses parent \"g\" nodes recursively upwards.\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {DOMElement} element Element to parse\n\t     * @param {Array} attributes Array of attributes to parse\n\t     * @return {Object} object containing parsed attributes' names/values\n\t     */\n\t    parseAttributes: function(element, attributes, svgUid) {\n\t\n\t      if (!element) {\n\t        return;\n\t      }\n\t\n\t      var value,\n\t          parentAttributes = { },\n\t          fontSize;\n\t\n\t      if (typeof svgUid === 'undefined') {\n\t        svgUid = element.getAttribute('svgUid');\n\t      }\n\t      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\t      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n\t        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n\t      }\n\t      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n\t                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t\n\t      var ownAttributes = attributes.reduce(function(memo, attr) {\n\t        value = element.getAttribute(attr);\n\t        if (value) { // eslint-disable-line\n\t          memo[attr] = value;\n\t        }\n\t        return memo;\n\t      }, { });\n\t      // add values parsed from style, which take precedence over attributes\n\t      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\t      ownAttributes = extend(ownAttributes,\n\t        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\t\n\t      var normalizedAttr, normalizedValue, normalizedStyle = {};\n\t      for (var attr in ownAttributes) {\n\t        normalizedAttr = normalizeAttr(attr);\n\t        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n\t        normalizedStyle[normalizedAttr] = normalizedValue;\n\t      }\n\t      if (normalizedStyle && normalizedStyle.font) {\n\t        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n\t      }\n\t      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n\t      return reAllowedParents.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n\t    },\n\t\n\t    /**\n\t     * Transforms an array of svg elements to corresponding fabric.* instances\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {Array} elements Array of elements to parse\n\t     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n\t     * @param {Object} [options] Options object\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n\t      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n\t    },\n\t\n\t    /**\n\t     * Parses \"style\" attribute, retuning an object with values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {SVGElement} element Element to parse\n\t     * @return {Object} Objects with values parsed from style attribute of an element\n\t     */\n\t    parseStyleAttribute: function(element) {\n\t      var oStyle = { },\n\t          style = element.getAttribute('style');\n\t\n\t      if (!style) {\n\t        return oStyle;\n\t      }\n\t\n\t      if (typeof style === 'string') {\n\t        parseStyleString(style, oStyle);\n\t      }\n\t      else {\n\t        parseStyleObject(style, oStyle);\n\t      }\n\t\n\t      return oStyle;\n\t    },\n\t\n\t    /**\n\t     * Parses \"points\" attribute, returning an array of values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {String} points points attribute string\n\t     * @return {Array} array of points\n\t     */\n\t    parsePointsAttribute: function(points) {\n\t\n\t      // points attribute is required and must not be empty\n\t      if (!points) {\n\t        return null;\n\t      }\n\t\n\t      // replace commas with whitespace and remove bookending whitespace\n\t      points = points.replace(/,/g, ' ').trim();\n\t\n\t      points = points.split(/\\s+/);\n\t      var parsedPoints = [], i, len;\n\t\n\t      i = 0;\n\t      len = points.length;\n\t      for (; i < len; i += 2) {\n\t        parsedPoints.push({\n\t          x: parseFloat(points[i]),\n\t          y: parseFloat(points[i + 1])\n\t        });\n\t      }\n\t\n\t      // odd number of points is an error\n\t      // if (parsedPoints.length % 2 !== 0) {\n\t      //   return null;\n\t      // }\n\t\n\t      return parsedPoints;\n\t    },\n\t\n\t    /**\n\t     * Returns CSS rules for a given SVG document\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} CSS rules of this document\n\t     */\n\t    getCSSRules: function(doc) {\n\t      var styles = doc.getElementsByTagName('style'),\n\t          allRules = { }, rules;\n\t\n\t      // very crude parsing of style contents\n\t      for (var i = 0, len = styles.length; i < len; i++) {\n\t        // IE9 doesn't support textContent, but provides text instead.\n\t        var styleContents = styles[i].textContent || styles[i].text;\n\t\n\t        // remove comments\n\t        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\t        if (styleContents.trim() === '') {\n\t          continue;\n\t        }\n\t        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n\t        rules = rules.map(function(rule) { return rule.trim(); });\n\t        rules.forEach(function(rule) {\n\t\n\t          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n\t              ruleObj = { }, declaration = match[2].trim(),\n\t              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\t\n\t          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n\t            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n\t                property = pair[0],\n\t                value = pair[1];\n\t            ruleObj[property] = value;\n\t          }\n\t          rule = match[1];\n\t          rule.split(',').forEach(function(_rule) {\n\t            _rule = _rule.replace(/^svg/i, '').trim();\n\t            if (_rule === '') {\n\t              return;\n\t            }\n\t            if (allRules[_rule]) {\n\t              fabric.util.object.extend(allRules[_rule], ruleObj);\n\t            }\n\t            else {\n\t              allRules[_rule] = fabric.util.object.clone(ruleObj);\n\t            }\n\t          });\n\t        });\n\t      }\n\t      return allRules;\n\t    },\n\t\n\t    /**\n\t     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n\t     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n\t     * @memberOf fabric\n\t     * @param {String} url\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     * @param {Object} [options] Object containing options for parsing\n\t     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n\t     */\n\t    loadSVGFromURL: function(url, callback, reviver, options) {\n\t\n\t      url = url.replace(/^\\n\\s*/, '').trim();\n\t      new fabric.util.request(url, {\n\t        method: 'get',\n\t        onComplete: onComplete\n\t      });\n\t\n\t      function onComplete(r) {\n\t\n\t        var xml = r.responseXML;\n\t        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n\t          xml = new ActiveXObject('Microsoft.XMLDOM');\n\t          xml.async = 'false';\n\t          //IE chokes on DOCTYPE\n\t          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t        }\n\t        if (!xml || !xml.documentElement) {\n\t          callback && callback(null);\n\t        }\n\t\n\t        fabric.parseSVGDocument(xml.documentElement, function (results, _options) {\n\t          callback && callback(results, _options);\n\t        }, reviver, options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n\t     * @memberOf fabric\n\t     * @param {String} string\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     * @param {Object} [options] Object containing options for parsing\n\t     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n\t     */\n\t    loadSVGFromString: function(string, callback, reviver, options) {\n\t      string = string.trim();\n\t      var doc;\n\t      if (typeof DOMParser !== 'undefined') {\n\t        var parser = new DOMParser();\n\t        if (parser && parser.parseFromString) {\n\t          doc = parser.parseFromString(string, 'text/xml');\n\t        }\n\t      }\n\t      else if (fabric.window.ActiveXObject) {\n\t        doc = new ActiveXObject('Microsoft.XMLDOM');\n\t        doc.async = 'false';\n\t        // IE chokes on DOCTYPE\n\t        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t      }\n\t\n\t      fabric.parseSVGDocument(doc.documentElement, function (results, _options) {\n\t        callback(results, _options);\n\t      }, reviver, options);\n\t    }\n\t  });\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n\t  this.elements = elements;\n\t  this.callback = callback;\n\t  this.options = options;\n\t  this.reviver = reviver;\n\t  this.svgUid = (options && options.svgUid) || 0;\n\t  this.parsingOptions = parsingOptions;\n\t};\n\t\n\tfabric.ElementsParser.prototype.parse = function() {\n\t  this.instances = new Array(this.elements.length);\n\t  this.numElements = this.elements.length;\n\t\n\t  this.createObjects();\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObjects = function() {\n\t  for (var i = 0, len = this.elements.length; i < len; i++) {\n\t    this.elements[i].setAttribute('svgUid', this.svgUid);\n\t    (function(_obj, i) {\n\t      setTimeout(function() {\n\t        _obj.createObject(_obj.elements[i], i);\n\t      }, 0);\n\t    })(this, i);\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObject = function(el, index) {\n\t  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n\t  if (klass && klass.fromElement) {\n\t    try {\n\t      this._createObject(klass, el, index);\n\t    }\n\t    catch (err) {\n\t      fabric.log(err);\n\t    }\n\t  }\n\t  else {\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n\t  if (klass.async) {\n\t    klass.fromElement(el, this.createCallback(index, el), this.options);\n\t  }\n\t  else {\n\t    var obj = klass.fromElement(el, this.options);\n\t    this.resolveGradient(obj, 'fill');\n\t    this.resolveGradient(obj, 'stroke');\n\t    this.reviver && this.reviver(el, obj);\n\t    this.instances[index] = obj;\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createCallback = function(index, el) {\n\t  var _this = this;\n\t  return function(obj) {\n\t    _this.resolveGradient(obj, 'fill');\n\t    _this.resolveGradient(obj, 'stroke');\n\t    _this.reviver && _this.reviver(el, obj);\n\t    _this.instances[index] = obj;\n\t    _this.checkIfDone();\n\t  };\n\t};\n\t\n\tfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\t\n\t  var instanceFillValue = obj.get(property);\n\t  if (!(/^url\\(/).test(instanceFillValue)) {\n\t    return;\n\t  }\n\t  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n\t  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n\t    obj.set(property,\n\t      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.checkIfDone = function() {\n\t  if (--this.numElements === 0) {\n\t    this.instances = this.instances.filter(function(el) {\n\t      // eslint-disable-next-line no-eq-null, eqeqeq\n\t      return el != null;\n\t    });\n\t    this.callback(this.instances);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Point) {\n\t    fabric.warn('fabric.Point is already defined');\n\t    return;\n\t  }\n\t\n\t  fabric.Point = Point;\n\t\n\t  /**\n\t   * Point class\n\t   * @class fabric.Point\n\t   * @memberOf fabric\n\t   * @constructor\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {fabric.Point} thisArg\n\t   */\n\t  function Point(x, y) {\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  Point.prototype = /** @lends fabric.Point.prototype */ {\n\t\n\t    type: 'point',\n\t\n\t    constructor: Point,\n\t\n\t    /**\n\t     * Adds another point to this one and returns another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point instance with added values\n\t     */\n\t    add: function (that) {\n\t      return new Point(this.x + that.x, this.y + that.y);\n\t    },\n\t\n\t    /**\n\t     * Adds another point to this one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    addEquals: function (that) {\n\t      this.x += that.x;\n\t      this.y += that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} new Point with added value\n\t     */\n\t    scalarAdd: function (scalar) {\n\t      return new Point(this.x + scalar, this.y + scalar);\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    scalarAddEquals: function (scalar) {\n\t      this.x += scalar;\n\t      this.y += scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point and returns a new one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point object with subtracted values\n\t     */\n\t    subtract: function (that) {\n\t      return new Point(this.x - that.x, this.y - that.y);\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    subtractEquals: function (that) {\n\t      this.x -= that.x;\n\t      this.y -= that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    scalarSubtract: function (scalar) {\n\t      return new Point(this.x - scalar, this.y - scalar);\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    scalarSubtractEquals: function (scalar) {\n\t      this.x -= scalar;\n\t      this.y -= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value and returns a new one\n\t     * TODO: rename in scalarMultiply in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    multiply: function (scalar) {\n\t      return new Point(this.x * scalar, this.y * scalar);\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value\n\t     * TODO: rename in scalarMultiplyEquals in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    multiplyEquals: function (scalar) {\n\t      this.x *= scalar;\n\t      this.y *= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value and returns a new one\n\t     * TODO: rename in scalarDivide in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    divide: function (scalar) {\n\t      return new Point(this.x / scalar, this.y / scalar);\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value\n\t     * TODO: rename in scalarDivideEquals in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    divideEquals: function (scalar) {\n\t      this.x /= scalar;\n\t      this.y /= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    eq: function (that) {\n\t      return (this.x === that.x && this.y === that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lt: function (that) {\n\t      return (this.x < that.x && this.y < that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lte: function (that) {\n\t      return (this.x <= that.x && this.y <= that.y);\n\t    },\n\t\n\t    /**\n\t\n\t     * Returns true if this point is greater another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gt: function (that) {\n\t      return (this.x > that.x && this.y > that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is greater than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gte: function (that) {\n\t      return (this.x >= that.x && this.y >= that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns new point which is the result of linear interpolation with this one and another one\n\t     * @param {fabric.Point} that\n\t     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n\t     * @return {fabric.Point}\n\t     */\n\t    lerp: function (that, t) {\n\t      if (typeof t === 'undefined') {\n\t        t = 0.5;\n\t      }\n\t      t = Math.max(Math.min(1, t), 0);\n\t      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n\t    },\n\t\n\t    /**\n\t     * Returns distance from this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {Number}\n\t     */\n\t    distanceFrom: function (that) {\n\t      var dx = this.x - that.x,\n\t          dy = this.y - that.y;\n\t      return Math.sqrt(dx * dx + dy * dy);\n\t    },\n\t\n\t    /**\n\t     * Returns the point between this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    midPointFrom: function (that) {\n\t      return this.lerp(that);\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the min of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    min: function (that) {\n\t      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the max of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    max: function (that) {\n\t      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of this point\n\t     * @return {String}\n\t     */\n\t    toString: function () {\n\t      return this.x + ',' + this.y;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @chainable\n\t     */\n\t    setXY: function (x, y) {\n\t      this.x = x;\n\t      this.y = y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets x of this point\n\t     * @param {Number} x\n\t     * @chainable\n\t     */\n\t    setX: function (x) {\n\t      this.x = x;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets y of this point\n\t     * @param {Number} y\n\t     * @chainable\n\t     */\n\t    setY: function (y) {\n\t      this.y = y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point from another point\n\t     * @param {fabric.Point} that\n\t     * @chainable\n\t     */\n\t    setFromPoint: function (that) {\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Swaps x/y of this point and another point\n\t     * @param {fabric.Point} that\n\t     */\n\t    swap: function (that) {\n\t      var x = this.x,\n\t          y = this.y;\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      that.x = x;\n\t      that.y = y;\n\t    },\n\t\n\t    /**\n\t     * return a cloned instance of the point\n\t     * @return {fabric.Point}\n\t     */\n\t    clone: function () {\n\t      return new Point(this.x, this.y);\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Intersection) {\n\t    fabric.warn('fabric.Intersection is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Intersection class\n\t   * @class fabric.Intersection\n\t   * @memberOf fabric\n\t   * @constructor\n\t   */\n\t  function Intersection(status) {\n\t    this.status = status;\n\t    this.points = [];\n\t  }\n\t\n\t  fabric.Intersection = Intersection;\n\t\n\t  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\t\n\t    constructor: Intersection,\n\t\n\t    /**\n\t     * Appends a point to intersection\n\t     * @param {fabric.Point} point\n\t     * @return {fabric.Intersection} thisArg\n\t     * @chainable\n\t     */\n\t    appendPoint: function (point) {\n\t      this.points.push(point);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Appends points to intersection\n\t     * @param {Array} points\n\t     * @return {fabric.Intersection} thisArg\n\t     * @chainable\n\t     */\n\t    appendPoints: function (points) {\n\t      this.points = this.points.concat(points);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Checks if one line intersects another\n\t   * TODO: rename in intersectSegmentSegment\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {fabric.Point} b1\n\t   * @param {fabric.Point} b2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n\t    var result,\n\t        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n\t        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n\t        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\t    if (uB !== 0) {\n\t      var ua = uaT / uB,\n\t          ub = ubT / uB;\n\t      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n\t        result = new Intersection('Intersection');\n\t        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n\t      }\n\t      else {\n\t        result = new Intersection();\n\t      }\n\t    }\n\t    else {\n\t      if (uaT === 0 || ubT === 0) {\n\t        result = new Intersection('Coincident');\n\t      }\n\t      else {\n\t        result = new Intersection('Parallel');\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if line intersects polygon\n\t   * TODO: rename in intersectSegmentPolygon\n\t   * fix detection of coincident\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {Array} points\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n\t    var result = new Intersection(),\n\t        length = points.length,\n\t        b1, b2, inter;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      b1 = points[i];\n\t      b2 = points[(i + 1) % length];\n\t      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects another polygon\n\t   * @static\n\t   * @param {Array} points1\n\t   * @param {Array} points2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n\t    var result = new Intersection(),\n\t        length = points1.length;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      var a1 = points1[i],\n\t          a2 = points1[(i + 1) % length],\n\t          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects rectangle\n\t   * @static\n\t   * @param {Array} points\n\t   * @param {fabric.Point} r1\n\t   * @param {fabric.Point} r2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n\t    var min = r1.min(r2),\n\t        max = r1.max(r2),\n\t        topRight = new fabric.Point(max.x, min.y),\n\t        bottomLeft = new fabric.Point(min.x, max.y),\n\t        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n\t        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n\t        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n\t        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n\t        result = new Intersection();\n\t\n\t    result.appendPoints(inter1.points);\n\t    result.appendPoints(inter2.points);\n\t    result.appendPoints(inter3.points);\n\t    result.appendPoints(inter4.points);\n\t\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Color) {\n\t    fabric.warn('fabric.Color is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Color class\n\t   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n\t   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n\t   *\n\t   * @class fabric.Color\n\t   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n\t   * @return {fabric.Color} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n\t   */\n\t  function Color(color) {\n\t    if (!color) {\n\t      this.setSource([0, 0, 0, 1]);\n\t    }\n\t    else {\n\t      this._tryParsingColor(color);\n\t    }\n\t  }\n\t\n\t  fabric.Color = Color;\n\t\n\t  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {String|Array} color Color value to parse\n\t     */\n\t    _tryParsingColor: function(color) {\n\t      var source;\n\t\n\t      if (color in Color.colorNameMap) {\n\t        color = Color.colorNameMap[color];\n\t      }\n\t\n\t      if (color === 'transparent') {\n\t        source = [255, 255, 255, 0];\n\t      }\n\t\n\t      if (!source) {\n\t        source = Color.sourceFromHex(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromRgb(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromHsl(color);\n\t      }\n\t      if (!source) {\n\t        //if color is not recognize let's make black as canvas does\n\t        source = [0, 0, 0, 1];\n\t      }\n\t      if (source) {\n\t        this.setSource(source);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t     * @private\n\t     * @param {Number} r Red color value\n\t     * @param {Number} g Green color value\n\t     * @param {Number} b Blue color value\n\t     * @return {Array} Hsl color\n\t     */\n\t    _rgbToHsl: function(r, g, b) {\n\t      r /= 255; g /= 255; b /= 255;\n\t\n\t      var h, s, l,\n\t          max = fabric.util.array.max([r, g, b]),\n\t          min = fabric.util.array.min([r, g, b]);\n\t\n\t      l = (max + min) / 2;\n\t\n\t      if (max === min) {\n\t        h = s = 0; // achromatic\n\t      }\n\t      else {\n\t        var d = max - min;\n\t        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t        switch (max) {\n\t          case r:\n\t            h = (g - b) / d + (g < b ? 6 : 0);\n\t            break;\n\t          case g:\n\t            h = (b - r) / d + 2;\n\t            break;\n\t          case b:\n\t            h = (r - g) / d + 4;\n\t            break;\n\t        }\n\t        h /= 6;\n\t      }\n\t\n\t      return [\n\t        Math.round(h * 360),\n\t        Math.round(s * 100),\n\t        Math.round(l * 100)\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @return {Array}\n\t     */\n\t    getSource: function() {\n\t      return this._source;\n\t    },\n\t\n\t    /**\n\t     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @param {Array} source\n\t     */\n\t    setSource: function(source) {\n\t      this._source = source;\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in RGB format\n\t     * @return {String} ex: rgb(0-255,0-255,0-255)\n\t     */\n\t    toRgb: function() {\n\t      var source = this.getSource();\n\t      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in RGBA format\n\t     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n\t     */\n\t    toRgba: function() {\n\t      var source = this.getSource();\n\t      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in HSL format\n\t     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n\t     */\n\t    toHsl: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in HSLA format\n\t     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n\t     */\n\t    toHsla: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in HEX format\n\t     * @return {String} ex: FF5555\n\t     */\n\t    toHex: function() {\n\t      var source = this.getSource(), r, g, b;\n\t\n\t      r = source[0].toString(16);\n\t      r = (r.length === 1) ? ('0' + r) : r;\n\t\n\t      g = source[1].toString(16);\n\t      g = (g.length === 1) ? ('0' + g) : g;\n\t\n\t      b = source[2].toString(16);\n\t      b = (b.length === 1) ? ('0' + b) : b;\n\t\n\t      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in HEXA format\n\t     * @return {String} ex: FF5555CC\n\t     */\n\t    toHexa: function() {\n\t      var source = this.getSource(), a;\n\t\n\t      a = source[3] * 255;\n\t      a = a.toString(16);\n\t      a = (a.length === 1) ? ('0' + a) : a;\n\t\n\t      return this.toHex() + a.toUpperCase();\n\t    },\n\t\n\t    /**\n\t     * Gets value of alpha channel for this color\n\t     * @return {Number} 0-1\n\t     */\n\t    getAlpha: function() {\n\t      return this.getSource()[3];\n\t    },\n\t\n\t    /**\n\t     * Sets value of alpha channel for this color\n\t     * @param {Number} alpha Alpha value 0-1\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    setAlpha: function(alpha) {\n\t      var source = this.getSource();\n\t      source[3] = alpha;\n\t      this.setSource(source);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its grayscale representation\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toGrayscale: function() {\n\t      var source = this.getSource(),\n\t          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n\t          currentAlpha = source[3];\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its black and white representation\n\t     * @param {Number} threshold\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toBlackWhite: function(threshold) {\n\t      var source = this.getSource(),\n\t          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n\t          currentAlpha = source[3];\n\t\n\t      threshold = threshold || 127;\n\t\n\t      average = (Number(average) < Number(threshold)) ? 0 : 255;\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Overlays color with another color\n\t     * @param {String|fabric.Color} otherColor\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    overlayWith: function(otherColor) {\n\t      if (!(otherColor instanceof Color)) {\n\t        otherColor = new Color(otherColor);\n\t      }\n\t\n\t      var result = [],\n\t          alpha = this.getAlpha(),\n\t          otherAlpha = 0.5,\n\t          source = this.getSource(),\n\t          otherSource = otherColor.getSource();\n\t\n\t      for (var i = 0; i < 3; i++) {\n\t        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n\t      }\n\t\n\t      result[3] = alpha;\n\t      this.setSource(result);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t   // eslint-disable-next-line max-len\n\t  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\t\n\t  /**\n\t   * Map of the 17 basic color names with HEX code\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n\t   */\n\t  fabric.Color.colorNameMap = {\n\t    aqua:    '#00FFFF',\n\t    black:   '#000000',\n\t    blue:    '#0000FF',\n\t    fuchsia: '#FF00FF',\n\t    gray:    '#808080',\n\t    grey:    '#808080',\n\t    green:   '#008000',\n\t    lime:    '#00FF00',\n\t    maroon:  '#800000',\n\t    navy:    '#000080',\n\t    olive:   '#808000',\n\t    orange:  '#FFA500',\n\t    purple:  '#800080',\n\t    red:     '#FF0000',\n\t    silver:  '#C0C0C0',\n\t    teal:    '#008080',\n\t    white:   '#FFFFFF',\n\t    yellow:  '#FFFF00'\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   * @param {Number} p\n\t   * @param {Number} q\n\t   * @param {Number} t\n\t   * @return {Number}\n\t   */\n\t  function hue2rgb(p, q, t) {\n\t    if (t < 0) {\n\t      t += 1;\n\t    }\n\t    if (t > 1) {\n\t      t -= 1;\n\t    }\n\t    if (t < 1 / 6) {\n\t      return p + (q - p) * 6 * t;\n\t    }\n\t    if (t < 1 / 2) {\n\t      return q;\n\t    }\n\t    if (t < 2 / 3) {\n\t      return p + (q - p) * (2 / 3 - t) * 6;\n\t    }\n\t    return p;\n\t  }\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGB format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgb = function(color) {\n\t    return Color.fromSource(Color.sourceFromRgb(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromRgb = function(color) {\n\t    var match = color.match(Color.reRGBa);\n\t    if (match) {\n\t      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n\t          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n\t          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\t\n\t      return [\n\t        parseInt(r, 10),\n\t        parseInt(g, 10),\n\t        parseInt(b, 10),\n\t        match[4] ? parseFloat(match[4]) : 1\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGBA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgba = Color.fromRgb;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSL format\n\t   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n\t   * @memberOf fabric.Color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsl = function(color) {\n\t    return Color.fromSource(Color.sourceFromHsl(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n\t   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n\t   * @return {Array} source\n\t   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n\t   */\n\t  fabric.Color.sourceFromHsl = function(color) {\n\t    var match = color.match(Color.reHSLa);\n\t    if (!match) {\n\t      return;\n\t    }\n\t\n\t    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n\t        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n\t        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n\t        r, g, b;\n\t\n\t    if (s === 0) {\n\t      r = g = b = l;\n\t    }\n\t    else {\n\t      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n\t          p = l * 2 - q;\n\t\n\t      r = hue2rgb(p, q, h + 1 / 3);\n\t      g = hue2rgb(p, q, h);\n\t      b = hue2rgb(p, q, h - 1 / 3);\n\t    }\n\t\n\t    return [\n\t      Math.round(r * 255),\n\t      Math.round(g * 255),\n\t      Math.round(b * 255),\n\t      match[4] ? parseFloat(match[4]) : 1\n\t    ];\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSLA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsla = Color.fromHsl;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: FF5555\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHex = function(color) {\n\t    return Color.fromSource(Color.sourceFromHex(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromHex = function(color) {\n\t    if (color.match(Color.reHex)) {\n\t      var value = color.slice(color.indexOf('#') + 1),\n\t          isShortNotation = (value.length === 3 || value.length === 4),\n\t          isRGBa = (value.length === 8 || value.length === 4),\n\t          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n\t          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n\t          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n\t          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\t\n\t      return [\n\t        parseInt(r, 16),\n\t        parseInt(g, 16),\n\t        parseInt(b, 16),\n\t        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {Array} source\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromSource = function(source) {\n\t    var oColor = new Color();\n\t    oColor.setSource(source);\n\t    return oColor;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /* _FROM_SVG_START_ */\n\t  function getColorStop(el) {\n\t    var style = el.getAttribute('style'),\n\t        offset = el.getAttribute('offset') || 0,\n\t        color, colorAlpha, opacity;\n\t\n\t    // convert percents to absolute values\n\t    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n\t    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\t    if (style) {\n\t      var keyValuePairs = style.split(/\\s*;\\s*/);\n\t\n\t      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n\t        keyValuePairs.pop();\n\t      }\n\t\n\t      for (var i = keyValuePairs.length; i--; ) {\n\t\n\t        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n\t            key = split[0].trim(),\n\t            value = split[1].trim();\n\t\n\t        if (key === 'stop-color') {\n\t          color = value;\n\t        }\n\t        else if (key === 'stop-opacity') {\n\t          opacity = value;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (!color) {\n\t      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n\t    }\n\t    if (!opacity) {\n\t      opacity = el.getAttribute('stop-opacity');\n\t    }\n\t\n\t    color = new fabric.Color(color);\n\t    colorAlpha = color.getAlpha();\n\t    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n\t    opacity *= colorAlpha;\n\t\n\t    return {\n\t      offset: offset,\n\t      color: color.toRgb(),\n\t      opacity: opacity\n\t    };\n\t  }\n\t\n\t  function getLinearCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('x1') || 0,\n\t      y1: el.getAttribute('y1') || 0,\n\t      x2: el.getAttribute('x2') || '100%',\n\t      y2: el.getAttribute('y2') || 0\n\t    };\n\t  }\n\t\n\t  function getRadialCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n\t      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n\t      r1: 0,\n\t      x2: el.getAttribute('cx') || '50%',\n\t      y2: el.getAttribute('cy') || '50%',\n\t      r2: el.getAttribute('r') || '50%'\n\t    };\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  /**\n\t   * Gradient class\n\t   * @class fabric.Gradient\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n\t   * @see {@link fabric.Gradient#initialize} for constructor definition\n\t   */\n\t  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\t\n\t    /**\n\t     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options || (options = { });\n\t\n\t      var coords = { };\n\t\n\t      this.id = fabric.Object.__uid++;\n\t      this.type = options.type || 'linear';\n\t\n\t      coords = {\n\t        x1: options.coords.x1 || 0,\n\t        y1: options.coords.y1 || 0,\n\t        x2: options.coords.x2 || 0,\n\t        y2: options.coords.y2 || 0\n\t      };\n\t\n\t      if (this.type === 'radial') {\n\t        coords.r1 = options.coords.r1 || 0;\n\t        coords.r2 = options.coords.r2 || 0;\n\t      }\n\t      this.coords = coords;\n\t      this.colorStops = options.colorStops.slice();\n\t      if (options.gradientTransform) {\n\t        this.gradientTransform = options.gradientTransform;\n\t      }\n\t      this.offsetX = options.offsetX || this.offsetX;\n\t      this.offsetY = options.offsetY || this.offsetY;\n\t    },\n\t\n\t    /**\n\t     * Adds another colorStop\n\t     * @param {Object} colorStop Object with offset and color\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    addColorStop: function(colorStops) {\n\t      for (var position in colorStops) {\n\t        var color = new fabric.Color(colorStops[position]);\n\t        this.colorStops.push({\n\t          offset: parseFloat(position),\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of a gradient\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object}\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var object = {\n\t        type: this.type,\n\t        coords: this.coords,\n\t        colorStops: this.colorStops,\n\t        offsetX: this.offsetX,\n\t        offsetY: this.offsetY,\n\t        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n\t      };\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an gradient\n\t     * @param {Object} object Object to create a gradient for\n\t     * @return {String} SVG representation of an gradient (linear/radial)\n\t     */\n\t    toSVG: function(object) {\n\t      var coords = clone(this.coords, true),\n\t          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n\t          needsSwap = coords.r1 > coords.r2;\n\t      // colorStops must be sorted ascending\n\t      colorStops.sort(function(a, b) {\n\t        return a.offset - b.offset;\n\t      });\n\t\n\t      if (!(object.group && object.group.type === 'path-group')) {\n\t        for (var prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2') {\n\t            coords[prop] += this.offsetX - object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += this.offsetY - object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      commonAttributes = 'id=\"SVGID_' + this.id +\n\t                     '\" gradientUnits=\"userSpaceOnUse\"';\n\t      if (this.gradientTransform) {\n\t        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n\t      }\n\t      if (this.type === 'linear') {\n\t        markup = [\n\t          '<linearGradient ',\n\t          commonAttributes,\n\t          ' x1=\"', coords.x1,\n\t          '\" y1=\"', coords.y1,\n\t          '\" x2=\"', coords.x2,\n\t          '\" y2=\"', coords.y2,\n\t          '\">\\n'\n\t        ];\n\t      }\n\t      else if (this.type === 'radial') {\n\t        // svg radial gradient has just 1 radius. the biggest.\n\t        markup = [\n\t          '<radialGradient ',\n\t          commonAttributes,\n\t          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n\t          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n\t          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n\t          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n\t          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n\t          '\">\\n'\n\t        ];\n\t      }\n\t\n\t      if (this.type === 'radial') {\n\t        if (needsSwap) {\n\t          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n\t          colorStops = colorStops.concat();\n\t          colorStops.reverse();\n\t          for (var i = 0; i < colorStops.length; i++) {\n\t            colorStops[i].offset = 1 - colorStops[i].offset;\n\t          }\n\t        }\n\t        var minRadius = Math.min(coords.r1, coords.r2);\n\t        if (minRadius > 0) {\n\t          // i have to shift all colorStops and add new one in 0.\n\t          var maxRadius = Math.max(coords.r1, coords.r2),\n\t              percentageShift = minRadius / maxRadius;\n\t          for (var i = 0; i < colorStops.length; i++) {\n\t            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < colorStops.length; i++) {\n\t        var colorStop = colorStops[i];\n\t        markup.push(\n\t          '<stop ',\n\t            'offset=\"', (colorStop.offset * 100) + '%',\n\t            '\" style=\"stop-color:', colorStop.color,\n\t            (colorStop.opacity !== null ? ';stop-opacity: ' + colorStop.opacity : ';'),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\t\n\t      return markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns an instance of CanvasGradient\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Object} object\n\t     * @return {CanvasGradient}\n\t     */\n\t    toLive: function(ctx, object) {\n\t      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\t\n\t      if (!this.type) {\n\t        return;\n\t      }\n\t\n\t      if (object.group && object.group.type === 'path-group') {\n\t        for (prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2') {\n\t            coords[prop] += -this.offsetX + object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += -this.offsetY + object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (this.type === 'linear') {\n\t        gradient = ctx.createLinearGradient(\n\t          coords.x1, coords.y1, coords.x2, coords.y2);\n\t      }\n\t      else if (this.type === 'radial') {\n\t        gradient = ctx.createRadialGradient(\n\t          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n\t      }\n\t\n\t      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n\t        var color = this.colorStops[i].color,\n\t            opacity = this.colorStops[i].opacity,\n\t            offset = this.colorStops[i].offset;\n\t\n\t        if (typeof opacity !== 'undefined') {\n\t          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n\t        }\n\t        gradient.addColorStop(offset, color);\n\t      }\n\t\n\t      return gradient;\n\t    }\n\t  });\n\t\n\t  fabric.util.object.extend(fabric.Gradient, {\n\t\n\t    /* _FROM_SVG_START_ */\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from an SVG element\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {SVGGradientElement} el SVG gradient element\n\t     * @param {fabric.Object} instance\n\t     * @return {fabric.Gradient} Gradient instance\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n\t     */\n\t    fromElement: function(el, instance) {\n\t\n\t      /**\n\t       *  @example:\n\t       *\n\t       *  <linearGradient id=\"linearGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\"/>\n\t       *    <stop offset=\"100%\" stop-color=\"black\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <linearGradient id=\"linearGrad2\">\n\t       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n\t       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n\t       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *  </radialGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad2\">\n\t       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n\t       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n\t       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n\t       *  </radialGradient>\n\t       *\n\t       */\n\t\n\t      var colorStopEls = el.getElementsByTagName('stop'),\n\t          type,\n\t          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n\t          gradientTransform = el.getAttribute('gradientTransform'),\n\t          colorStops = [],\n\t          coords, ellipseMatrix;\n\t\n\t      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n\t        type = 'linear';\n\t      }\n\t      else {\n\t        type = 'radial';\n\t      }\n\t\n\t      if (type === 'linear') {\n\t        coords = getLinearCoords(el);\n\t      }\n\t      else if (type === 'radial') {\n\t        coords = getRadialCoords(el);\n\t      }\n\t\n\t      for (var i = colorStopEls.length; i--; ) {\n\t        colorStops.push(getColorStop(colorStopEls[i]));\n\t      }\n\t\n\t      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\t\n\t      var gradient = new fabric.Gradient({\n\t        type: type,\n\t        coords: coords,\n\t        colorStops: colorStops,\n\t        offsetX: -instance.left,\n\t        offsetY: -instance.top\n\t      });\n\t\n\t      if (gradientTransform || ellipseMatrix !== '') {\n\t        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n\t      }\n\t      return gradient;\n\t    },\n\t    /* _FROM_SVG_END_ */\n\t\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from its object representation\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {Object} obj\n\t     * @param {Object} [options] Options object\n\t     */\n\t    forObject: function(obj, options) {\n\t      options || (options = { });\n\t      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n\t      return new fabric.Gradient(options);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n\t    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n\t    for (var prop in options) {\n\t      if (options[prop] === 'Infinity') {\n\t        options[prop] = 1;\n\t      }\n\t      else if (options[prop] === '-Infinity') {\n\t        options[prop] = 0;\n\t      }\n\t      propValue = parseFloat(options[prop], 10);\n\t      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n\t        multFactor = 0.01;\n\t      }\n\t      else {\n\t        multFactor = 1;\n\t      }\n\t      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n\t      }\n\t      else if (prop === 'y1' || prop === 'y2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n\t      }\n\t      options[prop] = propValue * multFactor + addFactor;\n\t    }\n\t    if (object.type === 'ellipse' &&\n\t        options.r2 !== null &&\n\t        gradientUnits === 'objectBoundingBox' &&\n\t        object.rx !== object.ry) {\n\t\n\t      var scaleFactor = object.ry / object.rx;\n\t      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n\t      if (options.y1) {\n\t        options.y1 /= scaleFactor;\n\t      }\n\t      if (options.y2) {\n\t        options.y2 /= scaleFactor;\n\t      }\n\t    }\n\t    return ellipseMatrix;\n\t  }\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  'use strict';\n\t\n\t  var toFixed = fabric.util.toFixed;\n\t\n\t  /**\n\t   * Pattern class\n\t   * @class fabric.Pattern\n\t   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n\t   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n\t   * @see {@link fabric.Pattern#initialize} for constructor definition\n\t   */\n\t\n\t\n\t  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\t\n\t    /**\n\t     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t     * @type String\n\t     * @default\n\t     */\n\t    repeat: 'repeat',\n\t\n\t    /**\n\t     * Pattern horizontal offset from object's left/top corner\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Pattern vertical offset from object's left/top corner\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @param {Function} [callback] function to invoke after callback init.\n\t     * @return {fabric.Pattern} thisArg\n\t     */\n\t    initialize: function(options, callback) {\n\t      options || (options = { });\n\t\n\t      this.id = fabric.Object.__uid++;\n\t      this.setOptions(options);\n\t      if (!options.source || (options.source && typeof options.source !== 'string')) {\n\t        callback && callback(this);\n\t        return;\n\t      }\n\t      // function string\n\t      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n\t        this.source = new Function(fabric.util.getFunctionBody(options.source));\n\t        callback && callback(this);\n\t      }\n\t      else {\n\t        // img src string\n\t        var _this = this;\n\t        this.source = fabric.util.createImage();\n\t        fabric.util.loadImage(options.source, function(img) {\n\t          _this.source = img;\n\t          callback && callback(_this);\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of a pattern\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of a pattern instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t          source, object;\n\t\n\t      // callback\n\t      if (typeof this.source === 'function') {\n\t        source = String(this.source);\n\t      }\n\t      // <img> element\n\t      else if (typeof this.source.src === 'string') {\n\t        source = this.source.src;\n\t      }\n\t      // <canvas> element\n\t      else if (typeof this.source === 'object' && this.source.toDataURL) {\n\t        source = this.source.toDataURL();\n\t      }\n\t\n\t      object = {\n\t        type: 'pattern',\n\t        source: source,\n\t        repeat: this.repeat,\n\t        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n\t        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n\t      };\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of a pattern\n\t     * @param {fabric.Object} object\n\t     * @return {String} SVG representation of a pattern\n\t     */\n\t    toSVG: function(object) {\n\t      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n\t          patternWidth = patternSource.width / object.width,\n\t          patternHeight = patternSource.height / object.height,\n\t          patternOffsetX = this.offsetX / object.width,\n\t          patternOffsetY = this.offsetY / object.height,\n\t          patternImgSrc = '';\n\t      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n\t        patternHeight = 1;\n\t      }\n\t      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n\t        patternWidth = 1;\n\t      }\n\t      if (patternSource.src) {\n\t        patternImgSrc = patternSource.src;\n\t      }\n\t      else if (patternSource.toDataURL) {\n\t        patternImgSrc = patternSource.toDataURL();\n\t      }\n\t\n\t      return '<pattern id=\"SVGID_' + this.id +\n\t                    '\" x=\"' + patternOffsetX +\n\t                    '\" y=\"' + patternOffsetY +\n\t                    '\" width=\"' + patternWidth +\n\t                    '\" height=\"' + patternHeight + '\">\\n' +\n\t               '<image x=\"0\" y=\"0\"' +\n\t                      ' width=\"' + patternSource.width +\n\t                      '\" height=\"' + patternSource.height +\n\t                      '\" xlink:href=\"' + patternImgSrc +\n\t               '\"></image>\\n' +\n\t             '</pattern>\\n';\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    setOptions: function(options) {\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns an instance of CanvasPattern\n\t     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n\t     * @return {CanvasPattern}\n\t     */\n\t    toLive: function(ctx) {\n\t      var source = typeof this.source === 'function' ? this.source() : this.source;\n\t\n\t      // if the image failed to load, return, and allow rest to continue loading\n\t      if (!source) {\n\t        return '';\n\t      }\n\t\n\t      // if an image\n\t      if (typeof source.src !== 'undefined') {\n\t        if (!source.complete) {\n\t          return '';\n\t        }\n\t        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n\t          return '';\n\t        }\n\t      }\n\t      return ctx.createPattern(source, this.repeat);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Shadow) {\n\t    fabric.warn('fabric.Shadow is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Shadow class\n\t   * @class fabric.Shadow\n\t   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n\t   * @see {@link fabric.Shadow#initialize} for constructor definition\n\t   */\n\t  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\t\n\t    /**\n\t     * Shadow color\n\t     * @type String\n\t     * @default\n\t     */\n\t    color: 'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Shadow blur\n\t     * @type Number\n\t     */\n\t    blur: 0,\n\t\n\t    /**\n\t     * Shadow horizontal offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Shadow vertical offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Whether the shadow should affect stroke operations\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    affectStroke: false,\n\t\n\t    /**\n\t     * Indicates whether toObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @return {fabric.Shadow} thisArg\n\t     */\n\t    initialize: function(options) {\n\t\n\t      if (typeof options === 'string') {\n\t        options = this._parseShadow(options);\n\t      }\n\t\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.id = fabric.Object.__uid++;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} shadow Shadow value to parse\n\t     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n\t     */\n\t    _parseShadow: function(shadow) {\n\t      var shadowStr = shadow.trim(),\n\t          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n\t          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\t\n\t      return {\n\t        color: color.trim(),\n\t        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n\t        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n\t        blur: parseInt(offsetsAndBlur[3], 10) || 0\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n\t     * @return {String} Returns CSS3 text-shadow declaration\n\t     */\n\t    toString: function() {\n\t      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of a shadow\n\t     * @param {fabric.Object} object\n\t     * @return {String} SVG representation of a shadow\n\t     */\n\t    toSVG: function(object) {\n\t      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t          offset = fabric.util.rotateVector(\n\t            { x: this.offsetX, y: this.offsetY },\n\t            fabric.util.degreesToRadians(-object.angle)),\n\t          BLUR_BOX = 20;\n\t\n\t      if (object.width && object.height) {\n\t        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n\t        // we add some extra space to filter box to contain the blur ( 20 )\n\t        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t      }\n\t      if (object.flipX) {\n\t        offset.x *= -1;\n\t      }\n\t      if (object.flipY) {\n\t        offset.y *= -1;\n\t      }\n\t      return (\n\t        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n\t          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n\t          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n\t            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n\t          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n\t          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n\t          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n\t          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n\t          '\\t<feMerge>\\n' +\n\t            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n\t            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n\t          '\\t</feMerge>\\n' +\n\t        '</filter>\\n');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns object representation of a shadow\n\t     * @return {Object} Object representation of a shadow instance\n\t     */\n\t    toObject: function() {\n\t      if (this.includeDefaultValues) {\n\t        return {\n\t          color: this.color,\n\t          blur: this.blur,\n\t          offsetX: this.offsetX,\n\t          offsetY: this.offsetY,\n\t          affectStroke: this.affectStroke\n\t        };\n\t      }\n\t      var obj = { }, proto = fabric.Shadow.prototype;\n\t\n\t      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n\t        if (this[prop] !== proto[prop]) {\n\t          obj[prop] = this[prop];\n\t        }\n\t      }, this);\n\t\n\t      return obj;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Shadow\n\t   */\n\t  // eslint-disable-next-line max-len\n\t  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function () {\n\t\n\t  'use strict';\n\t\n\t  if (fabric.StaticCanvas) {\n\t    fabric.warn('fabric.StaticCanvas is already defined.');\n\t    return;\n\t  }\n\t\n\t  // aliases for faster resolution\n\t  var extend = fabric.util.object.extend,\n\t      getElementOffset = fabric.util.getElementOffset,\n\t      removeFromArray = fabric.util.removeFromArray,\n\t      toFixed = fabric.util.toFixed,\n\t      transformPoint = fabric.util.transformPoint,\n\t      invertTransform = fabric.util.invertTransform,\n\t\n\t      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\t\n\t  /**\n\t   * Static canvas class\n\t   * @class fabric.StaticCanvas\n\t   * @mixes fabric.Collection\n\t   * @mixes fabric.Observable\n\t   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n\t   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n\t   * @fires before:render\n\t   * @fires after:render\n\t   * @fires canvas:cleared\n\t   * @fires object:added\n\t   * @fires object:removed\n\t   */\n\t  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t    },\n\t\n\t    /**\n\t     * Background color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    backgroundColor: '',\n\t\n\t    /**\n\t     * Background image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n\t     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    backgroundImage: null,\n\t\n\t    /**\n\t     * Overlay color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n\t     * @since 1.3.9\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    overlayColor: '',\n\t\n\t    /**\n\t     * Overlay image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n\t     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    overlayImage: null,\n\t\n\t    /**\n\t     * Indicates whether toObject/toDatalessObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Indicates whether objects' state should be saved\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    stateful: false,\n\t\n\t    /**\n\t     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n\t     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n\t     * (followed by a manual rendering after addition/deletion)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    renderOnAddRemove: true,\n\t\n\t    /**\n\t     * Function that determines clipping of entire canvas area\n\t     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n\t     * @type Function\n\t     * @default\n\t     */\n\t    clipTo: null,\n\t\n\t    /**\n\t     * Indicates whether object controls (borders/controls) are rendered above overlay image\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    controlsAboveOverlay: false,\n\t\n\t    /**\n\t     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    allowTouchScrolling: false,\n\t\n\t    /**\n\t     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    imageSmoothingEnabled: true,\n\t\n\t    /**\n\t     * The transformation (in the format of Canvas transform) which focuses the viewport\n\t     * @type Array\n\t     * @default\n\t     */\n\t    viewportTransform: fabric.iMatrix.concat(),\n\t\n\t    /**\n\t     * if set to false background image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    backgroundVpt: true,\n\t\n\t    /**\n\t     * if set to false overlya image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    overlayVpt: true,\n\t\n\t    /**\n\t     * Callback; invoked right before object is about to be scaled/rotated\n\t     */\n\t    onBeforeScaleRotate: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    /**\n\t     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n\t     */\n\t    enableRetinaScaling: true,\n\t\n\t    /**\n\t     * Describe canvas element extension over design\n\t     * properties are tl,tr,bl,br.\n\t     * if canvas is not zoomed/panned those points are the four corner of canvas\n\t     * if canvas is viewportTransformed you those points indicate the extension\n\t     * of canvas element in plain untrasformed coordinates\n\t     * The coordinates get updated with @method calcViewportBoundaries.\n\t     * @memberOf fabric.StaticCanvas.prototype\n\t     */\n\t    vptCoords: { },\n\t\n\t    /**\n\t     * Based on vptCoords and object.aCoords, skip rendering of objects that\n\t     * are not included in current viewport.\n\t     * May greatly help in applications with crowded canvas and use of zoom/pan\n\t     * If One of the corner of the bounding box of the object is on the canvas\n\t     * the objects get rendered.\n\t     * @memberOf fabric.StaticCanvas.prototype\n\t     */\n\t    skipOffscreen: false,\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initStatic: function(el, options) {\n\t      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n\t      this._objects = [];\n\t      this._createLowerCanvas(el);\n\t      this._initOptions(options);\n\t      this._setImageSmoothing();\n\t      // only initialize retina scaling once\n\t      if (!this.interactive) {\n\t        this._initRetinaScaling();\n\t      }\n\t\n\t      if (options.overlayImage) {\n\t        this.setOverlayImage(options.overlayImage, cb);\n\t      }\n\t      if (options.backgroundImage) {\n\t        this.setBackgroundImage(options.backgroundImage, cb);\n\t      }\n\t      if (options.backgroundColor) {\n\t        this.setBackgroundColor(options.backgroundColor, cb);\n\t      }\n\t      if (options.overlayColor) {\n\t        this.setOverlayColor(options.overlayColor, cb);\n\t      }\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _isRetinaScaling: function() {\n\t      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} retinaScaling if applied, otherwise 1;\n\t     */\n\t    getRetinaScaling: function() {\n\t      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initRetinaScaling: function() {\n\t      if (!this._isRetinaScaling()) {\n\t        return;\n\t      }\n\t      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t\n\t      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    },\n\t\n\t    /**\n\t     * Calculates canvas element offset relative to the document\n\t     * This method is also attached as \"resize\" event handler of window\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    calcOffset: function () {\n\t      this._offset = getElementOffset(this.lowerCanvasEl);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n\t     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n\t     * @example <caption>Normal overlayImage with left/top = 0</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage with different properties</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage loaded from cross-origin</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setOverlayImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage with different properties</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage loaded from cross-origin</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setBackgroundImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n\t     * @example <caption>Normal overlayColor - color value</caption>\n\t     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setOverlayColor: function(overlayColor, callback) {\n\t      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundColor - color value</caption>\n\t     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setBackgroundColor: function(backgroundColor, callback) {\n\t      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n\t     */\n\t    _setImageSmoothing: function() {\n\t      var ctx = this.getContext();\n\t\n\t      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n\t        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n\t      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n\t     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n\t     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n\t     */\n\t    __setBgOverlayImage: function(property, image, callback, options) {\n\t      if (typeof image === 'string') {\n\t        fabric.util.loadImage(image, function(img) {\n\t          img && (this[property] = new fabric.Image(img, options));\n\t          callback && callback(img);\n\t        }, this, options && options.crossOrigin);\n\t      }\n\t      else {\n\t        options && image.setOptions(options);\n\t        this[property] = image;\n\t        callback && callback(image);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n\t     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n\t     * @param {(Object|String|null)} color Object with pattern information, color value or null\n\t     * @param {Function} [callback] Callback is invoked when color is set\n\t     */\n\t    __setBgOverlayColor: function(property, color, callback) {\n\t      this[property] = color;\n\t      this._initGradient(color, property);\n\t      this._initPattern(color, property, callback);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCanvasElement: function(canvasEl) {\n\t      var element = fabric.util.createCanvasElement(canvasEl);\n\t      if (!element.style) {\n\t        element.style = { };\n\t      }\n\t      if (!element) {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      if (typeof element.getContext === 'undefined') {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      return element;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initOptions: function (options) {\n\t      this._setOptions(options);\n\t\n\t      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n\t      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\t\n\t      if (!this.lowerCanvasEl.style) {\n\t        return;\n\t      }\n\t\n\t      this.lowerCanvasEl.width = this.width;\n\t      this.lowerCanvasEl.height = this.height;\n\t\n\t      this.lowerCanvasEl.style.width = this.width + 'px';\n\t      this.lowerCanvasEl.style.height = this.height + 'px';\n\t\n\t      this.viewportTransform = this.viewportTransform.slice();\n\t    },\n\t\n\t    /**\n\t     * Creates a bottom canvas\n\t     * @private\n\t     * @param {HTMLElement} [canvasEl]\n\t     */\n\t    _createLowerCanvas: function (canvasEl) {\n\t      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\t\n\t      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\t\n\t      if (this.interactive) {\n\t        this._applyCanvasStyle(this.lowerCanvasEl);\n\t      }\n\t\n\t      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * Returns canvas width (in px)\n\t     * @return {Number}\n\t     */\n\t    getWidth: function () {\n\t      return this.width;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas height (in px)\n\t     * @return {Number}\n\t     */\n\t    getHeight: function () {\n\t      return this.height;\n\t    },\n\t\n\t    /**\n\t     * Sets width of this canvas instance\n\t     * @param {Number|String} value                         Value to set width to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setWidth: function (value, options) {\n\t      return this.setDimensions({ width: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets height of this canvas instance\n\t     * @param {Number|String} value                         Value to set height to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setHeight: function (value, options) {\n\t      return this.setDimensions({ height: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n\t     * @param {Object}        dimensions                    Object with width/height properties\n\t     * @param {Number|String} [dimensions.width]            Width of canvas element\n\t     * @param {Number|String} [dimensions.height]           Height of canvas element\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setDimensions: function (dimensions, options) {\n\t      var cssValue;\n\t\n\t      options = options || {};\n\t\n\t      for (var prop in dimensions) {\n\t        cssValue = dimensions[prop];\n\t\n\t        if (!options.cssOnly) {\n\t          this._setBackstoreDimension(prop, dimensions[prop]);\n\t          cssValue += 'px';\n\t        }\n\t\n\t        if (!options.backstoreOnly) {\n\t          this._setCssDimension(prop, cssValue);\n\t        }\n\t      }\n\t      this._initRetinaScaling();\n\t      this._setImageSmoothing();\n\t      this.calcOffset();\n\t\n\t      if (!options.cssOnly) {\n\t        this.renderAll();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {Number} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setBackstoreDimension: function (prop, value) {\n\t      this.lowerCanvasEl[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl[prop] = value;\n\t      }\n\t\n\t      if (this.cacheCanvasEl) {\n\t        this.cacheCanvasEl[prop] = value;\n\t      }\n\t\n\t      this[prop] = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting css width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {String} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setCssDimension: function (prop, value) {\n\t      this.lowerCanvasEl.style[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl.style[prop] = value;\n\t      }\n\t\n\t      if (this.wrapperEl) {\n\t        this.wrapperEl.style[prop] = value;\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas zoom level\n\t     * @return {Number}\n\t     */\n\t    getZoom: function () {\n\t      return this.viewportTransform[0];\n\t    },\n\t\n\t    /**\n\t     * Sets viewport transform of this canvas instance\n\t     * @param {Array} vpt the transform in the form of context.transform\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setViewportTransform: function (vpt) {\n\t      var activeGroup = this._activeGroup, object, ignoreVpt = false, skipAbsolute = true;\n\t      this.viewportTransform = vpt;\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        object = this._objects[i];\n\t        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n\t      }\n\t      if (activeGroup) {\n\t        activeGroup.setCoords(ignoreVpt, skipAbsolute);\n\t      }\n\t      this.calcViewportBoundaries();\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance, zoom centered around point\n\t     * @param {fabric.Point} point to zoom with respect to\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    zoomToPoint: function (point, value) {\n\t      // TODO: just change the scale, preserve other transformations\n\t      var before = point, vpt = this.viewportTransform.slice(0);\n\t      point = transformPoint(point, invertTransform(this.viewportTransform));\n\t      vpt[0] = value;\n\t      vpt[3] = value;\n\t      var after = transformPoint(point, vpt);\n\t      vpt[4] += before.x - after.x;\n\t      vpt[5] += before.y - after.y;\n\t      return this.setViewportTransform(vpt);\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setZoom: function (value) {\n\t      this.zoomToPoint(new fabric.Point(0, 0), value);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Pan viewport so as to place point at top left corner of canvas\n\t     * @param {fabric.Point} point to move to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    absolutePan: function (point) {\n\t      var vpt = this.viewportTransform.slice(0);\n\t      vpt[4] = -point.x;\n\t      vpt[5] = -point.y;\n\t      return this.setViewportTransform(vpt);\n\t    },\n\t\n\t    /**\n\t     * Pans viewpoint relatively\n\t     * @param {fabric.Point} point (position vector) to move by\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    relativePan: function (point) {\n\t      return this.absolutePan(new fabric.Point(\n\t        -point.x - this.viewportTransform[4],\n\t        -point.y - this.viewportTransform[5]\n\t      ));\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element corresponding to this instance\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getElement: function () {\n\t      return this.lowerCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was added\n\t     */\n\t    _onObjectAdded: function(obj) {\n\t      this.stateful && obj.setupState();\n\t      obj._set('canvas', this);\n\t      obj.setCoords();\n\t      this.fire('object:added', { target: obj });\n\t      obj.fire('added');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      this.fire('object:removed', { target: obj });\n\t      obj.fire('removed');\n\t      delete obj.canvas;\n\t    },\n\t\n\t    /**\n\t     * Clears specified context of canvas element\n\t     * @param {CanvasRenderingContext2D} ctx Context to clear\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clearContext: function(ctx) {\n\t      ctx.clearRect(0, 0, this.width, this.height);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where objects are drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getContext: function () {\n\t      return this.contextContainer;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this._objects.length = 0;\n\t      this.backgroundImage = null;\n\t      this.overlayImage = null;\n\t      this.backgroundColor = '';\n\t      this.overlayColor = '';\n\t      if (this._hasITextHandlers) {\n\t        this.off('mouse:up', this._mouseUpITextHandler);\n\t        this._iTextInstances = null;\n\t        this._hasITextHandlers = false;\n\t      }\n\t      this.clearContext(this.contextContainer);\n\t      this.fire('canvas:cleared');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Renders the canvas\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      var canvasToDrawOn = this.contextContainer;\n\t      this.renderCanvas(canvasToDrawOn, this._objects);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n\t     * helps to determinate when an object is in the current rendering viewport using\n\t     * object absolute coordinates ( aCoords )\n\t     * @return {Object} points.tl\n\t     * @chainable\n\t     */\n\t    calcViewportBoundaries: function() {\n\t      var points = { }, width = this.getWidth(), height = this.getHeight(),\n\t          iVpt = invertTransform(this.viewportTransform);\n\t      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n\t      points.br = transformPoint({ x: width, y: height }, iVpt);\n\t      points.tr = new fabric.Point(points.br.x, points.tl.y);\n\t      points.bl = new fabric.Point(points.tl.x, points.br.y);\n\t      this.vptCoords = points;\n\t      return points;\n\t    },\n\t\n\t    /**\n\t     * Renders background, objects, overlay and controls.\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {Array} objects to render\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderCanvas: function(ctx, objects) {\n\t      this.calcViewportBoundaries();\n\t      this.clearContext(ctx);\n\t      this.fire('before:render');\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, ctx);\n\t      }\n\t      this._renderBackground(ctx);\n\t\n\t      ctx.save();\n\t      //apply viewport transform once for all rendering process\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      this._renderObjects(ctx, objects);\n\t      ctx.restore();\n\t      if (!this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(ctx);\n\t      }\n\t      if (this.clipTo) {\n\t        ctx.restore();\n\t      }\n\t      this._renderOverlay(ctx);\n\t      if (this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(ctx);\n\t      }\n\t      this.fire('after:render');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Array} objects to render\n\t     */\n\t    _renderObjects: function(ctx, objects) {\n\t      for (var i = 0, length = objects.length; i < length; ++i) {\n\t        objects[i] && objects[i].render(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {string} property 'background' or 'overlay'\n\t     */\n\t    _renderBackgroundOrOverlay: function(ctx, property) {\n\t      var object = this[property + 'Color'];\n\t      if (object) {\n\t        ctx.fillStyle = object.toLive\n\t          ? object.toLive(ctx, this)\n\t          : object;\n\t\n\t        ctx.fillRect(\n\t          object.offsetX || 0,\n\t          object.offsetY || 0,\n\t          this.width,\n\t          this.height);\n\t      }\n\t      object = this[property + 'Image'];\n\t      if (object) {\n\t        if (this[property + 'Vpt']) {\n\t          ctx.save();\n\t          ctx.transform.apply(ctx, this.viewportTransform);\n\t        }\n\t        object.render(ctx);\n\t        this[property + 'Vpt'] && ctx.restore();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'background');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderOverlay: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'overlay');\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a center of canvas.\n\t     * Returned value is an object with top and left properties\n\t     * @return {Object} object with \"top\" and \"left\" number values\n\t     */\n\t    getCenter: function () {\n\t      return {\n\t        top: this.getHeight() / 2,\n\t        left: this.getWidth() / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    centerObjectH: function (object) {\n\t      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObjectV: function (object) {\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObject: function(object) {\n\t      var center = this.getCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(center.left, center.top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the viewport\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObject: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, vpCenter);\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectH: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object Vertically in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectV: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n\t    },\n\t\n\t    /**\n\t     * Calculate the point in canvas that correspond to the center of actual viewport.\n\t     * @return {fabric.Point} vpCenter, viewport center\n\t     * @chainable\n\t     */\n\t    getVpCenter: function() {\n\t      var center = this.getCenter(),\n\t          iVpt = invertTransform(this.viewportTransform);\n\t      return transformPoint({ x: center.left, y: center.top }, iVpt);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} object Object to center\n\t     * @param {fabric.Point} center Center point\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    _centerObject: function(object, center) {\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returs dataless JSON representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {String} json string\n\t     */\n\t    toDatalessJSON: function (propertiesToInclude) {\n\t      return this.toDatalessObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjectMethod: function (methodName, propertiesToInclude) {\n\t\n\t      var data = {\n\t        objects: this._toObjects(methodName, propertiesToInclude)\n\t      };\n\t\n\t      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\t\n\t      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjects: function(methodName, propertiesToInclude) {\n\t      return this.getObjects().filter(function(object) {\n\t        return !object.excludeFromExport;\n\t      }).map(function(instance) {\n\t        return this._toObject(instance, methodName, propertiesToInclude);\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      var originalValue;\n\t\n\t      if (!this.includeDefaultValues) {\n\t        originalValue = instance.includeDefaultValues;\n\t        instance.includeDefaultValues = false;\n\t      }\n\t\n\t      var object = instance[methodName](propertiesToInclude);\n\t      if (!this.includeDefaultValues) {\n\t        instance.includeDefaultValues = originalValue;\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n\t      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\t\n\t      if (this.backgroundColor) {\n\t        data.background = this.backgroundColor.toObject\n\t          ? this.backgroundColor.toObject(propertiesToInclude)\n\t          : this.backgroundColor;\n\t      }\n\t\n\t      if (this.overlayColor) {\n\t        data.overlay = this.overlayColor.toObject\n\t          ? this.overlayColor.toObject(propertiesToInclude)\n\t          : this.overlayColor;\n\t      }\n\t      if (bgImage && !bgImage.excludeFromExport) {\n\t        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n\t      }\n\t      if (overlay && !overlay.excludeFromExport) {\n\t        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n\t      }\n\t\n\t      return data;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n\t     * a zoomed canvas will then produce zoomed SVG output.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    svgViewportTransformation: true,\n\t\n\t    /**\n\t     * Returns SVG representation of canvas\n\t     * @function\n\t     * @param {Object} [options] Options object for SVG output\n\t     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n\t     * @param {Object} [options.viewBox] SVG viewbox object\n\t     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n\t     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n\t     * @param {Number} [options.viewBox.width] Width of viewbox\n\t     * @param {Number} [options.viewBox.height] Height of viewbox\n\t     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n\t     * @param {String} [options.width] desired width of svg with or without units\n\t     * @param {String} [options.height] desired height of svg with or without units\n\t     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n\t     * @return {String} SVG string\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n\t     * @example <caption>Normal SVG output</caption>\n\t     * var svg = canvas.toSVG();\n\t     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n\t     * var svg = canvas.toSVG({suppressPreamble: true});\n\t     * @example <caption>SVG output with viewBox attribute</caption>\n\t     * var svg = canvas.toSVG({\n\t     *   viewBox: {\n\t     *     x: 100,\n\t     *     y: 100,\n\t     *     width: 200,\n\t     *     height: 300\n\t     *   }\n\t     * });\n\t     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n\t     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n\t     * @example <caption>Modify SVG output with reviver function</caption>\n\t     * var svg = canvas.toSVG(null, function(svg) {\n\t     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n\t     * });\n\t     */\n\t    toSVG: function(options, reviver) {\n\t      options || (options = { });\n\t\n\t      var markup = [];\n\t\n\t      this._setSVGPreamble(markup, options);\n\t      this._setSVGHeader(markup, options);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n\t      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\t\n\t      this._setSVGObjects(markup, reviver);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'overlayColor');\n\t      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\t\n\t      markup.push('</svg>');\n\t\n\t      return markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGPreamble: function(markup, options) {\n\t      if (options.suppressPreamble) {\n\t        return;\n\t      }\n\t      markup.push(\n\t        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n\t          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n\t            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGHeader: function(markup, options) {\n\t      var width = options.width || this.width,\n\t          height = options.height || this.height,\n\t          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t      if (options.viewBox) {\n\t        viewBox = 'viewBox=\"' +\n\t                options.viewBox.x + ' ' +\n\t                options.viewBox.y + ' ' +\n\t                options.viewBox.width + ' ' +\n\t                options.viewBox.height + '\" ';\n\t      }\n\t      else {\n\t        if (this.svgViewportTransformation) {\n\t          vpt = this.viewportTransform;\n\t          viewBox = 'viewBox=\"' +\n\t                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n\t        }\n\t      }\n\t\n\t      markup.push(\n\t        '<svg ',\n\t          'xmlns=\"http://www.w3.org/2000/svg\" ',\n\t          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n\t          'version=\"1.1\" ',\n\t          'width=\"', width, '\" ',\n\t          'height=\"', height, '\" ',\n\t          viewBox,\n\t          'xml:space=\"preserve\">\\n',\n\t        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n\t        '<defs>\\n',\n\t          this.createSVGFontFacesMarkup(),\n\t          this.createSVGRefElementsMarkup(),\n\t        '</defs>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n\t     * @return {String}\n\t     */\n\t    createSVGRefElementsMarkup: function() {\n\t      var _this = this,\n\t          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n\t            var fill = _this[prop];\n\t            if (fill && fill.toLive) {\n\t              return fill.toSVG(_this, false);\n\t            }\n\t          });\n\t      return markup.join('');\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG font faces,\n\t     * font URLs for font faces must be collected by developers\n\t     * and are not extracted from the DOM by fabricjs\n\t     * @param {Array} objects Array of fabric objects\n\t     * @return {String}\n\t     */\n\t    createSVGFontFacesMarkup: function() {\n\t      var markup = '', fontList = { }, obj, fontFamily,\n\t          style, row, rowIndex, _char, charIndex,\n\t          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        obj = objects[i];\n\t        fontFamily = obj.fontFamily;\n\t        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n\t          continue;\n\t        }\n\t        fontList[fontFamily] = true;\n\t        if (!obj.styles) {\n\t          continue;\n\t        }\n\t        style = obj.styles;\n\t        for (rowIndex in style) {\n\t          row = style[rowIndex];\n\t          for (charIndex in row) {\n\t            _char = row[charIndex];\n\t            fontFamily = _char.fontFamily;\n\t            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n\t              fontList[fontFamily] = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var j in fontList) {\n\t        markup += [\n\t          '\\t\\t@font-face {\\n',\n\t          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n\t          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n\t          '\\t\\t}\\n'\n\t        ].join('');\n\t      }\n\t\n\t      if (markup) {\n\t        markup = [\n\t          '\\t<style type=\"text/css\">',\n\t          '<![CDATA[\\n',\n\t          markup,\n\t          ']]>',\n\t          '</style>\\n'\n\t        ].join('');\n\t      }\n\t\n\t      return markup;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObjects: function(markup, reviver) {\n\t      var instance;\n\t      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n\t        instance = objects[i];\n\t        if (instance.excludeFromExport) {\n\t          continue;\n\t        }\n\t        this._setSVGObject(markup, instance, reviver);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * push single object svg representation in the markup\n\t     * @private\n\t     */\n\t    _setSVGObject: function(markup, instance, reviver) {\n\t      markup.push(instance.toSVG(reviver));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayImage: function(markup, property, reviver) {\n\t      if (this[property] && this[property].toSVG) {\n\t        markup.push(this[property].toSVG(reviver));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayColor: function(markup, property) {\n\t      var filler = this[property];\n\t      if (!filler) {\n\t        return;\n\t      }\n\t      if (filler.toLive) {\n\t        var repeat = filler.repeat;\n\t        markup.push(\n\t          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n\t            ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n\t            'width=\"',\n\t              (repeat === 'repeat-y' || repeat === 'no-repeat'\n\t                ? filler.source.width\n\t                : this.width),\n\t            '\" height=\"',\n\t              (repeat === 'repeat-x' || repeat === 'no-repeat'\n\t                ? filler.source.height\n\t                : this.height),\n\t            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t      else {\n\t        markup.push(\n\t          '<rect x=\"0\" y=\"0\" ',\n\t            'width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" fill=\"', this[property], '\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the bottom of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send to back\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendToBack: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.unshift(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.unshift(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the top of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringToFront: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.push(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.push(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection down in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendBackwards: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, idx, newIdx, objs, objsMoved = 0;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx > 0 + objsMoved) {\n\t            newIdx = idx - 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t          objsMoved++;\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== 0) {\n\t          // if object is not on the bottom of stack\n\t          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewLowerIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse down the stack looking for the nearest intersecting object\n\t        for (var i = idx - 1; i >= 0; --i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx - 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection up in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringForward: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, idx, newIdx, objs, objsMoved = 0;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx < this._objects.length - 1 - objsMoved) {\n\t            newIdx = idx + 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t          objsMoved++;\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== this._objects.length - 1) {\n\t          // if object is not on top of stack (last item in an array)\n\t          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewUpperIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse up the stack looking for the nearest intersecting object\n\t        for (var i = idx + 1; i < this._objects.length; ++i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx + 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object to specified level in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Number} index Position to move to\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    moveTo: function (object, index) {\n\t      removeFromArray(this._objects, object);\n\t      this._objects.splice(index, 0, object);\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.clear();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function () {\n\t      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n\t               '{ objects: ' + this.getObjects().length + ' }>';\n\t    }\n\t  });\n\t\n\t  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n\t  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n\t  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\t\n\t  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\t\n\t    /**\n\t     * @static\n\t     * @type String\n\t     * @default\n\t     */\n\t    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\t\n\t    /**\n\t     * Provides a way to check support of some of the canvas methods\n\t     * (either those of HTMLCanvasElement itself, or rendering context)\n\t     *\n\t     * @param {String} methodName Method to check support for;\n\t     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n\t     * @return {Boolean | null} `true` if method is supported (or at least exists),\n\t     *                          `null` if canvas element or context can not be initialized\n\t     */\n\t    supports: function (methodName) {\n\t      var el = fabric.util.createCanvasElement();\n\t\n\t      if (!el || !el.getContext) {\n\t        return null;\n\t      }\n\t\n\t      var ctx = el.getContext('2d');\n\t      if (!ctx) {\n\t        return null;\n\t      }\n\t\n\t      switch (methodName) {\n\t\n\t        case 'getImageData':\n\t          return typeof ctx.getImageData !== 'undefined';\n\t\n\t        case 'setLineDash':\n\t          return typeof ctx.setLineDash !== 'undefined';\n\t\n\t        case 'toDataURL':\n\t          return typeof el.toDataURL !== 'undefined';\n\t\n\t        case 'toDataURLWithQuality':\n\t          try {\n\t            el.toDataURL('image/jpeg', 0);\n\t            return true;\n\t          }\n\t          catch (e) { }\n\t          return false;\n\t\n\t        default:\n\t          return null;\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns JSON representation of canvas\n\t   * @function\n\t   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t   * @return {String} JSON string\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n\t   * @example <caption>JSON without additional properties</caption>\n\t   * var json = canvas.toJSON();\n\t   * @example <caption>JSON with additional properties included</caption>\n\t   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n\t   * @example <caption>JSON without default values</caption>\n\t   * canvas.includeDefaultValues = false;\n\t   * var json = canvas.toJSON();\n\t   */\n\t  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\t\n\t})();\n\t\n\t\n\t/**\n\t * BaseBrush class\n\t * @class fabric.BaseBrush\n\t * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n\t */\n\tfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\t\n\t  /**\n\t   * Color of a brush\n\t   * @type String\n\t   * @default\n\t   */\n\t  color: 'rgb(0, 0, 0)',\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 1,\n\t\n\t  /**\n\t   * Shadow object representing shadow of this shape.\n\t   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n\t   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n\t   * @type fabric.Shadow\n\t   * @default\n\t   */\n\t  shadow: null,\n\t\n\t  /**\n\t   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineCap: 'round',\n\t\n\t  /**\n\t   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineJoin: 'round',\n\t\n\t  /**\n\t   * Stroke Dash Array.\n\t   * @type Array\n\t   * @default\n\t   */\n\t  strokeDashArray: null,\n\t\n\t  /**\n\t   * Sets shadow of an object\n\t   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  setShadow: function(options) {\n\t    this.shadow = new fabric.Shadow(options);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   * @private\n\t   */\n\t  _setBrushStyles: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.strokeStyle = this.color;\n\t    ctx.lineWidth = this.width;\n\t    ctx.lineCap = this.strokeLineCap;\n\t    ctx.lineJoin = this.strokeLineJoin;\n\t    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n\t      ctx.setLineDash(this.strokeDashArray);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets brush shadow styles\n\t   * @private\n\t   */\n\t  _setShadow: function() {\n\t    if (!this.shadow) {\n\t      return;\n\t    }\n\t\n\t    var ctx = this.canvas.contextTop,\n\t        zoom = this.canvas.getZoom();\n\t\n\t    ctx.shadowColor = this.shadow.color;\n\t    ctx.shadowBlur = this.shadow.blur * zoom;\n\t    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n\t    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n\t  },\n\t\n\t  /**\n\t   * Removes brush shadow styles\n\t   * @private\n\t   */\n\t  _resetShadow: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = '';\n\t    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * PencilBrush class\n\t   * @class fabric.PencilBrush\n\t   * @extends fabric.BaseBrush\n\t   */\n\t  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {fabric.Canvas} canvas\n\t     * @return {fabric.PencilBrush} Instance of a pencil brush\n\t     */\n\t    initialize: function(canvas) {\n\t      this.canvas = canvas;\n\t      this._points = [];\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse down\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseDown: function(pointer) {\n\t      this._prepareForDrawing(pointer);\n\t      // capture coordinates immediately\n\t      // this allows to draw dots (when movement never occurs)\n\t      this._captureDrawingPath(pointer);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse move\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseMove: function(pointer) {\n\t      this._captureDrawingPath(pointer);\n\t      // redraw curve\n\t      // clear top canvas\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Invoked on mouse up\n\t     */\n\t    onMouseUp: function() {\n\t      this._finalizeAndAddPath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _prepareForDrawing: function(pointer) {\n\t\n\t      var p = new fabric.Point(pointer.x, pointer.y);\n\t\n\t      this._reset();\n\t      this._addPoint(p);\n\t\n\t      this.canvas.contextTop.moveTo(p.x, p.y);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Point} point Point to be added to points array\n\t     */\n\t    _addPoint: function(point) {\n\t      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n\t        return;\n\t      }\n\t      this._points.push(point);\n\t    },\n\t\n\t    /**\n\t     * Clear points array and set contextTop canvas style.\n\t     * @private\n\t     */\n\t    _reset: function() {\n\t      this._points.length = 0;\n\t\n\t      this._setBrushStyles();\n\t      this._setShadow();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _captureDrawingPath: function(pointer) {\n\t      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n\t      this._addPoint(pointerPoint);\n\t    },\n\t\n\t    /**\n\t     * Draw a smooth path on the topCanvas using quadraticCurveTo\n\t     * @private\n\t     */\n\t    _render: function() {\n\t      var ctx  = this.canvas.contextTop, i, len,\n\t          v = this.canvas.viewportTransform,\n\t          p1 = this._points[0],\n\t          p2 = this._points[1];\n\t\n\t      ctx.save();\n\t      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t      ctx.beginPath();\n\t\n\t      //if we only have 2 points in the path and they are the same\n\t      //it means that the user only clicked the canvas without moving the mouse\n\t      //then we should be drawing a dot. A path isn't drawn between two identical dots\n\t      //that's why we set them apart a bit\n\t      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n\t        var width = this.width / 1000;\n\t        p1 = new fabric.Point(p1.x, p1.y);\n\t        p2 = new fabric.Point(p2.x, p2.y);\n\t        p1.x -= width;\n\t        p2.x += width;\n\t      }\n\t      ctx.moveTo(p1.x, p1.y);\n\t\n\t      for (i = 1, len = this._points.length; i < len; i++) {\n\t        // we pick the point between pi + 1 & pi + 2 as the\n\t        // end point and p1 as our control point.\n\t        var midPoint = p1.midPointFrom(p2);\n\t        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\t\n\t        p1 = this._points[i];\n\t        p2 = this._points[i + 1];\n\t      }\n\t      // Draw last line as a straight line while\n\t      // we wait for the next point to be able to calculate\n\t      // the bezier control point\n\t      ctx.lineTo(p1.x, p1.y);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Converts points to SVG path\n\t     * @param {Array} points Array of points\n\t     * @return {String} SVG path\n\t     */\n\t    convertPointsToSVGPath: function(points) {\n\t      var path = [], i, width = this.width / 1000,\n\t          p1 = new fabric.Point(points[0].x, points[0].y),\n\t          p2 = new fabric.Point(points[1].x, points[1].y),\n\t          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\t\n\t      if (manyPoints) {\n\t        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n\t        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n\t      }\n\t      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n\t      for (i = 1; i < len; i++) {\n\t        if (!p1.eq(p2)) {\n\t          var midPoint = p1.midPointFrom(p2);\n\t          // p1 is our bezier control point\n\t          // midpoint is our endpoint\n\t          // start point is p(i-1) value.\n\t          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n\t        }\n\t        p1 = points[i];\n\t        if ((i + 1) < points.length) {\n\t          p2 = points[i + 1];\n\t        }\n\t      }\n\t      if (manyPoints) {\n\t        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n\t        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n\t      }\n\t      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * Creates fabric.Path object to add on canvas\n\t     * @param {String} pathData Path data\n\t     * @return {fabric.Path} Path to add on canvas\n\t     */\n\t    createPath: function(pathData) {\n\t      var path = new fabric.Path(pathData, {\n\t        fill: null,\n\t        stroke: this.color,\n\t        strokeWidth: this.width,\n\t        strokeLineCap: this.strokeLineCap,\n\t        strokeLineJoin: this.strokeLineJoin,\n\t        strokeDashArray: this.strokeDashArray,\n\t        originX: 'center',\n\t        originY: 'center'\n\t      });\n\t      var position = new fabric.Point(path.left, path.top);\n\t      path.originX = fabric.Object.prototype.originX;\n\t      path.originY = fabric.Object.prototype.originY;\n\t      position = path.translateToGivenOrigin(\n\t        position, 'center', 'center', path.originX, path.originY);\n\t      path.top = position.y;\n\t      path.left = position.x;\n\t      if (this.shadow) {\n\t        this.shadow.affectStroke = true;\n\t        path.setShadow(this.shadow);\n\t      }\n\t\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * On mouseup after drawing the path on contextTop canvas\n\t     * we use the points captured to create an new fabric path object\n\t     * and add it to the fabric canvas.\n\t     */\n\t    _finalizeAndAddPath: function() {\n\t      var ctx = this.canvas.contextTop;\n\t      ctx.closePath();\n\t\n\t      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\t      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n\t        // do not create 0 width/height paths, as they are\n\t        // rendered inconsistently across browsers\n\t        // Firefox 4, for example, renders a dot,\n\t        // whereas Chrome 10 renders nothing\n\t        this.canvas.renderAll();\n\t        return;\n\t      }\n\t\n\t      var path = this.createPath(pathData);\n\t\n\t      this.canvas.add(path);\n\t      path.setCoords();\n\t\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._resetShadow();\n\t      this.canvas.renderAll();\n\t\n\t      // fire event 'path' created\n\t      this.canvas.fire('path:created', { path: path });\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t/**\n\t * CircleBrush class\n\t * @class fabric.CircleBrush\n\t */\n\tfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 10,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.CircleBrush} Instance of a circle brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.points = [];\n\t  },\n\t\n\t  /**\n\t   * Invoked inside on mouse down and mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  drawDot: function(pointer) {\n\t    var point = this.addPoint(pointer),\n\t        ctx = this.canvas.contextTop,\n\t        v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    ctx.fillStyle = point.fill;\n\t    ctx.beginPath();\n\t    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n\t    ctx.closePath();\n\t    ctx.fill();\n\t\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.points.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var circles = [];\n\t\n\t    for (var i = 0, len = this.points.length; i < len; i++) {\n\t      var point = this.points[i],\n\t          circle = new fabric.Circle({\n\t            radius: point.radius,\n\t            left: point.x,\n\t            top: point.y,\n\t            originX: 'center',\n\t            originY: 'center',\n\t            fill: point.fill\n\t          });\n\t\n\t      this.shadow && circle.setShadow(this.shadow);\n\t\n\t      circles.push(circle);\n\t    }\n\t    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   * @return {fabric.Point} Just added pointer point\n\t   */\n\t  addPoint: function(pointer) {\n\t    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\t\n\t        circleRadius = fabric.util.getRandomInt(\n\t                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\t\n\t        circleColor = new fabric.Color(this.color)\n\t                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n\t                        .toRgba();\n\t\n\t    pointerPoint.radius = circleRadius;\n\t    pointerPoint.fill = circleColor;\n\t\n\t    this.points.push(pointerPoint);\n\t\n\t    return pointerPoint;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * SprayBrush class\n\t * @class fabric.SprayBrush\n\t */\n\tfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a spray\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width:              10,\n\t\n\t  /**\n\t   * Density of a spray (number of dots per chunk)\n\t   * @type Number\n\t   * @default\n\t   */\n\t  density:            20,\n\t\n\t  /**\n\t   * Width of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidth:           1,\n\t\n\t  /**\n\t   * Width variance of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidthVariance:   1,\n\t\n\t  /**\n\t   * Whether opacity of a dot should be random\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  randomOpacity:        false,\n\t\n\t  /**\n\t   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  optimizeOverlapping:  true,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.SprayBrush} Instance of a spray brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.sprayChunks = [];\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.sprayChunks.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var rects = [];\n\t\n\t    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n\t      var sprayChunk = this.sprayChunks[i];\n\t\n\t      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\t\n\t        var rect = new fabric.Rect({\n\t          width: sprayChunk[j].width,\n\t          height: sprayChunk[j].width,\n\t          left: sprayChunk[j].x + 1,\n\t          top: sprayChunk[j].y + 1,\n\t          originX: 'center',\n\t          originY: 'center',\n\t          fill: this.color\n\t        });\n\t\n\t        this.shadow && rect.setShadow(this.shadow);\n\t        rects.push(rect);\n\t      }\n\t    }\n\t\n\t    if (this.optimizeOverlapping) {\n\t      rects = this._getOptimizedRects(rects);\n\t    }\n\t\n\t    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} rects\n\t   */\n\t  _getOptimizedRects: function(rects) {\n\t\n\t    // avoid creating duplicate rects at the same coordinates\n\t    var uniqueRects = { }, key;\n\t\n\t    for (var i = 0, len = rects.length; i < len; i++) {\n\t      key = rects[i].left + '' + rects[i].top;\n\t      if (!uniqueRects[key]) {\n\t        uniqueRects[key] = rects[i];\n\t      }\n\t    }\n\t    var uniqueRectsArray = [];\n\t    for (key in uniqueRects) {\n\t      uniqueRectsArray.push(uniqueRects[key]);\n\t    }\n\t\n\t    return uniqueRectsArray;\n\t  },\n\t\n\t  /**\n\t   * Renders brush\n\t   */\n\t  render: function() {\n\t    var ctx = this.canvas.contextTop;\n\t    ctx.fillStyle = this.color;\n\t\n\t    var v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n\t      var point = this.sprayChunkPoints[i];\n\t      if (typeof point.opacity !== 'undefined') {\n\t        ctx.globalAlpha = point.opacity;\n\t      }\n\t      ctx.fillRect(point.x, point.y, point.width, point.width);\n\t    }\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   */\n\t  addSprayChunk: function(pointer) {\n\t    this.sprayChunkPoints = [];\n\t\n\t    var x, y, width, radius = this.width / 2;\n\t\n\t    for (var i = 0; i < this.density; i++) {\n\t\n\t      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n\t      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\t\n\t      if (this.dotWidthVariance) {\n\t        width = fabric.util.getRandomInt(\n\t          // bottom clamp width to 1\n\t          Math.max(1, this.dotWidth - this.dotWidthVariance),\n\t          this.dotWidth + this.dotWidthVariance);\n\t      }\n\t      else {\n\t        width = this.dotWidth;\n\t      }\n\t\n\t      var point = new fabric.Point(x, y);\n\t      point.width = width;\n\t\n\t      if (this.randomOpacity) {\n\t        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n\t      }\n\t\n\t      this.sprayChunkPoints.push(point);\n\t    }\n\t\n\t    this.sprayChunks.push(this.sprayChunkPoints);\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * PatternBrush class\n\t * @class fabric.PatternBrush\n\t * @extends fabric.BaseBrush\n\t */\n\tfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\t\n\t  getPatternSrc: function() {\n\t\n\t    var dotWidth = 20,\n\t        dotDistance = 5,\n\t        patternCanvas = fabric.document.createElement('canvas'),\n\t        patternCtx = patternCanvas.getContext('2d');\n\t\n\t    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\t\n\t    patternCtx.fillStyle = this.color;\n\t    patternCtx.beginPath();\n\t    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n\t    patternCtx.closePath();\n\t    patternCtx.fill();\n\t\n\t    return patternCanvas;\n\t  },\n\t\n\t  getPatternSrcFunction: function() {\n\t    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n\t  },\n\t\n\t  /**\n\t   * Creates \"pattern\" instance property\n\t   */\n\t  getPattern: function() {\n\t    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   */\n\t  _setBrushStyles: function() {\n\t    this.callSuper('_setBrushStyles');\n\t    this.canvas.contextTop.strokeStyle = this.getPattern();\n\t  },\n\t\n\t  /**\n\t   * Creates path\n\t   */\n\t  createPath: function(pathData) {\n\t    var path = this.callSuper('createPath', pathData),\n\t        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\t\n\t    path.stroke = new fabric.Pattern({\n\t      source: this.source || this.getPatternSrcFunction(),\n\t      offsetX: -topLeft.x,\n\t      offsetY: -topLeft.y\n\t    });\n\t    return path;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  var getPointer = fabric.util.getPointer,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      radiansToDegrees = fabric.util.radiansToDegrees,\n\t      atan2 = Math.atan2,\n\t      abs = Math.abs,\n\t      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t\n\t      STROKE_OFFSET = 0.5;\n\t\n\t  /**\n\t   * Canvas class\n\t   * @class fabric.Canvas\n\t   * @extends fabric.StaticCanvas\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n\t   * @see {@link fabric.Canvas#initialize} for constructor definition\n\t   *\n\t   * @fires object:added\n\t   * @fires object:modified\n\t   * @fires object:rotating\n\t   * @fires object:scaling\n\t   * @fires object:moving\n\t   * @fires object:selected\n\t   *\n\t   * @fires before:selection:cleared\n\t   * @fires selection:cleared\n\t   * @fires selection:created\n\t   *\n\t   * @fires path:created\n\t   * @fires mouse:down\n\t   * @fires mouse:move\n\t   * @fires mouse:up\n\t   * @fires mouse:over\n\t   * @fires mouse:out\n\t   *\n\t   */\n\t  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t      this._initInteractive();\n\t      this._createCacheCanvas();\n\t    },\n\t\n\t    /**\n\t     * When true, objects can be transformed by one side (unproportionally)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    uniScaleTransform:      false,\n\t\n\t    /**\n\t     * Indicates which key enable unproportional scaling\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    uniScaleKey:           'shiftKey',\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of scale transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:        false,\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of rotate transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:       false,\n\t\n\t    /**\n\t     * Indicates which key enable centered Transfrom\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    centeredKey:           'altKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternate action on corner\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    altActionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates that canvas is interactive. This property should not be changed.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    interactive:            true,\n\t\n\t    /**\n\t     * Indicates whether group selection should be enabled\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selection:              true,\n\t\n\t    /**\n\t     * Indicates which key enable multiple click selection\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternative selection\n\t     * in case of target overlapping with active object\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.5\n\t     * @type null|String\n\t     * @default\n\t     */\n\t    altSelectionKey:           null,\n\t\n\t    /**\n\t     * Color of selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\t\n\t    /**\n\t     * Default dash array pattern\n\t     * If not empty the selection border is dashed\n\t     * @type Array\n\t     */\n\t    selectionDashArray:     [],\n\t\n\t    /**\n\t     * Color of the border of selection (usually slightly darker than color of selection itself)\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\t\n\t    /**\n\t     * Width of a line used in object/group selection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionLineWidth:     1,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:            'move',\n\t\n\t    /**\n\t     * Default cursor value used when moving an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:             'move',\n\t\n\t    /**\n\t     * Default cursor value used for the entire canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    defaultCursor:          'default',\n\t\n\t    /**\n\t     * Cursor value used during free drawing\n\t     * @type String\n\t     * @default\n\t     */\n\t    freeDrawingCursor:      'crosshair',\n\t\n\t    /**\n\t     * Cursor value used for rotation point\n\t     * @type String\n\t     * @default\n\t     */\n\t    rotationCursor:         'crosshair',\n\t\n\t    /**\n\t     * Default element class that's given to wrapper (div) element of canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    containerClass:         'canvas-container',\n\t\n\t    /**\n\t     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:     false,\n\t\n\t    /**\n\t     * Number of pixels around target pixel to tolerate (consider active) during object detection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    targetFindTolerance:    0,\n\t\n\t    /**\n\t     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    skipTargetFind:         false,\n\t\n\t    /**\n\t     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n\t     * After mousedown, mousemove creates a shape,\n\t     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isDrawingMode:          false,\n\t\n\t    /**\n\t     * Indicates whether objects should remain in current stack position when selected.\n\t     * When false objects are brought to top and rendered as part of the selection group\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    preserveObjectStacking: false,\n\t\n\t    /**\n\t     * Indicates the angle that an object will lock to while rotating.\n\t     * @type Number\n\t     * @since 1.6.7\n\t     * @default\n\t     */\n\t    snapAngle: 0,\n\t\n\t    /**\n\t     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n\t     * When `null`, the snapThreshold will default to the snapAngle.\n\t     * @type null|Number\n\t     * @since 1.6.7\n\t     * @default\n\t     */\n\t    snapThreshold: null,\n\t\n\t    /**\n\t     * Indicates if the right click on canvas can output the context menu or not\n\t     * @type Boolean\n\t     * @since 1.6.5\n\t     * @default\n\t     */\n\t    stopContextMenu: false,\n\t\n\t    /**\n\t     * Indicates if the canvas can fire right click events\n\t     * @type Boolean\n\t     * @since 1.6.5\n\t     * @default\n\t     */\n\t    fireRightClick: false,\n\t\n\t    /**\n\t     * Indicates if the canvas can fire middle click events\n\t     * @type Boolean\n\t     * @since 1.7.8\n\t     * @default\n\t     */\n\t    fireMiddleClick: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initInteractive: function() {\n\t      this._currentTransform = null;\n\t      this._groupSelector = null;\n\t      this._initWrapperElement();\n\t      this._createUpperCanvas();\n\t      this._initEventListeners();\n\t\n\t      this._initRetinaScaling();\n\t\n\t      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\t\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Divides objects in two groups, one to render immediately\n\t     * and one to render as activeGroup.\n\t     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n\t     */\n\t    _chooseObjectsToRender: function() {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          object, objsToRender = [], activeGroupObjects = [];\n\t\n\t      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n\t        for (var i = 0, length = this._objects.length; i < length; i++) {\n\t          object = this._objects[i];\n\t          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n\t            objsToRender.push(object);\n\t          }\n\t          else {\n\t            activeGroupObjects.push(object);\n\t          }\n\t        }\n\t        if (activeGroup) {\n\t          activeGroup._set('_objects', activeGroupObjects);\n\t          objsToRender.push(activeGroup);\n\t        }\n\t        activeObject && objsToRender.push(activeObject);\n\t      }\n\t      else {\n\t        objsToRender = this._objects;\n\t      }\n\t      return objsToRender;\n\t    },\n\t\n\t    /**\n\t     * Renders both the top canvas and the secondary container canvas.\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n\t        this.clearContext(this.contextTop);\n\t        this.contextTopDirty = false;\n\t      }\n\t      var canvasToDrawOn = this.contextContainer;\n\t      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Method to render only the top canvas.\n\t     * Also used to render the group selection box.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    renderTop: function () {\n\t      var ctx = this.contextTop;\n\t      this.clearContext(ctx);\n\t\n\t      // we render the top context - last object\n\t      if (this.selection && this._groupSelector) {\n\t        this._drawSelection(ctx);\n\t      }\n\t\n\t      this.fire('after:render');\n\t      this.contextTopDirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Resets the current transform to its original values and chooses the type of resizing based on the event\n\t     * @private\n\t     */\n\t    _resetCurrentTransform: function() {\n\t      var t = this._currentTransform;\n\t\n\t      t.target.set({\n\t        scaleX: t.original.scaleX,\n\t        scaleY: t.original.scaleY,\n\t        skewX: t.original.skewX,\n\t        skewY: t.original.skewY,\n\t        left: t.original.left,\n\t        top: t.original.top\n\t      });\n\t\n\t      if (this._shouldCenterTransform(t.target)) {\n\t        if (t.action === 'rotate') {\n\t          this._setOriginToCenter(t.target);\n\t        }\n\t        else {\n\t          if (t.originX !== 'center') {\n\t            if (t.originX === 'right') {\n\t              t.mouseXSign = -1;\n\t            }\n\t            else {\n\t              t.mouseXSign = 1;\n\t            }\n\t          }\n\t          if (t.originY !== 'center') {\n\t            if (t.originY === 'bottom') {\n\t              t.mouseYSign = -1;\n\t            }\n\t            else {\n\t              t.mouseYSign = 1;\n\t            }\n\t          }\n\t\n\t          t.originX = 'center';\n\t          t.originY = 'center';\n\t        }\n\t      }\n\t      else {\n\t        t.originX = t.original.originX;\n\t        t.originY = t.original.originY;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Checks if point is contained within an area of given object\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target Object to test against\n\t     * @param {Object} [point] x,y object of point coordinates we want to check.\n\t     * @return {Boolean} true if point is contained within an area of given object\n\t     */\n\t    containsPoint: function (e, target, point) {\n\t      var ignoreZoom = true,\n\t          pointer = point || this.getPointer(e, ignoreZoom),\n\t          xy;\n\t\n\t      if (target.group && target.group === this.getActiveGroup()) {\n\t        xy = this._normalizePointer(target.group, pointer);\n\t      }\n\t      else {\n\t        xy = { x: pointer.x, y: pointer.y };\n\t      }\n\t      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n\t      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\t      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _normalizePointer: function (object, pointer) {\n\t      var m = object.calcTransformMatrix(),\n\t          invertedM = fabric.util.invertTransform(m),\n\t          vptPointer = this.restorePointerVpt(pointer);\n\t      return fabric.util.transformPoint(vptPointer, invertedM);\n\t    },\n\t\n\t    /**\n\t     * Returns true if object is transparent at a certain location\n\t     * @param {fabric.Object} target Object to check\n\t     * @param {Number} x Left coordinate\n\t     * @param {Number} y Top coordinate\n\t     * @return {Boolean}\n\t     */\n\t    isTargetTransparent: function (target, x, y) {\n\t      var hasBorders = target.hasBorders,\n\t          transparentCorners = target.transparentCorners,\n\t          ctx = this.contextCache,\n\t          originalColor = target.selectionBackgroundColor;\n\t\n\t      target.hasBorders = target.transparentCorners = false;\n\t      target.selectionBackgroundColor = '';\n\t\n\t      ctx.save();\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      target.render(ctx);\n\t      ctx.restore();\n\t\n\t      target.active && target._renderControls(ctx);\n\t\n\t      target.hasBorders = hasBorders;\n\t      target.transparentCorners = transparentCorners;\n\t      target.selectionBackgroundColor = originalColor;\n\t\n\t      var isTransparent = fabric.util.isTransparent(\n\t        ctx, x, y, this.targetFindTolerance);\n\t\n\t      this.clearContext(ctx);\n\t\n\t      return isTransparent;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldClearSelection: function (e, target) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject();\n\t\n\t      return (\n\t        !target\n\t        ||\n\t        (target &&\n\t          activeGroup &&\n\t          !activeGroup.contains(target) &&\n\t          activeGroup !== target &&\n\t          !e[this.selectionKey])\n\t        ||\n\t        (target && !target.evented)\n\t        ||\n\t        (target &&\n\t          !target.selectable &&\n\t          activeObject &&\n\t          activeObject !== target)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldCenterTransform: function (target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var t = this._currentTransform,\n\t          centerTransform;\n\t\n\t      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n\t        centerTransform = this.centeredScaling || target.centeredScaling;\n\t      }\n\t      else if (t.action === 'rotate') {\n\t        centerTransform = this.centeredRotation || target.centeredRotation;\n\t      }\n\t\n\t      return centerTransform ? !t.altKey : t.altKey;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getOriginFromCorner: function(target, corner) {\n\t      var origin = {\n\t        x: target.originX,\n\t        y: target.originY\n\t      };\n\t\n\t      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n\t        origin.x = 'right';\n\t      }\n\t      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n\t        origin.x = 'left';\n\t      }\n\t\n\t      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n\t        origin.y = 'bottom';\n\t      }\n\t      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n\t        origin.y = 'top';\n\t      }\n\t\n\t      return origin;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getActionFromCorner: function(target, corner, e) {\n\t      if (!corner) {\n\t        return 'drag';\n\t      }\n\t\n\t      switch (corner) {\n\t        case 'mtr':\n\t          return 'rotate';\n\t        case 'ml':\n\t        case 'mr':\n\t          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n\t        case 'mt':\n\t        case 'mb':\n\t          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n\t        default:\n\t          return 'scale';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _setupCurrentTransform: function (e, target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var pointer = this.getPointer(e),\n\t          corner = target._findTargetCorner(this.getPointer(e, true)),\n\t          action = this._getActionFromCorner(target, corner, e),\n\t          origin = this._getOriginFromCorner(target, corner);\n\t\n\t      this._currentTransform = {\n\t        target: target,\n\t        action: action,\n\t        corner: corner,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        offsetX: pointer.x - target.left,\n\t        offsetY: pointer.y - target.top,\n\t        originX: origin.x,\n\t        originY: origin.y,\n\t        ex: pointer.x,\n\t        ey: pointer.y,\n\t        lastX: pointer.x,\n\t        lastY: pointer.y,\n\t        left: target.left,\n\t        top: target.top,\n\t        theta: degreesToRadians(target.angle),\n\t        width: target.width * target.scaleX,\n\t        mouseXSign: 1,\n\t        mouseYSign: 1,\n\t        shiftKey: e.shiftKey,\n\t        altKey: e[this.centeredKey]\n\t      };\n\t\n\t      this._currentTransform.original = {\n\t        left: target.left,\n\t        top: target.top,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        originX: origin.x,\n\t        originY: origin.y\n\t      };\n\t\n\t      this._resetCurrentTransform();\n\t    },\n\t\n\t    /**\n\t     * Translates object by \"setting\" its left/top\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the translation occurred\n\t     */\n\t    _translateObject: function (x, y) {\n\t      var transform = this._currentTransform,\n\t          target = transform.target,\n\t          newLeft = x - transform.offsetX,\n\t          newTop = y - transform.offsetY,\n\t          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n\t          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\t\n\t      moveX && target.set('left', newLeft);\n\t      moveY && target.set('top', newTop);\n\t      return moveX || moveY;\n\t    },\n\t\n\t    /**\n\t     * Check if we are increasing a positive skew or lower it,\n\t     * checking mouse direction and pressed corner.\n\t     * @private\n\t     */\n\t    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n\t      var property = 'originX', origins = { 0: 'center' },\n\t          skew = t.target.skewX, originA = 'left', originB = 'right',\n\t          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n\t          flipSign = 1;\n\t\n\t      mouseMove = mouseMove > 0 ? 1 : -1;\n\t      if (by === 'y') {\n\t        skew = t.target.skewY;\n\t        originA = 'top';\n\t        originB = 'bottom';\n\t        property = 'originY';\n\t      }\n\t      origins[-1] = originA;\n\t      origins[1] = originB;\n\t\n\t      t.target.flipX && (flipSign *= -1);\n\t      t.target.flipY && (flipSign *= -1);\n\t\n\t      if (skew === 0) {\n\t        t.skewSign = -corner * mouseMove * flipSign;\n\t        t[property] = origins[-mouseMove];\n\t      }\n\t      else {\n\t        skew = skew > 0 ? 1 : -1;\n\t        t.skewSign = skew;\n\t        t[property] = origins[skew * corner * flipSign];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Skew object by mouse events\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y'\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _skewObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target, skewed = false,\n\t          lockSkewingX = target.get('lockSkewingX'),\n\t          lockSkewingY = target.get('lockSkewingY');\n\t\n\t      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var center = target.getCenterPoint(),\n\t          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n\t          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n\t          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\t\n\t      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n\t      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n\t      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n\t      // Actually skew the object\n\t      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n\t      t.lastX = x;\n\t      t.lastY = y;\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Set object skew\n\t     * @private\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _setObjectSkew: function(localMouse, transform, by, _dim) {\n\t      var target = transform.target, newValue, skewed = false,\n\t          skewSign = transform.skewSign, newDim, dimNoSkew,\n\t          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\t\n\t      if (by === 'x') {\n\t        otherBy = 'y';\n\t        _otherBy = 'Y';\n\t        _by = 'X';\n\t        skewX = 0;\n\t        skewY = target.skewY;\n\t      }\n\t      else {\n\t        otherBy = 'x';\n\t        _otherBy = 'X';\n\t        _by = 'Y';\n\t        skewX = target.skewX;\n\t        skewY = 0;\n\t      }\n\t\n\t      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n\t      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n\t      if (newDimMouse <= 2) {\n\t        newValue = 0;\n\t      }\n\t      else {\n\t        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n\t                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n\t        newValue = fabric.util.radiansToDegrees(newValue);\n\t      }\n\t      skewed = target['skew' + _by] !== newValue;\n\t      target.set('skew' + _by, newValue);\n\t      if (target['skew' + _otherBy] !== 0) {\n\t        newDim = target._getTransformedDimensions();\n\t        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n\t        target.set('scale' + _otherBy, newValue);\n\t      }\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Scales object by invoking its scaleX/scaleY methods\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n\t     *                    When not provided, an object is scaled by both dimensions equally\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target,\n\t          lockScalingX = target.get('lockScalingX'),\n\t          lockScalingY = target.get('lockScalingY'),\n\t          lockScalingFlip = target.get('lockScalingFlip');\n\t\n\t      if (lockScalingX && lockScalingY) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n\t          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n\t          dim = target._getTransformedDimensions(), scaled = false;\n\t\n\t      this._setLocalMouse(localMouse, t);\n\t\n\t      // Actually scale the object\n\t      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\t\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n\t          changeX, changeY, scaleX, scaleY;\n\t\n\t      scaleX = localMouse.x * target.scaleX / _dim.x;\n\t      scaleY = localMouse.y * target.scaleY / _dim.y;\n\t      changeX = target.scaleX !== scaleX;\n\t      changeY = target.scaleY !== scaleY;\n\t\n\t      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n\t        forbidScalingX = true;\n\t      }\n\t\n\t      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n\t        forbidScalingY = true;\n\t      }\n\t\n\t      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n\t        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n\t      }\n\t      else if (!by) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      else if (by === 'x' && !target.get('lockUniScaling')) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t      }\n\t      else if (by === 'y' && !target.get('lockUniScaling')) {\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      transform.newScaleX = scaleX;\n\t      transform.newScaleY = scaleY;\n\t      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\t\n\t      var dist = localMouse.y + localMouse.x,\n\t          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n\t                     _dim.x * transform.original.scaleX / target.scaleX,\n\t          scaled, signX = localMouse.x / Math.abs(localMouse.x),\n\t          signY = localMouse.y / Math.abs(localMouse.y);\n\t\n\t      // We use transform.scaleX/Y instead of target.scaleX/Y\n\t      // because the object may have a min scale and we'll loose the proportions\n\t      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n\t      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n\t      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n\t      target.set('scaleX', transform.newScaleX);\n\t      target.set('scaleY', transform.newScaleY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _flipObject: function(transform, by) {\n\t      if (transform.newScaleX < 0 && by !== 'y') {\n\t        if (transform.originX === 'left') {\n\t          transform.originX = 'right';\n\t        }\n\t        else if (transform.originX === 'right') {\n\t          transform.originX = 'left';\n\t        }\n\t      }\n\t\n\t      if (transform.newScaleY < 0 && by !== 'x') {\n\t        if (transform.originY === 'top') {\n\t          transform.originY = 'bottom';\n\t        }\n\t        else if (transform.originY === 'bottom') {\n\t          transform.originY = 'top';\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setLocalMouse: function(localMouse, t) {\n\t      var target = t.target, zoom = this.getZoom(),\n\t          padding = target.padding / zoom;\n\t\n\t      if (t.originX === 'right') {\n\t        localMouse.x *= -1;\n\t      }\n\t      else if (t.originX === 'center') {\n\t        localMouse.x *= t.mouseXSign * 2;\n\t        if (localMouse.x < 0) {\n\t          t.mouseXSign = -t.mouseXSign;\n\t        }\n\t      }\n\t\n\t      if (t.originY === 'bottom') {\n\t        localMouse.y *= -1;\n\t      }\n\t      else if (t.originY === 'center') {\n\t        localMouse.y *= t.mouseYSign * 2;\n\t        if (localMouse.y < 0) {\n\t          t.mouseYSign = -t.mouseYSign;\n\t        }\n\t      }\n\t\n\t      // adjust the mouse coordinates when dealing with padding\n\t      if (abs(localMouse.x) > padding) {\n\t        if (localMouse.x < 0) {\n\t          localMouse.x += padding;\n\t        }\n\t        else {\n\t          localMouse.x -= padding;\n\t        }\n\t      }\n\t      else { // mouse is within the padding, set to 0\n\t        localMouse.x = 0;\n\t      }\n\t\n\t      if (abs(localMouse.y) > padding) {\n\t        if (localMouse.y < 0) {\n\t          localMouse.y += padding;\n\t        }\n\t        else {\n\t          localMouse.y -= padding;\n\t        }\n\t      }\n\t      else {\n\t        localMouse.y = 0;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Rotates object by invoking its rotate method\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the rotation occurred\n\t     */\n\t    _rotateObject: function (x, y) {\n\t\n\t      var t = this._currentTransform;\n\t\n\t      if (t.target.get('lockRotation')) {\n\t        return false;\n\t      }\n\t\n\t      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n\t          curAngle = atan2(y - t.top, x - t.left),\n\t          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n\t          hasRoated = true;\n\t\n\t      if (t.target.snapAngle > 0) {\n\t        var snapAngle  = t.target.snapAngle,\n\t            snapThreshold  = t.target.snapThreshold || snapAngle,\n\t            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n\t            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\t\n\t        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n\t          angle = leftAngleLocked;\n\t        }\n\t        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n\t          angle = rightAngleLocked;\n\t        }\n\t      }\n\t\n\t      // normalize angle to positive value\n\t      if (angle < 0) {\n\t        angle = 360 + angle;\n\t      }\n\t      angle %= 360;\n\t\n\t      if (t.target.angle === angle) {\n\t        hasRoated = false;\n\t      }\n\t      else {\n\t        t.target.angle = angle;\n\t      }\n\t\n\t      return hasRoated;\n\t    },\n\t\n\t    /**\n\t     * Set the cursor type of the canvas element\n\t     * @param {String} value Cursor type of the canvas element.\n\t     * @see http://www.w3.org/TR/css3-ui/#cursor\n\t     */\n\t    setCursor: function (value) {\n\t      this.upperCanvasEl.style.cursor = value;\n\t    },\n\t\n\t    /**\n\t     * @param {fabric.Object} target to reset transform\n\t     * @private\n\t     */\n\t    _resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n\t     */\n\t    _drawSelection: function (ctx) {\n\t      var groupSelector = this._groupSelector,\n\t          left = groupSelector.left,\n\t          top = groupSelector.top,\n\t          aleft = abs(left),\n\t          atop = abs(top);\n\t\n\t      if (this.selectionColor) {\n\t        ctx.fillStyle = this.selectionColor;\n\t\n\t        ctx.fillRect(\n\t          groupSelector.ex - ((left > 0) ? 0 : -left),\n\t          groupSelector.ey - ((top > 0) ? 0 : -top),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t\n\t      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n\t        return;\n\t      }\n\t      ctx.lineWidth = this.selectionLineWidth;\n\t      ctx.strokeStyle = this.selectionBorderColor;\n\t\n\t      // selection border\n\t      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\t\n\t        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\t\n\t        ctx.beginPath();\n\t\n\t        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\t\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t      else {\n\t        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n\t        ctx.strokeRect(\n\t          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Method that determines what object we are clicking on\n\t     * the skipGroup parameter is for internal use, is needed for shift+click action\n\t     * @param {Event} e mouse event\n\t     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n\t     */\n\t    findTarget: function (e, skipGroup) {\n\t      if (this.skipTargetFind) {\n\t        return;\n\t      }\n\t\n\t      var ignoreZoom = true,\n\t          pointer = this.getPointer(e, ignoreZoom),\n\t          activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          activeTarget, activeTargetSubs;\n\t      // first check current group (if one exists)\n\t      // active group does not check sub targets like normal groups.\n\t      // if active group just exits.\n\t      this.targets = [];\n\t      if (activeGroup && !skipGroup && activeGroup === this._searchPossibleTargets([activeGroup], pointer)) {\n\t        this._fireOverOutEvents(activeGroup, e);\n\t        return activeGroup;\n\t      }\n\t      // if we hit the corner of an activeObject, let's return that.\n\t      if (activeObject && activeObject._findTargetCorner(pointer)) {\n\t        this._fireOverOutEvents(activeObject, e);\n\t        return activeObject;\n\t      }\n\t      if (activeObject && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n\t        if (!this.preserveObjectStacking) {\n\t          this._fireOverOutEvents(activeObject, e);\n\t          return activeObject;\n\t        }\n\t        else {\n\t          activeTarget = activeObject;\n\t          activeTargetSubs = this.targets;\n\t          this.targets = [];\n\t        }\n\t      }\n\t\n\t      var target = this._searchPossibleTargets(this._objects, pointer);\n\t      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n\t        target = activeTarget;\n\t        this.targets = activeTargetSubs;\n\t      }\n\t      this._fireOverOutEvents(target, e);\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fireOverOutEvents: function(target, e) {\n\t      var overOpt, outOpt, hoveredTarget = this._hoveredTarget;\n\t      if (hoveredTarget !== target) {\n\t        overOpt = { e: e, target: target, previousTarget: this._hoveredTarget };\n\t        outOpt = { e: e, target: this._hoveredTarget, nextTarget: target };\n\t        this._hoveredTarget = target;\n\t      }\n\t      if (target) {\n\t        if (hoveredTarget !== target) {\n\t          if (hoveredTarget) {\n\t            this.fire('mouse:out', outOpt);\n\t            hoveredTarget.fire('mouseout', outOpt);\n\t          }\n\t          this.fire('mouse:over', overOpt);\n\t          target.fire('mouseover', overOpt);\n\t        }\n\t      }\n\t      else if (hoveredTarget) {\n\t        this.fire('mouse:out', outOpt);\n\t        hoveredTarget.fire('mouseout', outOpt);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _checkTarget: function(pointer, obj) {\n\t      if (obj &&\n\t          obj.visible &&\n\t          obj.evented &&\n\t          this.containsPoint(null, obj, pointer)){\n\t        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n\t          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n\t          if (!isTransparent) {\n\t            return true;\n\t          }\n\t        }\n\t        else {\n\t          return true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _searchPossibleTargets: function(objects, pointer) {\n\t\n\t      // Cache all targets where their bounding box contains point.\n\t      var target, i = objects.length, normalizedPointer, subTarget;\n\t      // Do not check for currently grouped objects, since we check the parent group itself.\n\t      // untill we call this function specifically to search inside the activeGroup\n\t      while (i--) {\n\t        if (this._checkTarget(pointer, objects[i])) {\n\t          target = objects[i];\n\t          if (target.type === 'group' && target.subTargetCheck) {\n\t            normalizedPointer = this._normalizePointer(target, pointer);\n\t            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n\t            subTarget && this.targets.push(subTarget);\n\t          }\n\t          break;\n\t        }\n\t      }\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates without the effect of the viewport\n\t     * @param {Object} pointer with \"x\" and \"y\" number values\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    restorePointerVpt: function(pointer) {\n\t      return fabric.util.transformPoint(\n\t        pointer,\n\t        fabric.util.invertTransform(this.viewportTransform)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates relative to canvas.\n\t     * Can return coordinates with or without viewportTransform.\n\t     * ignoreZoom false gives back coordinates that represent\n\t     * the point clicked on canvas element.\n\t     * ignoreZoom true gives back coordinates after being processed\n\t     * by the viewportTransform ( sort of coordinates of what is displayed\n\t     * on the canvas where you are clicking.\n\t     * To interact with your shapes top and left you want to use ignoreZoom true\n\t     * most of the time, while ignoreZoom false will give you coordinates\n\t     * compatible with the object.oCoords system.\n\t     * of the time.\n\t     * @param {Event} e\n\t     * @param {Boolean} ignoreZoom\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n\t      if (!upperCanvasEl) {\n\t        upperCanvasEl = this.upperCanvasEl;\n\t      }\n\t      var pointer = getPointer(e),\n\t          bounds = upperCanvasEl.getBoundingClientRect(),\n\t          boundsWidth = bounds.width || 0,\n\t          boundsHeight = bounds.height || 0,\n\t          cssScale;\n\t\n\t      if (!boundsWidth || !boundsHeight ) {\n\t        if ('top' in bounds && 'bottom' in bounds) {\n\t          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n\t        }\n\t        if ('right' in bounds && 'left' in bounds) {\n\t          boundsWidth = Math.abs( bounds.right - bounds.left );\n\t        }\n\t      }\n\t\n\t      this.calcOffset();\n\t\n\t      pointer.x = pointer.x - this._offset.left;\n\t      pointer.y = pointer.y - this._offset.top;\n\t      if (!ignoreZoom) {\n\t        pointer = this.restorePointerVpt(pointer);\n\t      }\n\t\n\t      if (boundsWidth === 0 || boundsHeight === 0) {\n\t        // If bounds are not available (i.e. not visible), do not apply scale.\n\t        cssScale = { width: 1, height: 1 };\n\t      }\n\t      else {\n\t        cssScale = {\n\t          width: upperCanvasEl.width / boundsWidth,\n\t          height: upperCanvasEl.height / boundsHeight\n\t        };\n\t      }\n\t\n\t      return {\n\t        x: pointer.x * cssScale.width,\n\t        y: pointer.y * cssScale.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n\t     */\n\t    _createUpperCanvas: function () {\n\t      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl.className = '';\n\t      }\n\t      else {\n\t        this.upperCanvasEl = this._createCanvasElement();\n\t      }\n\t      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\t\n\t      this.wrapperEl.appendChild(this.upperCanvasEl);\n\t\n\t      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n\t      this._applyCanvasStyle(this.upperCanvasEl);\n\t      this.contextTop = this.upperCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function () {\n\t      this.cacheCanvasEl = this._createCanvasElement();\n\t      this.cacheCanvasEl.setAttribute('width', this.width);\n\t      this.cacheCanvasEl.setAttribute('height', this.height);\n\t      this.contextCache = this.cacheCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initWrapperElement: function () {\n\t      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n\t        'class': this.containerClass\n\t      });\n\t      fabric.util.setStyle(this.wrapperEl, {\n\t        width: this.getWidth() + 'px',\n\t        height: this.getHeight() + 'px',\n\t        position: 'relative'\n\t      });\n\t      fabric.util.makeElementUnselectable(this.wrapperEl);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement} element canvas element to apply styles on\n\t     */\n\t    _applyCanvasStyle: function (element) {\n\t      var width = this.getWidth() || element.width,\n\t          height = this.getHeight() || element.height;\n\t\n\t      fabric.util.setStyle(element, {\n\t        position: 'absolute',\n\t        width: width + 'px',\n\t        height: height + 'px',\n\t        left: 0,\n\t        top: 0,\n\t        'touch-action': 'none'\n\t      });\n\t      element.width = width;\n\t      element.height = height;\n\t      fabric.util.makeElementUnselectable(element);\n\t    },\n\t\n\t    /**\n\t     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n\t     * @private\n\t     * @param {Element} fromEl Element style is copied from\n\t     * @param {Element} toEl Element copied style is applied to\n\t     */\n\t    _copyCanvasStyle: function (fromEl, toEl) {\n\t      toEl.style.cssText = fromEl.style.cssText;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where object selection is drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getSelectionContext: function() {\n\t      return this.contextTop;\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element on which object selection is drawn\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getSelectionElement: function () {\n\t      return this.upperCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _setActiveObject: function(object) {\n\t      var obj = this._activeObject;\n\t      if (obj) {\n\t        obj.set('active', false);\n\t        if (object !== obj && obj.onDeselect && typeof obj.onDeselect === 'function') {\n\t          obj.onDeselect();\n\t        }\n\t      }\n\t      this._activeObject = object;\n\t      object.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * Sets given object as the only active object on canvas\n\t     * @param {fabric.Object} object Object to set as an active one\n\t     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveObject: function (object, e) {\n\t      var currentActiveObject = this.getActiveObject();\n\t      if (currentActiveObject && currentActiveObject !== object) {\n\t        currentActiveObject.fire('deselected', { e: e });\n\t      }\n\t      this._setActiveObject(object);\n\t      this.fire('object:selected', { target: object, e: e });\n\t      object.fire('selected', { e: e });\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active object\n\t     * @return {fabric.Object} active object\n\t     */\n\t    getActiveObject: function () {\n\t      return this._activeObject;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      // removing active object should fire \"selection:cleared\" events\n\t      if (this.getActiveObject() === obj) {\n\t        this.fire('before:selection:cleared', { target: obj });\n\t        this._discardActiveObject();\n\t        this.fire('selection:cleared', { target: obj });\n\t        obj.fire('deselected');\n\t      }\n\t      if (this._hoveredTarget === obj) {\n\t        this._hoveredTarget = null;\n\t      }\n\t      this.callSuper('_onObjectRemoved', obj);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveObject: function() {\n\t      var obj = this._activeObject;\n\t      if (obj) {\n\t        obj.set('active', false);\n\t        if (obj.onDeselect && typeof obj.onDeselect === 'function') {\n\t          obj.onDeselect();\n\t        }\n\t      }\n\t      this._activeObject = null;\n\t    },\n\t\n\t    /**\n\t     * Discards currently active object and fire events. If the function is called by fabric\n\t     * as a consequence of a mouse event, the event is passed as a parmater and\n\t     * sent to the fire function for the custom events. When used as a method the\n\t     * e param does not have any application.\n\t     * @param {event} e\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveObject: function (e) {\n\t      var activeObject = this._activeObject;\n\t      if (activeObject) {\n\t        this.fire('before:selection:cleared', { target: activeObject, e: e });\n\t        this._discardActiveObject();\n\t        this.fire('selection:cleared', { e: e });\n\t        activeObject.fire('deselected', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Group} group\n\t     */\n\t    _setActiveGroup: function(group) {\n\t      this._activeGroup = group;\n\t      if (group) {\n\t        group.set('active', true);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets active group to a specified one. If the function is called by fabric\n\t     * as a consequence of a mouse event, the event is passed as a parmater and\n\t     * sent to the fire function for the custom events. When used as a method the\n\t     * e param does not have any application.\n\t     * @param {fabric.Group} group Group to set as a current one\n\t     * @param {Event} e Event object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveGroup: function (group, e) {\n\t      this._setActiveGroup(group);\n\t      if (group) {\n\t        this.fire('object:selected', { target: group, e: e });\n\t        group.fire('selected', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active group\n\t     * @return {fabric.Group} Current group\n\t     */\n\t    getActiveGroup: function () {\n\t      return this._activeGroup;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveGroup: function() {\n\t      var g = this.getActiveGroup();\n\t      if (g) {\n\t        g.destroy();\n\t      }\n\t      this.setActiveGroup(null);\n\t    },\n\t\n\t    /**\n\t     * Discards currently active group and fire events If the function is called by fabric\n\t     * as a consequence of a mouse event, the event is passed as a parmater and\n\t     * sent to the fire function for the custom events. When used as a method the\n\t     * e param does not have any application.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveGroup: function (e) {\n\t      var g = this.getActiveGroup();\n\t      if (g) {\n\t        this.fire('before:selection:cleared', { e: e, target: g });\n\t        this._discardActiveGroup();\n\t        this.fire('selection:cleared', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects on canvas, removing any active group or object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    deactivateAll: function () {\n\t      var allObjects = this.getObjects(),\n\t          i = 0,\n\t          len = allObjects.length,\n\t          obj;\n\t      for ( ; i < len; i++) {\n\t        obj = allObjects[i];\n\t        obj && obj.set('active', false);\n\t      }\n\t      this._discardActiveGroup();\n\t      this._discardActiveObject();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects and dispatches appropriate events If the function is called by fabric\n\t     * as a consequence of a mouse event, the event is passed as a parmater and\n\t     * sent to the fire function for the custom events. When used as a method the\n\t     * e param does not have any application.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    deactivateAllWithDispatch: function (e) {\n\t      var allObjects = this.getObjects(),\n\t          i = 0,\n\t          len = allObjects.length,\n\t          obj;\n\t      for ( ; i < len; i++) {\n\t        obj = allObjects[i];\n\t        obj && obj.set('active', false);\n\t      }\n\t      this.discardActiveGroup(e);\n\t      this.discardActiveObject(e);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      fabric.StaticCanvas.prototype.dispose.call(this);\n\t      var wrapper = this.wrapperEl;\n\t      this.removeListeners();\n\t      wrapper.removeChild(this.upperCanvasEl);\n\t      wrapper.removeChild(this.lowerCanvasEl);\n\t      delete this.upperCanvasEl;\n\t      if (wrapper.parentNode) {\n\t        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n\t      }\n\t      delete this.wrapperEl;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this.discardActiveGroup();\n\t      this.discardActiveObject();\n\t      this.clearContext(this.contextTop);\n\t      return this.callSuper('clear');\n\t    },\n\t\n\t    /**\n\t     * Draws objects' controls (borders/controls)\n\t     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n\t     */\n\t    drawControls: function(ctx) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup) {\n\t        activeGroup._renderControls(ctx);\n\t      }\n\t      else {\n\t        this._drawObjectsControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawObjectsControls: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; ++i) {\n\t        if (!this._objects[i] || !this._objects[i].active) {\n\t          continue;\n\t        }\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      //If the object is part of the current selection group, it should\n\t      //be transformed appropriately\n\t      //i.e. it should be serialised as it would appear if the selection group\n\t      //were to be destroyed.\n\t      var originalProperties = this._realizeGroupTransformOnObject(instance),\n\t          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n\t      //Undo the damage we did by changing all of its properties\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Realises an object's group transformation on it\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n\t     * @returns the original values of instance which were changed\n\t     */\n\t    _realizeGroupTransformOnObject: function(instance) {\n\t      if (instance.group && instance.group === this.getActiveGroup()) {\n\t        //Copy all the positionally relevant properties across now\n\t        var originalValues = {},\n\t            layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n\t        layoutProps.forEach(function(prop) {\n\t          originalValues[prop] = instance[prop];\n\t        });\n\t        this.getActiveGroup().realizeTransform(instance);\n\t        return originalValues;\n\t      }\n\t      else {\n\t        return null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Restores the changed properties of instance\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n\t     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n\t     */\n\t    _unwindGroupTransformOnObject: function(instance, originalValues) {\n\t      if (originalValues) {\n\t        instance.set(originalValues);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObject: function(markup, instance, reviver) {\n\t      var originalProperties;\n\t      //If the object is in a selection group, simulate what would happen to that\n\t      //object when the group is deselected\n\t      originalProperties = this._realizeGroupTransformOnObject(instance);\n\t      this.callSuper('_setSVGObject', markup, instance, reviver);\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t    },\n\t  });\n\t\n\t  // copying static properties manually to work around Opera's bug,\n\t  // where \"prototype\" property is enumerable and overrides existing prototype\n\t  for (var prop in fabric.StaticCanvas) {\n\t    if (prop !== 'prototype') {\n\t      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n\t    }\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    /** @ignore */\n\t    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n\t  }\n\t\n\t  /**\n\t   * @ignore\n\t   * @class fabric.Element\n\t   * @alias fabric.Canvas\n\t   * @deprecated Use {@link fabric.Canvas} instead.\n\t   * @constructor\n\t   */\n\t  fabric.Element = fabric.Canvas;\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var cursorOffset = {\n\t        mt: 0, // n\n\t        tr: 1, // ne\n\t        mr: 2, // e\n\t        br: 3, // se\n\t        mb: 4, // s\n\t        bl: 5, // sw\n\t        ml: 6, // w\n\t        tl: 7 // nw\n\t      },\n\t      addListener = fabric.util.addListener,\n\t      removeListener = fabric.util.removeListener,\n\t      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n\t\n\t  function checkClick(e, value) {\n\t    return 'which' in e ? e.which === value : e.button === value - 1;\n\t  }\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Map of cursor style values for each of the object controls\n\t     * @private\n\t     */\n\t    cursorMap: [\n\t      'n-resize',\n\t      'ne-resize',\n\t      'e-resize',\n\t      'se-resize',\n\t      's-resize',\n\t      'sw-resize',\n\t      'w-resize',\n\t      'nw-resize'\n\t    ],\n\t\n\t    /**\n\t     * Adds mouse listeners to canvas\n\t     * @private\n\t     */\n\t    _initEventListeners: function () {\n\t      // in case we initialized the class twice. This should not happen normally\n\t      // but in some kind of applications where the canvas element may be changed\n\t      // this is a workaround to having double listeners.\n\t      this.removeListeners();\n\t      this._bindEvents();\n\t\n\t      addListener(fabric.window, 'resize', this._onResize);\n\t\n\t      // mouse events\n\t      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n\t      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n\t      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\t\n\t      // touch events\n\t      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown, { passive: false });\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\t\n\t      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n\t        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _bindEvents: function() {\n\t      if (this.eventsBinded) {\n\t        // for any reason we pass here twice we do not want to bind events twice.\n\t        return;\n\t      }\n\t      this._onMouseDown = this._onMouseDown.bind(this);\n\t      this._onMouseMove = this._onMouseMove.bind(this);\n\t      this._onMouseUp = this._onMouseUp.bind(this);\n\t      this._onResize = this._onResize.bind(this);\n\t      this._onGesture = this._onGesture.bind(this);\n\t      this._onDrag = this._onDrag.bind(this);\n\t      this._onShake = this._onShake.bind(this);\n\t      this._onLongPress = this._onLongPress.bind(this);\n\t      this._onOrientationChange = this._onOrientationChange.bind(this);\n\t      this._onMouseWheel = this._onMouseWheel.bind(this);\n\t      this._onMouseOut = this._onMouseOut.bind(this);\n\t      this._onMouseEnter = this._onMouseEnter.bind(this);\n\t      this._onContextMenu = this._onContextMenu.bind(this);\n\t      this.eventsBinded = true;\n\t    },\n\t\n\t    /**\n\t     * Removes all event listeners\n\t     */\n\t    removeListeners: function() {\n\t      removeListener(fabric.window, 'resize', this._onResize);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n\t      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n\t      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\t\n\t      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n\t        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js gesture\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onGesture: function(e, self) {\n\t      this.__onTransformGesture && this.__onTransformGesture(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js drag\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onDrag: function(e, self) {\n\t      this.__onDrag && this.__onDrag(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on wheel event\n\t     */\n\t    _onMouseWheel: function(e) {\n\t      this.__onMouseWheel(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseOut: function(e) {\n\t      var target = this._hoveredTarget;\n\t      this.fire('mouse:out', { target: target, e: e });\n\t      this._hoveredTarget = null;\n\t      target && target.fire('mouseout', { e: e });\n\t      if (this._iTextInstances) {\n\t        this._iTextInstances.forEach(function(obj) {\n\t          if (obj.isEditing) {\n\t            obj.hiddenTextarea.focus();\n\t          }\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseenter\n\t     */\n\t    _onMouseEnter: function(e) {\n\t      if (!this.findTarget(e)) {\n\t        this.fire('mouse:over', { target: null, e: e });\n\t        this._hoveredTarget = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js orientation change\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onOrientationChange: function(e, self) {\n\t      this.__onOrientationChange && this.__onOrientationChange(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onShake: function(e, self) {\n\t      this.__onShake && this.__onShake(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onLongPress: function(e, self) {\n\t      this.__onLongPress && this.__onLongPress(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onContextMenu: function (e) {\n\t      if (this.stopContextMenu) {\n\t        e.stopPropagation();\n\t        e.preventDefault();\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDown: function (e) {\n\t      this.__onMouseDown(e);\n\t\n\t      addListener(fabric.document, 'touchend', this._onMouseUp, { passive: false });\n\t      addListener(fabric.document, 'touchmove', this._onMouseMove, { passive: false });\n\t\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchstart') {\n\t        // Unbind mousedown to prevent double triggers from touch devices\n\t        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      }\n\t      else {\n\t        addListener(fabric.document, 'mouseup', this._onMouseUp);\n\t        addListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUp: function (e) {\n\t      this.__onMouseUp(e);\n\t\n\t      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n\t      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\t\n\t      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\t\n\t      if (e.type === 'touchend') {\n\t        // Wait 400ms before rebinding mousedown to prevent double triggers\n\t        // from touch devices\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n\t        }, 400);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMove: function (e) {\n\t      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\t      this.__onMouseMove(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onResize: function () {\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n\t     * @private\n\t     * @param {Object} target\n\t     * @param {Object} pointer\n\t     */\n\t    _shouldRender: function(target, pointer) {\n\t      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\t\n\t      if (activeObject && activeObject.isEditing && target === activeObject) {\n\t        // if we mouse up/down over a editing textbox a cursor change,\n\t        // there is no need to re render\n\t        return false;\n\t      }\n\t      return !!(\n\t        (target && (\n\t          target.isMoving ||\n\t          target !== activeObject))\n\t        ||\n\t        (!target && !!activeObject)\n\t        ||\n\t        (!target && !activeObject && !this._groupSelector)\n\t        ||\n\t        (pointer &&\n\t          this._previousPointer &&\n\t          this.selection && (\n\t          pointer.x !== this._previousPointer.x ||\n\t          pointer.y !== this._previousPointer.y))\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is released on canvas.\n\t     * The method resets the currentTransform parameters, store the image corner\n\t     * position in the image object and render the canvas on top.\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseUp: function (e) {\n\t\n\t      var target;\n\t      // if right/middle click just fire events and return\n\t      // target undefined will make the _handleEvent search the target\n\t      if (checkClick(e, RIGHT_CLICK)) {\n\t        if (this.fireRightClick) {\n\t          this._handleEvent(e, 'up', target, RIGHT_CLICK);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (checkClick(e, MIDDLE_CLICK)) {\n\t        if (this.fireMiddleClick) {\n\t          this._handleEvent(e, 'up', target, MIDDLE_CLICK);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n\t        this._onMouseUpInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      var searchTarget = true, transform = this._currentTransform,\n\t          groupSelector = this._groupSelector,\n\t          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\t\n\t      if (transform) {\n\t        this._finalizeCurrentTransform(e);\n\t        searchTarget = !transform.actionPerformed;\n\t      }\n\t\n\t      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\t\n\t      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\t\n\t      if (target || !isClick) {\n\t        this._maybeGroupObjects(e);\n\t      }\n\t      else {\n\t        // those are done by default on mouse up\n\t        // by _maybeGroupObjects, we are skipping it in case of no target find\n\t        this._groupSelector = null;\n\t        this._currentTransform = null;\n\t      }\n\t\n\t      if (target) {\n\t        target.isMoving = false;\n\t      }\n\t      this._setCursorFromEvent(e, target);\n\t      this._handleEvent(e, 'up', target ? target : null, LEFT_CLICK, isClick);\n\t      target && (target.__corner = 0);\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * Handle event firing for target and subtargets\n\t     * @param {Event} e event from mouse\n\t     * @param {String} eventType event to fire (up, down or move)\n\t     * @param {fabric.Object} targetObj receiving event\n\t     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n\t     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n\t     */\n\t    _handleEvent: function(e, eventType, targetObj, button, isClick) {\n\t      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n\t          targets = this.targets || [],\n\t          options = {\n\t            e: e,\n\t            target: target,\n\t            subTargets: targets,\n\t            button: button || LEFT_CLICK,\n\t            isClick: isClick || false\n\t          };\n\t      this.fire('mouse:' + eventType, options);\n\t      target && target.fire('mouse' + eventType, options);\n\t      for (var i = 0; i < targets.length; i++) {\n\t        targets[i].fire('mouse' + eventType, options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n\t     */\n\t    _finalizeCurrentTransform: function(e) {\n\t\n\t      var transform = this._currentTransform,\n\t          target = transform.target;\n\t\n\t      if (target._scaling) {\n\t        target._scaling = false;\n\t      }\n\t\n\t      target.setCoords();\n\t      this._restoreOriginXY(target);\n\t\n\t      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n\t        this.fire('object:modified', { target: target, e: e });\n\t        target.fire('modified', { e: e });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object to restore\n\t     */\n\t    _restoreOriginXY: function(target) {\n\t      if (this._previousOriginX && this._previousOriginY) {\n\t\n\t        var originPoint = target.translateToOriginPoint(\n\t          target.getCenterPoint(),\n\t          this._previousOriginX,\n\t          this._previousOriginY);\n\t\n\t        target.originX = this._previousOriginX;\n\t        target.originY = this._previousOriginY;\n\t\n\t        target.left = originPoint.x;\n\t        target.top = originPoint.y;\n\t\n\t        this._previousOriginX = null;\n\t        this._previousOriginY = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDownInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = true;\n\t      this.discardActiveObject(e).renderAll();\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, this.contextTop);\n\t      }\n\t      var pointer = this.getPointer(e);\n\t      this.freeDrawingBrush.onMouseDown(pointer);\n\t      this._handleEvent(e, 'down');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMoveInDrawingMode: function(e) {\n\t      if (this._isCurrentlyDrawing) {\n\t        var pointer = this.getPointer(e);\n\t        this.freeDrawingBrush.onMouseMove(pointer);\n\t      }\n\t      this.setCursor(this.freeDrawingCursor);\n\t      this._handleEvent(e, 'move');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUpInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = false;\n\t      if (this.clipTo) {\n\t        this.contextTop.restore();\n\t      }\n\t      this.freeDrawingBrush.onMouseUp();\n\t      this._handleEvent(e, 'up');\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is clicked on canvas.\n\t     * The method inits the currentTransform parameters and renders all the\n\t     * canvas so the current image can be placed on the top canvas and the rest\n\t     * in on the container one.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    __onMouseDown: function (e) {\n\t\n\t      var target = this.findTarget(e);\n\t\n\t      // if right click just fire events\n\t      if (checkClick(e, RIGHT_CLICK)) {\n\t        if (this.fireRightClick) {\n\t          this._handleEvent(e, 'down', target ? target : null, RIGHT_CLICK);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (checkClick(e, MIDDLE_CLICK)) {\n\t        if (this.fireMiddleClick) {\n\t          this._handleEvent(e, 'down', target ? target : null, MIDDLE_CLICK);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseDownInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      // ignore if some object is being transformed at this moment\n\t      if (this._currentTransform) {\n\t        return;\n\t      }\n\t\n\t      // save pointer for check in __onMouseUp event\n\t      var pointer = this.getPointer(e, true);\n\t      this._previousPointer = pointer;\n\t\n\t      var shouldRender = this._shouldRender(target, pointer),\n\t          shouldGroup = this._shouldGroup(e, target);\n\t\n\t      if (this._shouldClearSelection(e, target)) {\n\t        this.deactivateAllWithDispatch(e);\n\t      }\n\t      else if (shouldGroup) {\n\t        this._handleGrouping(e, target);\n\t        target = this.getActiveGroup();\n\t      }\n\t\n\t      if (this.selection && (!target || (!target.selectable && !target.isEditing))) {\n\t        this._groupSelector = {\n\t          ex: pointer.x,\n\t          ey: pointer.y,\n\t          top: 0,\n\t          left: 0\n\t        };\n\t      }\n\t\n\t      if (target) {\n\t        if (target.selectable && (target.__corner || !shouldGroup)) {\n\t          this._beforeTransform(e, target);\n\t          this._setupCurrentTransform(e, target);\n\t        }\n\t        var activeObject = this.getActiveObject();\n\t        if (target !== this.getActiveGroup() && target !== activeObject) {\n\t          this.deactivateAll();\n\t          if (target.selectable) {\n\t            activeObject && activeObject.fire('deselected', { e: e });\n\t            this.setActiveObject(target, e);\n\t          }\n\t        }\n\t      }\n\t      this._handleEvent(e, 'down', target ? target : null);\n\t      // we must renderAll so that we update the visuals\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeTransform: function(e, target) {\n\t      this.stateful && target.saveState();\n\t\n\t      // determine if it's a drag or rotate case\n\t      if (target._findTargetCorner(this.getPointer(e))) {\n\t        this.onBeforeScaleRotate(target);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that origin is set to center\n\t     */\n\t    _setOriginToCenter: function(target) {\n\t      this._previousOriginX = this._currentTransform.target.originX;\n\t      this._previousOriginY = this._currentTransform.target.originY;\n\t\n\t      var center = target.getCenterPoint();\n\t\n\t      target.originX = 'center';\n\t      target.originY = 'center';\n\t\n\t      target.left = center.x;\n\t      target.top = center.y;\n\t\n\t      this._currentTransform.left = target.left;\n\t      this._currentTransform.top = target.top;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that center is set to origin\n\t     */\n\t    _setCenterToOrigin: function(target) {\n\t      var originPoint = target.translateToOriginPoint(\n\t        target.getCenterPoint(),\n\t        this._previousOriginX,\n\t        this._previousOriginY);\n\t\n\t      target.originX = this._previousOriginX;\n\t      target.originY = this._previousOriginY;\n\t\n\t      target.left = originPoint.x;\n\t      target.top = originPoint.y;\n\t\n\t      this._previousOriginX = null;\n\t      this._previousOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is hovering the canvas.\n\t     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n\t     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n\t     * all any other type of action.\n\t     * In case of an image transformation only the top canvas will be rendered.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    __onMouseMove: function (e) {\n\t\n\t      var target, pointer;\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseMoveInDrawingMode(e);\n\t        return;\n\t      }\n\t      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n\t        return;\n\t      }\n\t\n\t      var groupSelector = this._groupSelector;\n\t\n\t      // We initially clicked in an empty area, so we draw a box for multiple selection\n\t      if (groupSelector) {\n\t        pointer = this.getPointer(e, true);\n\t\n\t        groupSelector.left = pointer.x - groupSelector.ex;\n\t        groupSelector.top = pointer.y - groupSelector.ey;\n\t\n\t        this.renderTop();\n\t      }\n\t      else if (!this._currentTransform) {\n\t        target = this.findTarget(e);\n\t        this._setCursorFromEvent(e, target);\n\t      }\n\t      else {\n\t        this._transformObject(e);\n\t      }\n\t      this._handleEvent(e, 'move', target ? target : null);\n\t    },\n\t\n\t    /**\n\t     * Method that defines actions when an Event Mouse Wheel\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseWheel: function(e) {\n\t      this._handleEvent(e, 'wheel');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event fired on mousemove\n\t     */\n\t    _transformObject: function(e) {\n\t      var pointer = this.getPointer(e),\n\t          transform = this._currentTransform;\n\t\n\t      transform.reset = false;\n\t      transform.target.isMoving = true;\n\t      transform.shiftKey = e.shiftKey;\n\t      transform.altKey = e[this.centeredKey];\n\t\n\t      this._beforeScaleTransform(e, transform);\n\t      this._performTransformAction(e, transform, pointer);\n\t\n\t      transform.actionPerformed && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _performTransformAction: function(e, transform, pointer) {\n\t      var x = pointer.x,\n\t          y = pointer.y,\n\t          target = transform.target,\n\t          action = transform.action,\n\t          actionPerformed = false;\n\t\n\t      if (action === 'rotate') {\n\t        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n\t      }\n\t      else if (action === 'scale') {\n\t        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleX') {\n\t        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleY') {\n\t        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'skewX') {\n\t        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n\t      }\n\t      else if (action === 'skewY') {\n\t        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n\t      }\n\t      else {\n\t        actionPerformed = this._translateObject(x, y);\n\t        if (actionPerformed) {\n\t          this._fire('moving', target, e);\n\t          this.setCursor(target.moveCursor || this.moveCursor);\n\t        }\n\t      }\n\t      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fire: function(eventName, target, e) {\n\t      this.fire('object:' + eventName, { target: target, e: e });\n\t      target.fire(eventName, { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeScaleTransform: function(e, transform) {\n\t      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n\t        var centerTransform = this._shouldCenterTransform(transform.target);\n\t\n\t        // Switch from a normal resize to center-based\n\t        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n\t           // Switch from center-based resize to normal one\n\t           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n\t        ) {\n\t          this._resetCurrentTransform();\n\t          transform.reset = true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {Object} transform current tranform\n\t     * @param {Number} x mouse position x from origin\n\t     * @param {Number} y mouse poistion y from origin\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _onScale: function(e, transform, x, y) {\n\t      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n\t        transform.currentAction = 'scale';\n\t        return this._scaleObject(x, y);\n\t      }\n\t      else {\n\t        // Switch from a normal resize to proportional\n\t        if (!transform.reset && transform.currentAction === 'scale') {\n\t          this._resetCurrentTransform();\n\t        }\n\t\n\t        transform.currentAction = 'scaleEqually';\n\t        return this._scaleObject(x, y, 'equally');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets the cursor depending on where the canvas is being hovered.\n\t     * Note: very buggy in Opera\n\t     * @param {Event} e Event object\n\t     * @param {Object} target Object that the mouse is hovering, if so.\n\t     */\n\t    _setCursorFromEvent: function (e, target) {\n\t      if (!target) {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t\n\t      var hoverCursor = target.hoverCursor || this.hoverCursor,\n\t          activeGroup = this.getActiveGroup(),\n\t          // only show proper corner when group selection is not active\n\t          corner = target._findTargetCorner\n\t                    && (!activeGroup || !activeGroup.contains(target))\n\t                    && target._findTargetCorner(this.getPointer(e, true));\n\t\n\t      if (!corner) {\n\t        this.setCursor(hoverCursor);\n\t      }\n\t      else {\n\t        this._setCornerCursor(corner, target, e);\n\t      }\n\t      //actually unclear why it should return something\n\t      //is never evaluated\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setCornerCursor: function(corner, target, e) {\n\t      if (corner in cursorOffset) {\n\t        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n\t      }\n\t      else if (corner === 'mtr' && target.hasRotatingPoint) {\n\t        this.setCursor(this.rotationCursor);\n\t      }\n\t      else {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getRotatedCornerCursor: function(corner, target, e) {\n\t      var n = Math.round((target.getAngle() % 360) / 45);\n\t\n\t      if (n < 0) {\n\t        n += 8; // full circle ahead\n\t      }\n\t      n += cursorOffset[corner];\n\t      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n\t        //if we are holding shift and we are on a mx corner...\n\t        n += 2;\n\t      }\n\t      // normalize n to be from 0 to 7\n\t      n %= 8;\n\t\n\t      return this.cursorMap[n];\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var min = Math.min,\n\t      max = Math.max;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     * @return {Boolean}\n\t     */\n\t    _shouldGroup: function(e, target) {\n\t      var activeObject = this.getActiveObject();\n\t      return e[this.selectionKey] && target && target.selectable &&\n\t            (this.getActiveGroup() || (activeObject && activeObject !== target))\n\t            && this.selection;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _handleGrouping: function (e, target) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (target === activeGroup) {\n\t        // if it's a group, find target again, using activeGroup objects\n\t        target = this.findTarget(e, true);\n\t        // if even object is not found, bail out\n\t        if (!target) {\n\t          return;\n\t        }\n\t      }\n\t      if (activeGroup) {\n\t        this._updateActiveGroup(target, e);\n\t      }\n\t      else {\n\t        this._createActiveGroup(target, e);\n\t      }\n\t\n\t      if (this._activeGroup) {\n\t        this._activeGroup.saveCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateActiveGroup: function(target, e) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup.contains(target)) {\n\t\n\t        activeGroup.removeWithUpdate(target);\n\t        target.set('active', false);\n\t\n\t        if (activeGroup.size() === 1) {\n\t          // remove group alltogether if after removal it only contains 1 object\n\t          this.discardActiveGroup(e);\n\t          // activate last remaining object\n\t          this.setActiveObject(activeGroup.item(0), e);\n\t          return;\n\t        }\n\t      }\n\t      else {\n\t        activeGroup.addWithUpdate(target);\n\t      }\n\t      this.fire('selection:created', { target: activeGroup, e: e });\n\t      activeGroup.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createActiveGroup: function(target, e) {\n\t\n\t      if (this._activeObject && target !== this._activeObject) {\n\t\n\t        var group = this._createGroup(target);\n\t        group.addWithUpdate();\n\t\n\t        this.setActiveGroup(group, e);\n\t        this._activeObject = null;\n\t\n\t        this.fire('selection:created', { target: group, e: e });\n\t      }\n\t\n\t      target.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target\n\t     */\n\t    _createGroup: function(target) {\n\t\n\t      var objects = this.getObjects(),\n\t          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n\t          groupObjects = isActiveLower\n\t            ? [this._activeObject, target]\n\t            : [target, this._activeObject];\n\t      this._activeObject.isEditing && this._activeObject.exitEditing();\n\t      return new fabric.Group(groupObjects, {\n\t        canvas: this\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e mouse event\n\t     */\n\t    _groupSelectedObjects: function (e) {\n\t\n\t      var group = this._collectObjects();\n\t\n\t      // do not create group for 1 element only\n\t      if (group.length === 1) {\n\t        this.setActiveObject(group[0], e);\n\t      }\n\t      else if (group.length > 1) {\n\t        group = new fabric.Group(group.reverse(), {\n\t          canvas: this\n\t        });\n\t        group.addWithUpdate();\n\t        this.setActiveGroup(group, e);\n\t        group.saveCoords();\n\t        this.fire('selection:created', { target: group, e: e });\n\t        this.renderAll();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _collectObjects: function() {\n\t      var group = [],\n\t          currentObject,\n\t          x1 = this._groupSelector.ex,\n\t          y1 = this._groupSelector.ey,\n\t          x2 = x1 + this._groupSelector.left,\n\t          y2 = y1 + this._groupSelector.top,\n\t          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n\t          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n\t          isClick = x1 === x2 && y1 === y2;\n\t\n\t      for (var i = this._objects.length; i--; ) {\n\t        currentObject = this._objects[i];\n\t\n\t        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n\t          continue;\n\t        }\n\t\n\t        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.containsPoint(selectionX1Y1) ||\n\t            currentObject.containsPoint(selectionX2Y2)\n\t        ) {\n\t          currentObject.set('active', true);\n\t          group.push(currentObject);\n\t\n\t          // only add one object if it's a click\n\t          if (isClick) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return group;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _maybeGroupObjects: function(e) {\n\t      if (this.selection && this._groupSelector) {\n\t        this._groupSelectedObjects(e);\n\t      }\n\t\n\t      var activeGroup = this.getActiveGroup();\n\t      if (activeGroup) {\n\t        activeGroup.setObjectsCoords().setCoords();\n\t        activeGroup.isMoving = false;\n\t        this.setCursor(this.defaultCursor);\n\t      }\n\t\n\t      // clear selection and current transformation\n\t      this._groupSelector = null;\n\t      this._currentTransform = null;\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\t\n\t  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n\t     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'jpeg',\n\t     *   quality: 0.8\n\t     * });\n\t     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'png',\n\t     *   left: 100,\n\t     *   top: 100,\n\t     *   width: 200,\n\t     *   height: 200\n\t     * });\n\t     * @example <caption>Generate double scaled png dataURL</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'png',\n\t     *   multiplier: 2\n\t     * });\n\t     */\n\t    toDataURL: function (options) {\n\t      options || (options = { });\n\t\n\t      var format = options.format || 'png',\n\t          quality = options.quality || 1,\n\t          multiplier = options.multiplier || 1,\n\t          cropping = {\n\t            left: options.left || 0,\n\t            top: options.top || 0,\n\t            width: options.width || 0,\n\t            height: options.height || 0,\n\t          };\n\t      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\t\n\t      var origWidth = this.getWidth(),\n\t          origHeight = this.getHeight(),\n\t          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n\t          scaledHeight = (cropping.height || this.getHeight()) * multiplier,\n\t          zoom = this.getZoom(),\n\t          newZoom = zoom * multiplier,\n\t          vp = this.viewportTransform,\n\t          translateX = (vp[4] - cropping.left) * multiplier,\n\t          translateY = (vp[5] - cropping.top) * multiplier,\n\t          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n\t          originalInteractive = this.interactive;\n\t\n\t      this.viewportTransform = newVp;\n\t      // setting interactive to false avoid exporting controls\n\t      this.interactive && (this.interactive = false);\n\t      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n\t        // this.setDimensions is going to renderAll also;\n\t        this.setDimensions({ width: scaledWidth, height: scaledHeight }, { backstoreOnly: true });\n\t      }\n\t      else {\n\t        this.renderAll();\n\t      }\n\t      var data = this.__toDataURL(format, quality, cropping);\n\t      originalInteractive && (this.interactive = originalInteractive);\n\t      this.viewportTransform = vp;\n\t      //setDimensions with no option object is taking care of:\n\t      //this.width, this.height, this.renderAll()\n\t      this.setDimensions({ width: origWidth, height: origHeight }, { backstoreOnly: true });\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __toDataURL: function(format, quality) {\n\t\n\t      var canvasEl = this.contextContainer.canvas;\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (format === 'jpg') {\n\t        format = 'jpeg';\n\t      }\n\t\n\t      var data = supportQuality\n\t                ? canvasEl.toDataURL('image/' + format, quality)\n\t                : canvasEl.toDataURL('image/' + format);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n\t     * @deprecated since 1.0.13\n\t     * @param {String} format (png|jpeg)\n\t     * @param {Number} multiplier\n\t     * @param {Number} quality (0..1)\n\t     * @return {String}\n\t     */\n\t    toDataURLWithMultiplier: function (format, multiplier, quality) {\n\t      return this.toDataURL({\n\t        format: format,\n\t        multiplier: multiplier,\n\t        quality: quality\n\t      });\n\t    },\n\t  });\n\t\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Populates canvas with data from the specified dataless JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n\t   * @deprecated since 1.2.2\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   */\n\t  loadFromDatalessJSON: function (json, callback, reviver) {\n\t    return this.loadFromJSON(json, callback, reviver);\n\t  },\n\t\n\t  /**\n\t   * Populates canvas with data from the specified JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n\t   * @example <caption>loadFromJSON</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n\t   * @example <caption>loadFromJSON with reviver</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n\t   *   // `o` = json object\n\t   *   // `object` = fabric.Object instance\n\t   *   // ... do some stuff ...\n\t   * });\n\t   */\n\t  loadFromJSON: function (json, callback, reviver) {\n\t    if (!json) {\n\t      return;\n\t    }\n\t\n\t    // serialize if it wasn't already\n\t    var serialized = (typeof json === 'string')\n\t      ? JSON.parse(json)\n\t      : fabric.util.object.clone(json);\n\t\n\t    var _this = this,\n\t        renderOnAddRemove = this.renderOnAddRemove;\n\t    this.renderOnAddRemove = false;\n\t\n\t    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n\t      _this.clear();\n\t      _this._setBgOverlay(serialized, function () {\n\t        enlivenedObjects.forEach(function(obj, index) {\n\t          // we splice the array just in case some custom classes restored from JSON\n\t          // will add more object to canvas at canvas init.\n\t          _this.insertAt(obj, index);\n\t        });\n\t        _this.renderOnAddRemove = renderOnAddRemove;\n\t        // remove parts i cannot set as options\n\t        delete serialized.objects;\n\t        delete serialized.backgroundImage;\n\t        delete serialized.overlayImage;\n\t        delete serialized.background;\n\t        delete serialized.overlay;\n\t        // this._initOptions does too many things to just\n\t        // call it. Normally loading an Object from JSON\n\t        // create the Object instance. Here the Canvas is\n\t        // already an instance and we are just loading things over it\n\t        _this._setOptions(serialized);\n\t        _this.renderAll();\n\t        callback && callback();\n\t      });\n\t    }, reviver);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} serialized Object with background and overlay information\n\t   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n\t   */\n\t  _setBgOverlay: function(serialized, callback) {\n\t    var loaded = {\n\t      backgroundColor: false,\n\t      overlayColor: false,\n\t      backgroundImage: false,\n\t      overlayImage: false\n\t    };\n\t\n\t    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var cbIfLoaded = function () {\n\t      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n\t        callback && callback();\n\t      }\n\t    };\n\t\n\t    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n\t   * @param {(Object|String)} value Value to set\n\t   * @param {Object} loaded Set loaded property to true if property is set\n\t   * @param {Object} callback Callback function to invoke after property is set\n\t   */\n\t  __setBgOverlay: function(property, value, loaded, callback) {\n\t    var _this = this;\n\t\n\t    if (!value) {\n\t      loaded[property] = true;\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    if (property === 'backgroundImage' || property === 'overlayImage') {\n\t      fabric.util.enlivenObjects([value], function(enlivedObject){\n\t        _this[property] = enlivedObject[0];\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t    else {\n\t      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} objects\n\t   * @param {Function} callback\n\t   * @param {Function} [reviver]\n\t   */\n\t  _enlivenObjects: function (objects, callback, reviver) {\n\t    if (!objects || objects.length === 0) {\n\t      callback && callback([]);\n\t      return;\n\t    }\n\t\n\t    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n\t      callback && callback(enlivenedObjects);\n\t    }, null, reviver);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURL: function (format, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURL(format));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Number} multiplier\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURLWithMultiplier(format, multiplier));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n\t   */\n\t  clone: function (callback, properties) {\n\t    var data = JSON.stringify(this.toJSON(properties));\n\t    this.cloneWithoutData(function(clone) {\n\t      clone.loadFromJSON(data, function() {\n\t        callback && callback(clone);\n\t      });\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance without cloning existing data.\n\t   * This essentially copies canvas dimensions, clipping properties, etc.\n\t   * but leaves data empty (so that you can populate it with your own)\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   */\n\t  cloneWithoutData: function(callback) {\n\t    var el = fabric.document.createElement('canvas');\n\t\n\t    el.width = this.getWidth();\n\t    el.height = this.getHeight();\n\t\n\t    var clone = new fabric.Canvas(el);\n\t    clone.clipTo = this.clipTo;\n\t    if (this.backgroundImage) {\n\t      clone.setBackgroundImage(this.backgroundImage.src, function() {\n\t        clone.renderAll();\n\t        callback && callback(clone);\n\t      });\n\t      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n\t      clone.backgroundImageStretch = this.backgroundImageStretch;\n\t    }\n\t    else {\n\t      callback && callback(clone);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      capitalize = fabric.util.string.capitalize,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t      objectCaching = !fabric.isLikelyNode,\n\t      ALIASING_LIMIT = 2;\n\t\n\t  if (fabric.Object) {\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Root object class from which all 2d shape classes inherit from\n\t   * @class fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n\t   * @see {@link fabric.Object#initialize} for constructor definition\n\t   *\n\t   * @fires added\n\t   * @fires removed\n\t   *\n\t   * @fires selected\n\t   * @fires deselected\n\t   * @fires modified\n\t   * @fires rotating\n\t   * @fires scaling\n\t   * @fires moving\n\t   * @fires skewing\n\t   *\n\t   * @fires mousedown\n\t   * @fires mouseup\n\t   * @fires mouseover\n\t   * @fires mouseout\n\t   * @fires mousewheel\n\t   */\n\t  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method getClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Function}\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method setClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Function} clipTo Clipping function\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method getTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Array} transformMatrix\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method setTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Array} transformMatrix\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#visible|visible} state\n\t     * @method getVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} True if visible\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#visible|visible} state\n\t     * @method setVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value visible value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#shadow|shadow}\n\t     * @method getShadow\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Object} Shadow instance\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#stroke|stroke}\n\t     * @method getStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} stroke value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#stroke|stroke}\n\t     * @method setStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value stroke value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method getStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} strokeWidth value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method setStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value strokeWidth value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originX|originX}\n\t     * @method getOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originX|originX}\n\t     * @method setOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originY|originY}\n\t     * @method getOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originY|originY}\n\t     * @method setOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#fill|fill}\n\t     * @method getFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} Fill value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#fill|fill}\n\t     * @method setFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value Fill value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#opacity|opacity}\n\t     * @method getOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Opacity value (0-1)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#opacity|opacity}\n\t     * @method setOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Opacity value (0-1)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n\t     * @method getAngle\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number}\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#top|top position}\n\t     * @method getTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Top value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#top|top position}\n\t     * @method setTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Top value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#left|left position}\n\t     * @method getLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Left value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#left|left position}\n\t     * @method setLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Left value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method getScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method setScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method getScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method setScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n\t     * @method getFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipX|flipX} value\n\t     * @method setFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n\t     * @method getFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipY|flipY} value\n\t     * @method setFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object (rect, circle, path, etc.).\n\t     * Note that this property is meant to be read-only and not meant to be modified.\n\t     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                     'object',\n\t\n\t    /**\n\t     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originX:                  'left',\n\t\n\t    /**\n\t     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originY:                  'top',\n\t\n\t    /**\n\t     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    top:                      0,\n\t\n\t    /**\n\t     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    left:                     0,\n\t\n\t    /**\n\t     * Object width\n\t     * @type Number\n\t     * @default\n\t     */\n\t    width:                    0,\n\t\n\t    /**\n\t     * Object height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    height:                   0,\n\t\n\t    /**\n\t     * Object scale factor (horizontal)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleX:                   1,\n\t\n\t    /**\n\t     * Object scale factor (vertical)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleY:                   1,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped horizontally\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipX:                    false,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped vertically\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipY:                    false,\n\t\n\t    /**\n\t     * Opacity of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    opacity:                  1,\n\t\n\t    /**\n\t     * Angle of rotation of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    angle:                    0,\n\t\n\t    /**\n\t     * Angle of skew on x axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewX:                    0,\n\t\n\t    /**\n\t     * Angle of skew on y axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewY:                    0,\n\t\n\t    /**\n\t     * Size of object's controlling corners (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cornerSize:               13,\n\t\n\t    /**\n\t     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    transparentCorners:       true,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:              null,\n\t\n\t    /**\n\t     * Default cursor value used when moving this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:               null,\n\t\n\t    /**\n\t     * Padding between object and its controlling borders (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    padding:                  0,\n\t\n\t    /**\n\t     * Color of controlling borders of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    borderColor:              'rgba(102,153,255,0.75)',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    borderDashArray:          null,\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerColor:              'rgba(102,153,255,0.5)',\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active and transparentCorners false)\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerStrokeColor:        null,\n\t\n\t    /**\n\t     * Specify style of control, 'rect' or 'circle'\n\t     * @since 1.6.2\n\t     * @type String\n\t     */\n\t    cornerStyle:          'rect',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's control (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    cornerDashArray:          null,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being scaled via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:          false,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being rotated via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:         true,\n\t\n\t    /**\n\t     * Color of object's fill\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill:                     'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Fill rule used to fill an object\n\t     * accepted values are nonzero, evenodd\n\t     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n\t     * @type String\n\t     * @default\n\t     */\n\t    fillRule:                 'nonzero',\n\t\n\t    /**\n\t     * Composite rule used for canvas globalCompositeOperation\n\t     * @type String\n\t     * @default\n\t     */\n\t    globalCompositeOperation: 'source-over',\n\t\n\t    /**\n\t     * Background color of an object.\n\t     * @type String\n\t     * @default\n\t     */\n\t    backgroundColor:          '',\n\t\n\t    /**\n\t     * Selection Background color of an object. colored layer behind the object when it is active.\n\t     * does not mix good with globalCompositeOperation methods.\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBackgroundColor:          '',\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:                   null,\n\t\n\t    /**\n\t     * Width of a stroke used to render this object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth:              1,\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n\t     * @type Array\n\t     */\n\t    strokeDashArray:          null,\n\t\n\t    /**\n\t     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineCap:            'butt',\n\t\n\t    /**\n\t     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineJoin:           'miter',\n\t\n\t    /**\n\t     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeMiterLimit:         10,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:                   null,\n\t\n\t    /**\n\t     * Opacity of object's controlling borders when object is active and moving\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderOpacityWhenMoving:  0.4,\n\t\n\t    /**\n\t     * Scale factor of object's controlling borders\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderScaleFactor:        1,\n\t\n\t    /**\n\t     * Transform matrix (similar to SVG's transform matrix)\n\t     * @type Array\n\t     */\n\t    transformMatrix:          null,\n\t\n\t    /**\n\t     * Minimum allowed scale value of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minScaleLimit:            0.01,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n\t     * But events still fire on it.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selectable:               true,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    evented:                  true,\n\t\n\t    /**\n\t     * When set to `false`, an object is not rendered on canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    visible:                  true,\n\t\n\t    /**\n\t     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasControls:              true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling borders are not rendered\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasBorders:               true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling rotating point will not be visible or selectable\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasRotatingPoint:         true,\n\t\n\t    /**\n\t     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rotatingPointOffset:      40,\n\t\n\t    /**\n\t     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:       false,\n\t\n\t    /**\n\t     * When `false`, default object's values are not included in its serialization\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues:     true,\n\t\n\t    /**\n\t     * Function that determines clipping of an object (context is passed as a first argument)\n\t     * Note that context origin is at the object's center point (not left/top corner)\n\t     * @type Function\n\t     */\n\t    clipTo:                   null,\n\t\n\t    /**\n\t     * When `true`, object horizontal movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementX:            false,\n\t\n\t    /**\n\t     * When `true`, object vertical movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementY:            false,\n\t\n\t    /**\n\t     * When `true`, object rotation is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockRotation:             false,\n\t\n\t    /**\n\t     * When `true`, object horizontal scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingY:             false,\n\t\n\t    /**\n\t     * When `true`, object non-uniform scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockUniScaling:           false,\n\t\n\t    /**\n\t     * When `true`, object horizontal skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingY:             false,\n\t\n\t    /**\n\t     * When `true`, object cannot be flipped by scaling into negative values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingFlip:          false,\n\t\n\t    /**\n\t     * When `true`, object is not exported in SVG or OBJECT/JSON\n\t     * since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    excludeFromExport:        false,\n\t\n\t    /**\n\t     * When `true`, object is cached on an additional canvas.\n\t     * default to true\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    objectCaching:            objectCaching,\n\t\n\t    /**\n\t     * When `true`, object properties are checked for cache invalidation. In some particular\n\t     * situation you may want this to be disabled ( spray brush, very big pathgroups, groups)\n\t     * or if your application does not allow you to modify properties for groups child you want\n\t     * to disable it for groups.\n\t     * default to false\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default false\n\t     */\n\t    statefullCache:            false,\n\t\n\t    /**\n\t     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n\t     * too much and will be redrawn with correct details at the end of scaling.\n\t     * this setting is performance and application dependant.\n\t     * default to true\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    noScaleCache:              true,\n\t\n\t    /**\n\t     * When set to `true`, object's cache will be rerendered next render call.\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    dirty:                true,\n\t\n\t    /**\n\t     * List of properties to consider when checking if state\n\t     * of an object is changed (fabric.Object#hasStateChanged)\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: (\n\t      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n\t      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n\t      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n\t      'skewX skewY fillRule'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * List of properties to consider when checking if cache needs refresh\n\t     * @type Array\n\t     */\n\t    cacheProperties: (\n\t      'fill stroke strokeWidth strokeDashArray width height' +\n\t      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      if (options) {\n\t        this.setOptions(options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Create a the canvas used to keep the cached copy of the object\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function() {\n\t      this._cacheProperties = {};\n\t      this._cacheCanvas = fabric.document.createElement('canvas');\n\t      this._cacheContext = this._cacheCanvas.getContext('2d');\n\t      this._updateCacheCanvas();\n\t    },\n\t\n\t    /**\n\t     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n\t     * and each side do not cross fabric.cacheSideLimit\n\t     * those numbers are configurable so that you can get as much detail as you want\n\t     * making bargain with performances.\n\t     * @param {Object} dims\n\t     * @param {Object} dims.width width of canvas\n\t     * @param {Object} dims.height height of canvas\n\t     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n\t     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n\t     * @return {Object}.width width of canvas\n\t     * @return {Object}.height height of canvas\n\t     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n\t     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n\t     */\n\t    _limitCacheSize: function(dims) {\n\t      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n\t          width = dims.width, height = dims.height,\n\t          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n\t      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n\t        if (width < min) {\n\t          dims.width = min;\n\t        }\n\t        if (height < min) {\n\t          dims.height = min;\n\t        }\n\t        return dims;\n\t      }\n\t      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n\t          capValue = fabric.util.capValue,\n\t          x = capValue(min, limitedDims.x, max),\n\t          y = capValue(min, limitedDims.y, max);\n\t      if (width > x) {\n\t        dims.zoomX /= width / x;\n\t        dims.width = x;\n\t        dims.capped = true;\n\t      }\n\t      if (height > y) {\n\t        dims.zoomY /= height / y;\n\t        dims.height = y;\n\t        dims.capped = true;\n\t      }\n\t      return dims;\n\t    },\n\t\n\t    /**\n\t     * Return the dimension and the zoom level needed to create a cache canvas\n\t     * big enough to host the object to be cached.\n\t     * @private\n\t     * @param {Object} dim.x width of object to be cached\n\t     * @param {Object} dim.y height of object to be cached\n\t     * @return {Object}.width width of canvas\n\t     * @return {Object}.height height of canvas\n\t     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n\t     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n\t     */\n\t    _getCacheCanvasDimensions: function() {\n\t      var zoom = this.canvas && this.canvas.getZoom() || 1,\n\t          objectScale = this.getObjectScaling(),\n\t          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n\t          dim = this._getNonTransformedDimensions(),\n\t          zoomX = objectScale.scaleX * zoom * retina,\n\t          zoomY = objectScale.scaleY * zoom * retina,\n\t          width = dim.x * zoomX,\n\t          height = dim.y * zoomY;\n\t      return {\n\t        width: width + ALIASING_LIMIT,\n\t        height: height + ALIASING_LIMIT,\n\t        zoomX: zoomX,\n\t        zoomY: zoomY,\n\t        x: dim.x,\n\t        y: dim.y\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Update width and height of the canvas for cache\n\t     * returns true or false if canvas needed resize.\n\t     * @private\n\t     * @return {Boolean} true if the canvas has been resized\n\t     */\n\t    _updateCacheCanvas: function() {\n\t      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n\t        var target = this.canvas._currentTransform.target,\n\t            action = this.canvas._currentTransform.action;\n\t        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n\t          return false;\n\t        }\n\t      }\n\t      var canvas = this._cacheCanvas,\n\t          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n\t          minCacheSize = fabric.minCacheSideLimit,\n\t          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n\t          zoomX = dims.zoomX, zoomY = dims.zoomY,\n\t          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n\t          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n\t          shouldRedraw = dimensionsChanged || zoomChanged,\n\t          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n\t      if (dimensionsChanged) {\n\t        var canvasWidth = this._cacheCanvas.width,\n\t            canvasHeight = this._cacheCanvas.height,\n\t            sizeGrowing = width > canvasWidth || height > canvasHeight,\n\t            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n\t              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n\t        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n\t        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n\t          additionalWidth = width * 0.1;\n\t          additionalHeight = height * 0.1;\n\t        }\n\t      }\n\t      if (shouldRedraw) {\n\t        if (shouldResizeCanvas) {\n\t          canvas.width = Math.ceil(width + additionalWidth);\n\t          canvas.height = Math.ceil(height + additionalHeight);\n\t        }\n\t        else {\n\t          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n\t          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n\t        }\n\t        drawingWidth = dims.x * zoomX / 2;\n\t        drawingHeight = dims.y * zoomY / 2;\n\t        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n\t        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n\t        this.cacheWidth = width;\n\t        this.cacheHeight = height;\n\t        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n\t        this._cacheContext.scale(zoomX, zoomY);\n\t        this.zoomX = zoomX;\n\t        this.zoomY = zoomY;\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets object's properties from options\n\t     * @param {Object} [options] Options object\n\t     */\n\t    setOptions: function(options) {\n\t      this._setOptions(options);\n\t      this._initGradient(options.fill, 'fill');\n\t      this._initGradient(options.stroke, 'stroke');\n\t      this._initClipping(options);\n\t      this._initPattern(options.fill, 'fill');\n\t      this._initPattern(options.stroke, 'stroke');\n\t    },\n\t\n\t    /**\n\t     * Transforms context when rendering an object\n\t     * @param {CanvasRenderingContext2D} ctx Context\n\t     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n\t     */\n\t    transform: function(ctx, fromLeft) {\n\t      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n\t        this.group.transform(ctx);\n\t      }\n\t      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n\t      ctx.translate(center.x, center.y);\n\t      this.angle && ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.scale(\n\t        this.scaleX * (this.flipX ? -1 : 1),\n\t        this.scaleY * (this.flipY ? -1 : 1)\n\t      );\n\t      this.skewX && ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n\t      this.skewY && ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns an object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          object = {\n\t            type:                     this.type,\n\t            originX:                  this.originX,\n\t            originY:                  this.originY,\n\t            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n\t            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n\t            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n\t            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n\t            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n\t            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n\t            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n\t            strokeLineCap:            this.strokeLineCap,\n\t            strokeLineJoin:           this.strokeLineJoin,\n\t            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n\t            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n\t            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n\t            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n\t            flipX:                    this.flipX,\n\t            flipY:                    this.flipY,\n\t            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n\t            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n\t            visible:                  this.visible,\n\t            clipTo:                   this.clipTo && String(this.clipTo),\n\t            backgroundColor:          this.backgroundColor,\n\t            fillRule:                 this.fillRule,\n\t            globalCompositeOperation: this.globalCompositeOperation,\n\t            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n\t            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n\t            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n\t          };\n\t\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      if (!this.includeDefaultValues) {\n\t        object = this._removeDefaultValues(object);\n\t      }\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns (dataless) object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      // will be overwritten by subclasses\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _removeDefaultValues: function(object) {\n\t      var prototype = fabric.util.getKlass(object.type).prototype,\n\t          stateProperties = prototype.stateProperties;\n\t      stateProperties.forEach(function(prop) {\n\t        if (object[prop] === prototype[prop]) {\n\t          delete object[prop];\n\t        }\n\t        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n\t                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\t\n\t        // basically a check for [] === []\n\t        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n\t          delete object[prop];\n\t        }\n\t      });\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.' + capitalize(this.type) + '>';\n\t    },\n\t\n\t    /**\n\t     * Return the object scale factor counting also the group scaling\n\t     * @return {Object} object with scaleX and scaleY properties\n\t     */\n\t    getObjectScaling: function() {\n\t      var scaleX = this.scaleX, scaleY = this.scaleY;\n\t      if (this.group) {\n\t        var scaling = this.group.getObjectScaling();\n\t        scaleX *= scaling.scaleX;\n\t        scaleY *= scaling.scaleY;\n\t      }\n\t      return { scaleX: scaleX, scaleY: scaleY };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n\t          isChanged = this[key] !== value;\n\t\n\t      if (shouldConstrainValue) {\n\t        value = this._constrainScale(value);\n\t      }\n\t      if (key === 'scaleX' && value < 0) {\n\t        this.flipX = !this.flipX;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'scaleY' && value < 0) {\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n\t        value = new fabric.Shadow(value);\n\t      }\n\t      else if (key === 'dirty' && this.group) {\n\t        this.group.set('dirty', value);\n\t      }\n\t\n\t      this[key] = value;\n\t\n\t      if (isChanged && this.cacheProperties.indexOf(key) > -1) {\n\t        if (this.group) {\n\t          this.group.set('dirty', true);\n\t        }\n\t        this.dirty = true;\n\t      }\n\t\n\t      if (isChanged && this.group && this.stateProperties.indexOf(key) > -1) {\n\t        this.group.set('dirty', true);\n\t      }\n\t\n\t      if (key === 'width' || key === 'height') {\n\t        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * This callback function is called by the parent group of an object every\n\t     * time a non-delegated property changes on the group. It is passed the key\n\t     * and value as parameters. Not adding in this function's signature to avoid\n\t     * Travis build error about unused variables.\n\t     */\n\t    setOnGroup: function() {\n\t      // implemented by sub-classes, as needed.\n\t    },\n\t\n\t    /**\n\t     * Sets sourcePath of an object\n\t     * @param {String} value Value to set sourcePath to\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setSourcePath: function(value) {\n\t      this.sourcePath = value;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Retrieves viewportTransform from Object's canvas if possible\n\t     * @method getViewportTransform\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean}\n\t     */\n\t    getViewportTransform: function() {\n\t      if (this.canvas && this.canvas.viewportTransform) {\n\t        return this.canvas.viewportTransform;\n\t      }\n\t      return fabric.iMatrix.concat();\n\t    },\n\t\n\t    /*\n\t     * @private\n\t     * return if the object would be visible in rendering\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean}\n\t     */\n\t    isNotVisible: function() {\n\t      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n\t    },\n\t\n\t    /**\n\t     * Renders an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if width/height are zeros or object is not visible\n\t      if (this.isNotVisible()) {\n\t        return;\n\t      }\n\t      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n\t        return;\n\t      }\n\t      ctx.save();\n\t      //setup fill rule for current object\n\t      this._setupCompositeOperation(ctx);\n\t      this.drawSelectionBackground(ctx);\n\t      if (!noTransform) {\n\t        this.transform(ctx);\n\t      }\n\t      this._setOpacity(ctx);\n\t      this._setShadow(ctx);\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      if (this.shouldCache(noTransform)) {\n\t        if (!this._cacheCanvas) {\n\t          this._createCacheCanvas();\n\t        }\n\t        if (this.isCacheDirty(noTransform)) {\n\t          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n\t          this.drawObject(this._cacheContext, noTransform);\n\t          this.dirty = false;\n\t        }\n\t        this.drawCacheOnCanvas(ctx);\n\t      }\n\t      else {\n\t        this._removeCacheCanvas();\n\t        this.dirty = false;\n\t        this.drawObject(ctx, noTransform);\n\t        if (noTransform && this.objectCaching && this.statefullCache) {\n\t          this.saveState({ propertySet: 'cacheProperties' });\n\t        }\n\t      }\n\t      this.clipTo && ctx.restore();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Remove cacheCanvas and its dimensions from the objects\n\t     */\n\t    _removeCacheCanvas: function() {\n\t      this._cacheCanvas = null;\n\t      this.cacheWidth = 0;\n\t      this.cacheHeight = 0;\n\t    },\n\t\n\t    /**\n\t     * When set to `true`, force the object to have its own cache, even if it is inside a group\n\t     * it may be needed when your object behave in a particular way on the cache and always needs\n\t     * its own isolated canvas to render correctly.\n\t     * This function is created to be subclassed by custom classes.\n\t     * since 1.7.12\n\t     * @type function\n\t     * @return false\n\t     */\n\t    needsItsOwnCache: function() {\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Decide if the object should cache or not.\n\t     * objectCaching is a global flag, wins over everything\n\t     * needsItsOwnCache should be used when the object drawing method requires\n\t     * a cache step. None of the fabric classes requires it.\n\t     * Generally you do not cache objects in groups because the group outside is cached.\n\t     * @param {Boolean} noTransform if rendereing in pathGroup, caching is not supported at object level\n\t     * @return {Boolean}\n\t     */\n\t    shouldCache: function(noTransform) {\n\t      return !noTransform && this.objectCaching &&\n\t      (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n\t    },\n\t\n\t    /**\n\t     * Check if this object or a child object will cast a shadow\n\t     * used by Group.shouldCache to know if child has a shadow recursively\n\t     * @return {Boolean}\n\t     */\n\t    willDrawShadow: function() {\n\t      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx, noTransform) {\n\t      this._renderBackground(ctx);\n\t      this._setStrokeStyles(ctx);\n\t      this._setFillStyles(ctx);\n\t      this._render(ctx, noTransform);\n\t    },\n\t\n\t    /**\n\t     * Paint the cached copy of the object on the target context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    drawCacheOnCanvas: function(ctx) {\n\t      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n\t      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n\t     * on parent canvas.\n\t     */\n\t    isCacheDirty: function(skipCanvas) {\n\t      if (this.isNotVisible()) {\n\t        return false;\n\t      }\n\t      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n\t        // in this case the context is already cleared.\n\t        return true;\n\t      }\n\t      else {\n\t        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n\t          if (this._cacheCanvas && !skipCanvas) {\n\t            var width = this.cacheWidth / this.zoomX;\n\t            var height = this.cacheHeight / this.zoomY;\n\t            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n\t          }\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Draws a background for the object big as its untrasformed dimensions\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      if (!this.backgroundColor) {\n\t        return;\n\t      }\n\t      var dim = this._getNonTransformedDimensions();\n\t      ctx.fillStyle = this.backgroundColor;\n\t\n\t      ctx.fillRect(\n\t        -dim.x / 2,\n\t        -dim.y / 2,\n\t        dim.x,\n\t        dim.y\n\t      );\n\t      // if there is background color no other shadows\n\t      // should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setOpacity: function(ctx) {\n\t      ctx.globalAlpha *= this.opacity;\n\t    },\n\t\n\t    _setStrokeStyles: function(ctx) {\n\t      if (this.stroke) {\n\t        ctx.lineWidth = this.strokeWidth;\n\t        ctx.lineCap = this.strokeLineCap;\n\t        ctx.lineJoin = this.strokeLineJoin;\n\t        ctx.miterLimit = this.strokeMiterLimit;\n\t        ctx.strokeStyle = this.stroke.toLive\n\t          ? this.stroke.toLive(ctx, this)\n\t          : this.stroke;\n\t      }\n\t    },\n\t\n\t    _setFillStyles: function(ctx) {\n\t      if (this.fill) {\n\t        ctx.fillStyle = this.fill.toLive\n\t          ? this.fill.toLive(ctx, this)\n\t          : this.fill;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * Sets line dash\n\t     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n\t     * @param {Array} dashArray array representing dashes\n\t     * @param {Function} alternative function to call if browaser does not support lineDash\n\t     */\n\t    _setLineDash: function(ctx, dashArray, alternative) {\n\t      if (!dashArray) {\n\t        return;\n\t      }\n\t      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\t      if (1 & dashArray.length) {\n\t        dashArray.push.apply(dashArray, dashArray);\n\t      }\n\t      if (supportsLineDash) {\n\t        ctx.setLineDash(dashArray);\n\t      }\n\t      else {\n\t        alternative && alternative(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderControls: function(ctx) {\n\t      if (!this.active || (this.group && this.group !== this.canvas.getActiveGroup())) {\n\t        return;\n\t      }\n\t\n\t      var vpt = this.getViewportTransform(),\n\t          matrix = this.calcTransformMatrix(),\n\t          options;\n\t      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n\t      options = fabric.util.qrDecompose(matrix);\n\t\n\t      ctx.save();\n\t      ctx.translate(options.translateX, options.translateY);\n\t      ctx.lineWidth = 1 * this.borderScaleFactor;\n\t      if (!this.group) {\n\t        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t      }\n\t      if (this.group && this.group === this.canvas.getActiveGroup()) {\n\t        ctx.rotate(degreesToRadians(options.angle));\n\t        this.drawBordersInGroup(ctx, options);\n\t      }\n\t      else {\n\t        ctx.rotate(degreesToRadians(this.angle));\n\t        this.drawBorders(ctx);\n\t      }\n\t      this.drawControls(ctx);\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n\t          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n\t          scaling = this.getObjectScaling();\n\t      if (this.canvas && this.canvas._isRetinaScaling()) {\n\t        multX *= fabric.devicePixelRatio;\n\t        multY *= fabric.devicePixelRatio;\n\t      }\n\t      ctx.shadowColor = this.shadow.color;\n\t      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n\t      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n\t      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _removeShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      ctx.shadowColor = '';\n\t      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Object} filler fabric.Pattern or fabric.Gradient\n\t     */\n\t    _applyPatternGradientTransform: function(ctx, filler) {\n\t      if (!filler.toLive) {\n\t        return;\n\t      }\n\t      var transform = filler.gradientTransform || filler.patternTransform;\n\t      if (transform) {\n\t        ctx.transform.apply(ctx, transform);\n\t      }\n\t      var offsetX = -this.width / 2 + filler.offsetX || 0,\n\t          offsetY = -this.height / 2 + filler.offsetY || 0;\n\t      ctx.translate(offsetX, offsetY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderFill: function(ctx) {\n\t      if (!this.fill) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      this._applyPatternGradientTransform(ctx, this.fill);\n\t      if (this.fillRule === 'evenodd') {\n\t        ctx.fill('evenodd');\n\t      }\n\t      else {\n\t        ctx.fill();\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderStroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n\t      this._applyPatternGradientTransform(ctx, this.stroke);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Clones an instance, some objects are async, so using callback method will work for every object.\n\t     * Using the direct return does not work for images and groups.\n\t     * @param {Function} callback Callback is invoked with a clone as a first argument\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {fabric.Object} clone of an instance\n\t     */\n\t    clone: function(callback, propertiesToInclude) {\n\t      if (this.constructor.fromObject) {\n\t        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n\t      }\n\t      return new fabric.Object(this.toObject(propertiesToInclude));\n\t    },\n\t\n\t    /**\n\t     * Creates an instance of fabric.Image out of an object\n\t     * @param {Function} callback callback, invoked with an instance as a first argument\n\t     * @param {Object} [options] for clone as image, passed to toDataURL\n\t     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    cloneAsImage: function(callback, options) {\n\t      var dataUrl = this.toDataURL(options);\n\t      fabric.util.loadImage(dataUrl, function(img) {\n\t        if (callback) {\n\t          callback(new fabric.Image(img));\n\t        }\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Converts an object into a data-url-like string\n\t     * @param {Object} options Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     */\n\t    toDataURL: function(options) {\n\t      options || (options = { });\n\t\n\t      var el = fabric.util.createCanvasElement(),\n\t          boundingRect = this.getBoundingRect();\n\t\n\t      el.width = boundingRect.width;\n\t      el.height = boundingRect.height;\n\t      fabric.util.wrapElement(el, 'div');\n\t      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (options.format === 'jpg') {\n\t        options.format = 'jpeg';\n\t      }\n\t\n\t      if (options.format === 'jpeg') {\n\t        canvas.backgroundColor = '#fff';\n\t      }\n\t\n\t      var origParams = {\n\t        active: this.get('active'),\n\t        left: this.getLeft(),\n\t        top: this.getTop()\n\t      };\n\t\n\t      this.set('active', false);\n\t      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\t\n\t      var originalCanvas = this.canvas;\n\t      canvas.add(this);\n\t      var data = canvas.toDataURL(options);\n\t\n\t      this.set(origParams).setCoords();\n\t      this.canvas = originalCanvas;\n\t\n\t      canvas.dispose();\n\t      canvas = null;\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Returns true if specified type is identical to the type of an instance\n\t     * @param {String} type Type to check against\n\t     * @return {Boolean}\n\t     */\n\t    isType: function(type) {\n\t      return this.type === type;\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance (is 1 unless subclassed)\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    },\n\t\n\t    /**\n\t     * Returns a JSON representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} JSON\n\t     */\n\t    toJSON: function(propertiesToInclude) {\n\t      // delegate, not alias\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Sets gradient (fill or stroke) of an object\n\t     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n\t     * @param {String} property Property name 'stroke' or 'fill'\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n\t     * @param {Number} [options.x1=0] x-coordinate of start point\n\t     * @param {Number} [options.y1=0] y-coordinate of start point\n\t     * @param {Number} [options.x2=0] x-coordinate of end point\n\t     * @param {Number} [options.y2=0] y-coordinate of end point\n\t     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n\t     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n\t     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n\t     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n\t     * @example <caption>Set linear gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'linear',\n\t     *   x1: -object.width / 2,\n\t     *   y1: 0,\n\t     *   x2: object.width / 2,\n\t     *   y2: 0,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     * @example <caption>Set radial gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'radial',\n\t     *   x1: 0,\n\t     *   y1: 0,\n\t     *   x2: 0,\n\t     *   y2: 0,\n\t     *   r1: object.width / 2,\n\t     *   r2: 10,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setGradient: function(property, options) {\n\t      options || (options = { });\n\t\n\t      var gradient = { colorStops: [] };\n\t\n\t      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n\t      gradient.coords = {\n\t        x1: options.x1,\n\t        y1: options.y1,\n\t        x2: options.x2,\n\t        y2: options.y2\n\t      };\n\t\n\t      if (options.r1 || options.r2) {\n\t        gradient.coords.r1 = options.r1;\n\t        gradient.coords.r2 = options.r2;\n\t      }\n\t\n\t      gradient.gradientTransform = options.gradientTransform;\n\t      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\t\n\t      return this.set(property, fabric.Gradient.forObject(this, gradient));\n\t    },\n\t\n\t    /**\n\t     * Sets pattern fill of an object\n\t     * @param {Object} options Options object\n\t     * @param {(String|HTMLImageElement)} options.source Pattern source\n\t     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n\t     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n\t     * @example <caption>Set pattern</caption>\n\t     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n\t     *   object.setPatternFill({\n\t     *     source: img,\n\t     *     repeat: 'repeat'\n\t     *   });\n\t     *   canvas.renderAll();\n\t     * });\n\t     */\n\t    setPatternFill: function(options) {\n\t      return this.set('fill', new fabric.Pattern(options));\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.Object#shadow|shadow} of an object\n\t     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n\t     * @param {Number} [options.blur=0] Shadow blur\n\t     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n\t     * @param {Number} [options.offsetY=0] Shadow vertical offset\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n\t     * @example <caption>Set shadow with string notation</caption>\n\t     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n\t     * canvas.renderAll();\n\t     * @example <caption>Set shadow with object notation</caption>\n\t     * object.setShadow({\n\t     *   color: 'red',\n\t     *   blur: 10,\n\t     *   offsetX: 20,\n\t     *   offsetY: 20\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setShadow: function(options) {\n\t      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n\t    },\n\t\n\t    /**\n\t     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n\t     * @param {String} color Color value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setColor: function(color) {\n\t      this.set('fill', color);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets \"angle\" of an instance\n\t     * @param {Number} angle Angle value (in degrees)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setAngle: function(angle) {\n\t      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._setOriginToCenter();\n\t      }\n\t\n\t      this.set('angle', angle);\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._resetOrigin();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerH: function () {\n\t      this.canvas && this.canvas.centerObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterH: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerV: function () {\n\t      this.canvas && this.canvas.centerObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterV: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally on canvas to which is was added last\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    center: function () {\n\t      this.canvas && this.canvas.centerObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenter: function () {\n\t      this.canvas && this.canvas.viewportCenterObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Removes object from canvas to which it was added last\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    remove: function() {\n\t      if (this.canvas) {\n\t        if (this.group && this.group === this.canvas._activeGroup) {\n\t          this.group.remove(this);\n\t        }\n\t        this.canvas.remove(this);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a pointer relative to an object\n\t     * @param {Event} e Event to operate upon\n\t     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n\t     * @return {Object} Coordinates of a pointer (x, y)\n\t     */\n\t    getLocalPointer: function(e, pointer) {\n\t      pointer = pointer || this.canvas.getPointer(e);\n\t      var pClicked = new fabric.Point(pointer.x, pointer.y),\n\t          objectLeftTop = this._getLeftTopCoords();\n\t      if (this.angle) {\n\t        pClicked = fabric.util.rotatePoint(\n\t          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n\t      }\n\t      return {\n\t        x: pClicked.x - objectLeftTop.x,\n\t        y: pClicked.y - objectLeftTop.y\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Sets canvas globalCompositeOperation for specific object\n\t     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n\t     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n\t     */\n\t    _setupCompositeOperation: function (ctx) {\n\t      if (this.globalCompositeOperation) {\n\t        ctx.globalCompositeOperation = this.globalCompositeOperation;\n\t      }\n\t    }\n\t  });\n\t\n\t  fabric.util.createAccessors(fabric.Object);\n\t\n\t  /**\n\t   * Alias for {@link fabric.Object.prototype.setAngle}\n\t   * @alias rotate -> setAngle\n\t   * @memberOf fabric.Object\n\t   */\n\t  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\t\n\t  extend(fabric.Object.prototype, fabric.Observable);\n\t\n\t  /**\n\t   * Defines the number of fraction digits to use when serializing object values.\n\t   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @constant\n\t   * @type Number\n\t   */\n\t  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\t\n\t  fabric.Object._fromObject = function(className, object, callback, forceAsync, extraParam) {\n\t    var klass = fabric[className];\n\t    object = clone(object, true);\n\t    if (forceAsync) {\n\t      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n\t        if (typeof patterns[0] !== 'undefined') {\n\t          object.fill = patterns[0];\n\t        }\n\t        if (typeof patterns[1] !== 'undefined') {\n\t          object.stroke = patterns[1];\n\t        }\n\t        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n\t        callback && callback(instance);\n\t      });\n\t    }\n\t    else {\n\t      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n\t      callback && callback(instance);\n\t      return instance;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unique id used internally when creating SVG elements\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @type Number\n\t   */\n\t  fabric.Object.__uid = 0;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      originXOffset = {\n\t        left: -0.5,\n\t        center: 0,\n\t        right: 0.5\n\t      },\n\t      originYOffset = {\n\t        top: -0.5,\n\t        center: 0,\n\t        bottom: 0.5\n\t      };\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n\t      var x = point.x,\n\t          y = point.y,\n\t          offsetX, offsetY, dim;\n\t\n\t      if (typeof fromOriginX === 'string') {\n\t        fromOriginX = originXOffset[fromOriginX];\n\t      }\n\t      else {\n\t        fromOriginX -= 0.5;\n\t      }\n\t\n\t      if (typeof toOriginX === 'string') {\n\t        toOriginX = originXOffset[toOriginX];\n\t      }\n\t      else {\n\t        toOriginX -= 0.5;\n\t      }\n\t\n\t      offsetX = toOriginX - fromOriginX;\n\t\n\t      if (typeof fromOriginY === 'string') {\n\t        fromOriginY = originYOffset[fromOriginY];\n\t      }\n\t      else {\n\t        fromOriginY -= 0.5;\n\t      }\n\t\n\t      if (typeof toOriginY === 'string') {\n\t        toOriginY = originYOffset[toOriginY];\n\t      }\n\t      else {\n\t        toOriginY -= 0.5;\n\t      }\n\t\n\t      offsetY = toOriginY - fromOriginY;\n\t\n\t      if (offsetX || offsetY) {\n\t        dim = this._getTransformedDimensions();\n\t        x = point.x + offsetX * dim.x;\n\t        y = point.y + offsetY * dim.y;\n\t      }\n\t\n\t      return new fabric.Point(x, y);\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToCenterPoint: function(point, originX, originY) {\n\t      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} center The point which corresponds to center of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToOriginPoint: function(center, originX, originY) {\n\t      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Returns the real center coordinates of the object\n\t     * @return {fabric.Point}\n\t     */\n\t    getCenterPoint: function() {\n\t      var leftTop = new fabric.Point(this.left, this.top);\n\t      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the coordinates of the object based on center coordinates\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @return {fabric.Point}\n\t     */\n\t    // getOriginPoint: function(center) {\n\t    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n\t    // },\n\t\n\t    /**\n\t     * Returns the coordinates of the object as if it has a different origin\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    getPointByOrigin: function(originX, originY) {\n\t      var center = this.getCenterPoint();\n\t      return this.translateToOriginPoint(center, originX, originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in local coordinates\n\t     * @param {fabric.Point} point The point relative to the global coordinate system\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    toLocalPoint: function(point, originX, originY) {\n\t      var center = this.getCenterPoint(),\n\t          p, p2;\n\t\n\t      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n\t        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      }\n\t      else {\n\t        p = new fabric.Point(this.left, this.top);\n\t      }\n\t\n\t      p2 = new fabric.Point(point.x, point.y);\n\t      if (this.angle) {\n\t        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n\t      }\n\t      return p2.subtractEquals(p);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in global coordinates\n\t     * @param {fabric.Point} The point relative to the local coordinate system\n\t     * @return {fabric.Point}\n\t     */\n\t    // toGlobalPoint: function(point) {\n\t    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n\t    // },\n\t\n\t    /**\n\t     * Sets the position of the object taking into consideration the object's origin\n\t     * @param {fabric.Point} pos The new position of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {void}\n\t     */\n\t    setPositionByOrigin: function(pos, originX, originY) {\n\t      var center = this.translateToCenterPoint(pos, originX, originY),\n\t          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\t\n\t      this.set('left', position.x);\n\t      this.set('top', position.y);\n\t    },\n\t\n\t    /**\n\t     * @param {String} to One of 'left', 'center', 'right'\n\t     */\n\t    adjustPosition: function(to) {\n\t      var angle = degreesToRadians(this.angle),\n\t          hypotFull = this.getWidth(),\n\t          xFull = Math.cos(angle) * hypotFull,\n\t          yFull = Math.sin(angle) * hypotFull,\n\t          offsetFrom, offsetTo;\n\t\n\t      //TODO: this function does not consider mixed situation like top, center.\n\t      if (typeof this.originX === 'string') {\n\t        offsetFrom = originXOffset[this.originX];\n\t      }\n\t      else {\n\t        offsetFrom = this.originX - 0.5;\n\t      }\n\t      if (typeof to === 'string') {\n\t        offsetTo = originXOffset[to];\n\t      }\n\t      else {\n\t        offsetTo = to - 0.5;\n\t      }\n\t      this.left += xFull * (offsetTo - offsetFrom);\n\t      this.top += yFull * (offsetTo - offsetFrom);\n\t      this.setCoords();\n\t      this.originX = to;\n\t    },\n\t\n\t    /**\n\t     * Sets the origin/position of the object to it's center point\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _setOriginToCenter: function() {\n\t      this._originalOriginX = this.originX;\n\t      this._originalOriginY = this.originY;\n\t\n\t      var center = this.getCenterPoint();\n\t\n\t      this.originX = 'center';\n\t      this.originY = 'center';\n\t\n\t      this.left = center.x;\n\t      this.top = center.y;\n\t    },\n\t\n\t    /**\n\t     * Resets the origin/position of the object to it's original origin\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _resetOrigin: function() {\n\t      var originPoint = this.translateToOriginPoint(\n\t        this.getCenterPoint(),\n\t        this._originalOriginX,\n\t        this._originalOriginY);\n\t\n\t      this.originX = this._originalOriginX;\n\t      this.originY = this._originalOriginY;\n\t\n\t      this.left = originPoint.x;\n\t      this.top = originPoint.y;\n\t\n\t      this._originalOriginX = null;\n\t      this._originalOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getLeftTopCoords: function() {\n\t      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n\t    },\n\t\n\t    /**\n\t    * Callback; invoked right before object is about to go from active to inactive\n\t    */\n\t    onDeselect: function() {\n\t      /* NOOP */\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function getCoords(coords) {\n\t    return [\n\t      new fabric.Point(coords.tl.x, coords.tl.y),\n\t      new fabric.Point(coords.tr.x, coords.tr.y),\n\t      new fabric.Point(coords.br.x, coords.br.y),\n\t      new fabric.Point(coords.bl.x, coords.bl.y)\n\t    ];\n\t  }\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Describe object's corner position in canvas element coordinates.\n\t     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n\t     * each property is an object with x, y and corner.\n\t     * The `corner` property contains in a similar manner the 4 points of the\n\t     * interactive area of the corner.\n\t     * The coordinates depends from this properties: width, height, scaleX, scaleY\n\t     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n\t     * The coordinates get updated with @method setCoords.\n\t     * You can calculate them without updating with @method calcCoords;\n\t     * @memberOf fabric.Object.prototype\n\t     */\n\t    oCoords: null,\n\t\n\t    /**\n\t     * Describe object's corner position in canvas object absolute coordinates\n\t     * properties are tl,tr,bl,br and describe the four main corner.\n\t     * each property is an object with x, y, instance of Fabric.Point.\n\t     * The coordinates depends from this properties: width, height, scaleX, scaleY\n\t     * skewX, skewY, angle, strokeWidth, top, left.\n\t     * Those coordinates are usefull to understand where an object is. They get updated\n\t     * with oCoords but they do not need to be updated when zoom or panning change.\n\t     * The coordinates get updated with @method setCoords.\n\t     * You can calculate them without updating with @method calcCoords(true);\n\t     * @memberOf fabric.Object.prototype\n\t     */\n\t    aCoords: null,\n\t\n\t    /**\n\t     * return correct set of coordinates for intersection\n\t     */\n\t    getCoords: function(absolute, calculate) {\n\t      if (!this.oCoords) {\n\t        this.setCoords();\n\t      }\n\t      var coords = absolute ? this.aCoords : this.oCoords;\n\t      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n\t    },\n\t\n\t    /**\n\t     * Checks if object intersects with an area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if object intersects with an area formed by 2 points\n\t     */\n\t    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n\t      var coords = this.getCoords(absolute, calculate),\n\t          intersection = fabric.Intersection.intersectPolygonRectangle(\n\t            coords,\n\t            pointTL,\n\t            pointBR\n\t          );\n\t      return intersection.status === 'Intersection';\n\t    },\n\t\n\t    /**\n\t     * Checks if object intersects with another object\n\t     * @param {Object} other Object to test\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if object intersects with another object\n\t     */\n\t    intersectsWithObject: function(other, absolute, calculate) {\n\t      var intersection = fabric.Intersection.intersectPolygonPolygon(\n\t            this.getCoords(absolute, calculate),\n\t            other.getCoords(absolute, calculate)\n\t          );\n\t\n\t      return intersection.status === 'Intersection'\n\t        || other.isContainedWithinObject(this, absolute, calculate)\n\t        || this.isContainedWithinObject(other, absolute, calculate);\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area of another object\n\t     * @param {Object} other Object to test\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if object is fully contained within area of another object\n\t     */\n\t    isContainedWithinObject: function(other, absolute, calculate) {\n\t      var points = this.getCoords(absolute, calculate),\n\t          i = 0, lines = other._getImageLines(\n\t            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n\t          );\n\t      for (; i < 4; i++) {\n\t        if (!other.containsPoint(points[i], lines)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if object is fully contained within area formed by 2 points\n\t     */\n\t    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n\t      var boundingRect = this.getBoundingRect(absolute, calculate);\n\t\n\t      return (\n\t        boundingRect.left >= pointTL.x &&\n\t        boundingRect.left + boundingRect.width <= pointBR.x &&\n\t        boundingRect.top >= pointTL.y &&\n\t        boundingRect.top + boundingRect.height <= pointBR.y\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Checks if point is inside the object\n\t     * @param {fabric.Point} point Point to check against\n\t     * @param {Object} [lines] object returned from @method _getImageLines\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if point is inside the object\n\t     */\n\t    containsPoint: function(point, lines, absolute, calculate) {\n\t      var lines = lines || this._getImageLines(\n\t        calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n\t      ),\n\t          xPoints = this._findCrossPoints(point, lines);\n\t\n\t      // if xPoints is odd then point is inside the object\n\t      return (xPoints !== 0 && xPoints % 2 === 1);\n\t    },\n\t\n\t    /**\n\t     * Checks if object is contained within the canvas with current viewportTransform\n\t     * the check is done stopping at first point that appear on screen\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if object is fully contained within canvas\n\t     */\n\t    isOnScreen: function(calculate) {\n\t      if (!this.canvas) {\n\t        return false;\n\t      }\n\t      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n\t      var points = this.getCoords(true, calculate), point;\n\t      for (var i = 0; i < 4; i++) {\n\t        point = points[i];\n\t        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n\t          return true;\n\t        }\n\t      }\n\t      // no points on screen, check intersection with absolute coordinates\n\t      if (this.intersectsWithRect(pointTL, pointBR, true)) {\n\t        return true;\n\t      }\n\t      // worst case scenario the object is so big that contanins the screen\n\t      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n\t      if (this.containsPoint(centerPoint, null, true)) {\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Method that returns an object with the object edges in it, given the coordinates of the corners\n\t     * @private\n\t     * @param {Object} oCoords Coordinates of the object corners\n\t     */\n\t    _getImageLines: function(oCoords) {\n\t      return {\n\t        topline: {\n\t          o: oCoords.tl,\n\t          d: oCoords.tr\n\t        },\n\t        rightline: {\n\t          o: oCoords.tr,\n\t          d: oCoords.br\n\t        },\n\t        bottomline: {\n\t          o: oCoords.br,\n\t          d: oCoords.bl\n\t        },\n\t        leftline: {\n\t          o: oCoords.bl,\n\t          d: oCoords.tl\n\t        }\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Helper method to determine how many cross points are between the 4 object edges\n\t     * and the horizontal line determined by a point on canvas\n\t     * @private\n\t     * @param {fabric.Point} point Point to check\n\t     * @param {Object} lines Coordinates of the object being evaluated\n\t     */\n\t     // remove yi, not used but left code here just in case.\n\t    _findCrossPoints: function(point, lines) {\n\t      var b1, b2, a1, a2, xi, // yi,\n\t          xcount = 0,\n\t          iLine;\n\t\n\t      for (var lineKey in lines) {\n\t        iLine = lines[lineKey];\n\t        // optimisation 1: line below point. no cross\n\t        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 2: line above point. no cross\n\t        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 3: vertical line case\n\t        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n\t          xi = iLine.o.x;\n\t          // yi = point.y;\n\t        }\n\t        // calculate the intersection point\n\t        else {\n\t          b1 = 0;\n\t          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n\t          a1 = point.y - b1 * point.x;\n\t          a2 = iLine.o.y - b2 * iLine.o.x;\n\t\n\t          xi = -(a1 - a2) / (b1 - b2);\n\t          // yi = a1 + b1 * xi;\n\t        }\n\t        // dont count xi < point.x cases\n\t        if (xi >= point.x) {\n\t          xcount += 1;\n\t        }\n\t        // optimisation 4: specific for square images\n\t        if (xcount === 2) {\n\t          break;\n\t        }\n\t      }\n\t      return xcount;\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} width value\n\t     */\n\t    getBoundingRectWidth: function() {\n\t      return this.getBoundingRect().width;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} height value\n\t     */\n\t    getBoundingRectHeight: function() {\n\t      return this.getBoundingRect().height;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n\t     * the box is intented as aligned to axis of canvas.\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    getBoundingRect: function(absolute, calculate) {\n\t      var coords = this.getCoords(absolute, calculate);\n\t      return fabric.util.makeBoundingBoxFromPoints(coords);\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object bounding box counting transformations\n\t     * @return {Number} width value\n\t     */\n\t    getWidth: function() {\n\t      return this._getTransformedDimensions().x;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object bounding box counting transformations\n\t     * to be renamed in 2.0\n\t     * @return {Number} height value\n\t     */\n\t    getHeight: function() {\n\t      return this._getTransformedDimensions().y;\n\t    },\n\t\n\t    /**\n\t     * Makes sure the scale is valid and modifies it if necessary\n\t     * @private\n\t     * @param {Number} value\n\t     * @return {Number}\n\t     */\n\t    _constrainScale: function(value) {\n\t      if (Math.abs(value) < this.minScaleLimit) {\n\t        if (value < 0) {\n\t          return -this.minScaleLimit;\n\t        }\n\t        else {\n\t          return this.minScaleLimit;\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t\n\t    /**\n\t     * Scales an object (equally by x and y)\n\t     * @param {Number} value Scale factor\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scale: function(value) {\n\t      value = this._constrainScale(value);\n\t\n\t      if (value < 0) {\n\t        this.flipX = !this.flipX;\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t\n\t      this.scaleX = value;\n\t      this.scaleY = value;\n\t      return this.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New width value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToWidth: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n\t      return this.scale(value / this.width / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New height value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToHeight: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n\t      return this.scale(value / this.height / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Calculate and returns the .coords of an object.\n\t     * @return {Object} Object with tl, tr, br, bl ....\n\t     * @chainable\n\t     */\n\t    calcCoords: function(absolute) {\n\t      var theta = degreesToRadians(this.angle),\n\t          vpt = this.getViewportTransform(),\n\t          dim = absolute ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n\t          currentWidth = dim.x, currentHeight = dim.y,\n\t          sinTh = Math.sin(theta),\n\t          cosTh = Math.cos(theta),\n\t          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n\t          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n\t          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n\t          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n\t          center = this.getCenterPoint(),\n\t          // offset added for rotate and scale actions\n\t          coords = absolute ? center : fabric.util.transformPoint(center, vpt),\n\t          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n\t          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n\t          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n\t          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n\t      if (!absolute) {\n\t        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n\t            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n\t            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n\t            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n\t            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n\t      }\n\t\n\t      // debugging\n\t\n\t      /* setTimeout(function() {\n\t         canvas.contextTop.fillStyle = 'green';\n\t         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n\t         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n\t         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n\t         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n\t         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n\t         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n\t         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n\t         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n\t         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n\t       }, 50); */\n\t\n\t      var coords = {\n\t        // corners\n\t        tl: tl, tr: tr, br: br, bl: bl,\n\t      };\n\t      if (!absolute) {\n\t        // middle\n\t        coords.ml = ml;\n\t        coords.mt = mt;\n\t        coords.mr = mr;\n\t        coords.mb = mb;\n\t        // rotating point\n\t        coords.mtr = mtr;\n\t      }\n\t      return coords;\n\t    },\n\t\n\t    /**\n\t     * Sets corner position coordinates based on current angle, width and height\n\t     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n\t     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n\t     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setCoords: function(ignoreZoom, skipAbsolute) {\n\t      this.oCoords = this.calcCoords(ignoreZoom);\n\t      if (!skipAbsolute) {\n\t        this.aCoords = this.calcCoords(true);\n\t      }\n\t\n\t      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\t      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * calculate rotation matrix of an object\n\t     * @return {Array} rotation matrix for the object\n\t     */\n\t    _calcRotateMatrix: function() {\n\t      if (this.angle) {\n\t        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n\t        // trying to keep rounding error small, ugly but it works.\n\t        if (cos === 6.123233995736766e-17 || cos === -1.8369701987210297e-16) {\n\t          cos = 0;\n\t        }\n\t        return [cos, sin, -sin, cos, 0, 0];\n\t      }\n\t      return fabric.iMatrix.concat();\n\t    },\n\t\n\t    /**\n\t     * calculate trasform Matrix that represent current transformation from\n\t     * object properties.\n\t     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n\t     * @return {Array} matrix Transform Matrix for the object\n\t     */\n\t    calcTransformMatrix: function(skipGroup) {\n\t      var center = this.getCenterPoint(),\n\t          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n\t          rotateMatrix,\n\t          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n\t          matrix;\n\t      if (this.group && !skipGroup) {\n\t        matrix = multiplyMatrices(this.group.calcTransformMatrix(), translateMatrix);\n\t      }\n\t      else {\n\t        matrix = translateMatrix;\n\t      }\n\t      if (this.angle) {\n\t        rotateMatrix = this._calcRotateMatrix();\n\t        matrix = multiplyMatrices(matrix, rotateMatrix);\n\t      }\n\t      matrix = multiplyMatrices(matrix, dimensionMatrix);\n\t      return matrix;\n\t    },\n\t\n\t    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n\t      var skewMatrix,\n\t          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n\t          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n\t          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n\t      if (skewX) {\n\t        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n\t        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n\t      }\n\t      if (skewY) {\n\t        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n\t        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n\t      }\n\t      return scaleMatrix;\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     * @return {Object} .x width dimension\n\t     * @return {Object} .y height dimension\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var strokeWidth = this.strokeWidth,\n\t          w = this.width + strokeWidth,\n\t          h = this.height + strokeWidth;\n\t      return { x: w, y: h };\n\t    },\n\t\n\t    /*\n\t     * Calculate object bounding boxdimensions from its properties scale, skew.\n\t     * @private\n\t     * @return {Object} .x width dimension\n\t     * @return {Object} .y height dimension\n\t     */\n\t    _getTransformedDimensions: function(skewX, skewY) {\n\t      if (typeof skewX === 'undefined') {\n\t        skewX = this.skewX;\n\t      }\n\t      if (typeof skewY === 'undefined') {\n\t        skewY = this.skewY;\n\t      }\n\t      var dimensions = this._getNonTransformedDimensions(),\n\t          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n\t          points = [\n\t            {\n\t              x: -dimX,\n\t              y: -dimY\n\t            },\n\t            {\n\t              x: dimX,\n\t              y: -dimY\n\t            },\n\t            {\n\t              x: -dimX,\n\t              y: dimY\n\t            },\n\t            {\n\t              x: dimX,\n\t              y: dimY\n\t            }],\n\t          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n\t          bbox;\n\t      for (i = 0; i < points.length; i++) {\n\t        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n\t      }\n\t      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n\t      return { x: bbox.width, y: bbox.height };\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions for controls. include padding and canvas zoom\n\t     * private\n\t     */\n\t    _calculateCurrentDimensions: function()  {\n\t      var vpt = this.getViewportTransform(),\n\t          dim = this._getTransformedDimensions(),\n\t          p = fabric.util.transformPoint(dim, vpt, true);\n\t\n\t      return p.scalarAdd(2 * this.padding);\n\t    },\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * Moves an object to the bottom of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendToBack: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.sendToBack(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to the top of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringToFront: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.bringToFront(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object down in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendBackwards: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.sendBackwards(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object up in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringForward: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.bringForward(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to specified level in stack of drawn objects\n\t   * @param {Number} index New position of object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  moveTo: function(index) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n\t    }\n\t    else {\n\t      this.canvas.moveTo(this, index);\n\t    }\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t\n\t  function getSvgColorString(prop, value) {\n\t    if (!value) {\n\t      return prop + ': none; ';\n\t    }\n\t    else if (value.toLive) {\n\t      return prop + ': url(#SVGID_' + value.id + '); ';\n\t    }\n\t    else {\n\t      var color = new fabric.Color(value),\n\t          str = prop + ': ' + color.toRgb() + '; ',\n\t          opacity = color.getAlpha();\n\t      if (opacity !== 1) {\n\t        //change the color in rgb + opacity\n\t        str += prop + '-opacity: ' + opacity.toString() + '; ';\n\t      }\n\t      return str;\n\t    }\n\t  }\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t    /**\n\t     * Returns styles-string for svg-export\n\t     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n\t     * @return {String}\n\t     */\n\t    getSvgStyles: function(skipShadow) {\n\t\n\t      var fillRule = this.fillRule,\n\t          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n\t          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n\t          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n\t          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n\t          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n\t          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n\t          visibility = this.visible ? '' : ' visibility: hidden;',\n\t          filter = skipShadow ? '' : this.getSvgFilter(),\n\t          fill = getSvgColorString('fill', this.fill),\n\t          stroke = getSvgColorString('stroke', this.stroke);\n\t\n\t      return [\n\t        stroke,\n\t        'stroke-width: ', strokeWidth, '; ',\n\t        'stroke-dasharray: ', strokeDashArray, '; ',\n\t        'stroke-linecap: ', strokeLineCap, '; ',\n\t        'stroke-linejoin: ', strokeLineJoin, '; ',\n\t        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n\t        fill,\n\t        'fill-rule: ', fillRule, '; ',\n\t        'opacity: ', opacity, ';',\n\t        filter,\n\t        visibility\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns filter for svg shadow\n\t     * @return {String}\n\t     */\n\t    getSvgFilter: function() {\n\t      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns id attribute for svg output\n\t     * @return {String}\n\t     */\n\t    getSvgId: function() {\n\t      return this.id ? 'id=\"' + this.id + '\" ' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export\n\t     * @return {String}\n\t     */\n\t    getSvgTransform: function() {\n\t      if (this.group && this.group.type === 'path-group') {\n\t        return '';\n\t      }\n\t      var toFixed = fabric.util.toFixed,\n\t          angle = this.getAngle(),\n\t          skewX = (this.getSkewX() % 360),\n\t          skewY = (this.getSkewY() % 360),\n\t          center = this.getCenterPoint(),\n\t\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n\t                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n\t                            ' ' +\n\t                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n\t                          ')',\n\t\n\t          anglePart = angle !== 0\n\t            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n\t            : '',\n\t\n\t          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n\t            ? '' :\n\t            (' scale(' +\n\t              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n\t              ' ' +\n\t              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n\t            ')'),\n\t\n\t          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\t\n\t          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\t\n\t          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\t\n\t          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\t\n\t      return [\n\t        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export from the transform matrix of single elements\n\t     * @return {String}\n\t     */\n\t    getSvgTransformMatrix: function() {\n\t      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createBaseSVGMarkup: function() {\n\t      var markup = [];\n\t\n\t      if (this.fill && this.fill.toLive) {\n\t        markup.push(this.fill.toSVG(this, false));\n\t      }\n\t      if (this.stroke && this.stroke.toLive) {\n\t        markup.push(this.stroke.toSVG(this, false));\n\t      }\n\t      if (this.shadow) {\n\t        markup.push(this.shadow.toSVG(this));\n\t      }\n\t      return markup;\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var extend = fabric.util.object.extend,\n\t      originalSet = 'stateProperties';\n\t\n\t  /*\n\t    Depends on `stateProperties`\n\t  */\n\t  function saveProps(origin, destination, props) {\n\t    var tmpObj = { }, deep = true;\n\t    props.forEach(function(prop) {\n\t      tmpObj[prop] = origin[prop];\n\t    });\n\t    extend(origin[destination], tmpObj, deep);\n\t  }\n\t\n\t  function _isEqual(origValue, currentValue, firstPass) {\n\t    if (origValue === currentValue) {\n\t      // if the objects are identical, return\n\t      return true;\n\t    }\n\t    else if (Array.isArray(origValue)) {\n\t      if (origValue.length !== currentValue.length) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = origValue.length; i < len; i++) {\n\t        if (!_isEqual(origValue[i], currentValue[i])) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t    else if (origValue && typeof origValue === 'object') {\n\t      var keys = Object.keys(origValue), key;\n\t      if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        if (!_isEqual(origValue[key], currentValue[key])) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t  }\n\t\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Returns true if object state (one of its state properties) was changed\n\t     * @param {String} [propertySet] optional name for the set of property we want to save\n\t     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n\t     */\n\t    hasStateChanged: function(propertySet) {\n\t      propertySet = propertySet || originalSet;\n\t      var dashedPropertySet = '_' + propertySet;\n\t      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n\t        return true;\n\t      }\n\t      return !_isEqual(this[dashedPropertySet], this, true);\n\t    },\n\t\n\t    /**\n\t     * Saves state of an object\n\t     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    saveState: function(options) {\n\t      var propertySet = options && options.propertySet || originalSet,\n\t          destination = '_' + propertySet;\n\t      if (!this[destination]) {\n\t        return this.setupState(options);\n\t      }\n\t      saveProps(this, destination, this[propertySet]);\n\t      if (options && options.stateProperties) {\n\t        saveProps(this, destination, options.stateProperties);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Setups state of an object\n\t     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    setupState: function(options) {\n\t      options = options || { };\n\t      var propertySet = options.propertySet || originalSet;\n\t      options.propertySet = propertySet;\n\t      this['_' + propertySet] = { };\n\t      this.saveState(options);\n\t      return this;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      /* eslint-disable camelcase */\n\t      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n\t      /* eslint-enable camelcase */\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * The object interactivity controls.\n\t     * @private\n\t     */\n\t    _controlsVisibility: null,\n\t\n\t    /**\n\t     * Determines which corner has been clicked\n\t     * @private\n\t     * @param {Object} pointer The pointer indicating the mouse position\n\t     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n\t     */\n\t    _findTargetCorner: function(pointer) {\n\t      if (!this.hasControls || !this.active) {\n\t        return false;\n\t      }\n\t\n\t      var ex = pointer.x,\n\t          ey = pointer.y,\n\t          xPoints,\n\t          lines;\n\t      this.__corner = 0;\n\t      for (var i in this.oCoords) {\n\t\n\t        if (!this.isControlVisible(i)) {\n\t          continue;\n\t        }\n\t\n\t        if (i === 'mtr' && !this.hasRotatingPoint) {\n\t          continue;\n\t        }\n\t\n\t        if (this.get('lockUniScaling') &&\n\t           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n\t          continue;\n\t        }\n\t\n\t        lines = this._getImageLines(this.oCoords[i].corner);\n\t\n\t        // debugging\n\t\n\t        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\t\n\t        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n\t        if (xPoints !== 0 && xPoints % 2 === 1) {\n\t          this.__corner = i;\n\t          return i;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets the coordinates of the draggable boxes in the corners of\n\t     * the image used to scale/rotate it.\n\t     * @private\n\t     */\n\t    _setCornerCoords: function() {\n\t      var coords = this.oCoords,\n\t          newTheta = degreesToRadians(45 - this.angle),\n\t          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\t          /* 0.707106 stands for sqrt(2)/2 */\n\t          cornerHypotenuse = this.cornerSize * 0.707106,\n\t          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n\t          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n\t          x, y;\n\t\n\t      for (var point in coords) {\n\t        x = coords[point].x;\n\t        y = coords[point].y;\n\t        coords[point].corner = {\n\t          tl: {\n\t            x: x - sinHalfOffset,\n\t            y: y - cosHalfOffset\n\t          },\n\t          tr: {\n\t            x: x + cosHalfOffset,\n\t            y: y - sinHalfOffset\n\t          },\n\t          bl: {\n\t            x: x - cosHalfOffset,\n\t            y: y + sinHalfOffset\n\t          },\n\t          br: {\n\t            x: x + sinHalfOffset,\n\t            y: y + cosHalfOffset\n\t          }\n\t        };\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Draws a colored layer behind the object, inside its selection borders.\n\t     * Requires public options: padding, selectionBackgroundColor\n\t     * this function is called when the context is transformed\n\t     * has checks to be skipped when the object is on a staticCanvas\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawSelectionBackground: function(ctx) {\n\t      if (!this.selectionBackgroundColor || this.group || !this.active ||\n\t        (this.canvas && !this.canvas.interactive)) {\n\t        return this;\n\t      }\n\t      ctx.save();\n\t      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n\t          vpt = this.canvas.viewportTransform;\n\t      ctx.translate(center.x, center.y);\n\t      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.fillStyle = this.selectionBackgroundColor;\n\t      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBorders: function(ctx) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth,\n\t          height = wh.y + strokeWidth;\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = this.borderColor;\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\t\n\t        var rotateHeight = -height / 2;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(0, rotateHeight);\n\t        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box when it is inside a group.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @param {object} options object representing current object parameters\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBordersInGroup: function(ctx, options) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var p = this._getNonTransformedDimensions(),\n\t          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n\t          wh = fabric.util.transformPoint(p, matrix),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth,\n\t          height = wh.y + strokeWidth;\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t      ctx.strokeStyle = this.borderColor;\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws corners of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: cornerSize, padding\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawControls: function(ctx) {\n\t      if (!this.hasControls) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          width = wh.x,\n\t          height = wh.y,\n\t          scaleOffset = this.cornerSize,\n\t          left = -(width + scaleOffset) / 2,\n\t          top = -(height + scaleOffset) / 2,\n\t          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n\t      if (!this.transparentCorners) {\n\t        ctx.strokeStyle = this.cornerStrokeColor;\n\t      }\n\t      this._setLineDash(ctx, this.cornerDashArray, null);\n\t\n\t      // top-left\n\t      this._drawControl('tl', ctx, methodName,\n\t        left,\n\t        top);\n\t\n\t      // top-right\n\t      this._drawControl('tr', ctx, methodName,\n\t        left + width,\n\t        top);\n\t\n\t      // bottom-left\n\t      this._drawControl('bl', ctx, methodName,\n\t        left,\n\t        top + height);\n\t\n\t      // bottom-right\n\t      this._drawControl('br', ctx, methodName,\n\t        left + width,\n\t        top + height);\n\t\n\t      if (!this.get('lockUniScaling')) {\n\t\n\t        // middle-top\n\t        this._drawControl('mt', ctx, methodName,\n\t          left + width / 2,\n\t          top);\n\t\n\t        // middle-bottom\n\t        this._drawControl('mb', ctx, methodName,\n\t          left + width / 2,\n\t          top + height);\n\t\n\t        // middle-right\n\t        this._drawControl('mr', ctx, methodName,\n\t          left + width,\n\t          top + height / 2);\n\t\n\t        // middle-left\n\t        this._drawControl('ml', ctx, methodName,\n\t          left,\n\t          top + height / 2);\n\t      }\n\t\n\t      // middle-top-rotate\n\t      if (this.hasRotatingPoint) {\n\t        this._drawControl('mtr', ctx, methodName,\n\t          left + width / 2,\n\t          top - this.rotatingPointOffset);\n\t      }\n\t\n\t      ctx.restore();\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawControl: function(control, ctx, methodName, left, top) {\n\t      if (!this.isControlVisible(control)) {\n\t        return;\n\t      }\n\t      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n\t      switch (this.cornerStyle) {\n\t        case 'circle':\n\t          ctx.beginPath();\n\t          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n\t          ctx[methodName]();\n\t          if (stroke) {\n\t            ctx.stroke();\n\t          }\n\t          break;\n\t        default:\n\t          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n\t          ctx[methodName + 'Rect'](left, top, size, size);\n\t          if (stroke) {\n\t            ctx.strokeRect(left, top, size, size);\n\t          }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns true if the specified control is visible, false otherwise.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @returns {Boolean} true if the specified control is visible, false otherwise\n\t     */\n\t    isControlVisible: function(controlName) {\n\t      return this._getControlsVisibility()[controlName];\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility of the specified control.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @param {Boolean} visible true to set the specified control visible, false otherwise\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlVisible: function(controlName, visible) {\n\t      this._getControlsVisibility()[controlName] = visible;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility state of object controls.\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n\t     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n\t     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n\t     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n\t     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n\t     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n\t     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n\t     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n\t     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlsVisibility: function(options) {\n\t      options || (options = { });\n\t\n\t      for (var p in options) {\n\t        this.setControlVisible(p, options[p]);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns the instance of the control visibility set for this object.\n\t     * @private\n\t     * @returns {Object}\n\t     */\n\t    _getControlsVisibility: function() {\n\t      if (!this._controlsVisibility) {\n\t        this._controlsVisibility = {\n\t          tl: true,\n\t          tr: true,\n\t          br: true,\n\t          bl: true,\n\t          ml: true,\n\t          mt: true,\n\t          mr: true,\n\t          mb: true,\n\t          mtr: true\n\t        };\n\t      }\n\t      return this._controlsVisibility;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Animation duration (in ms) for fx* methods\n\t   * @type Number\n\t   * @default\n\t   */\n\t  FX_DURATION: 500,\n\t\n\t  /**\n\t   * Centers object horizontally with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectH: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('left'),\n\t      endValue: this.getCenter().left,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('left', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Centers object vertically with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectV: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('top'),\n\t      endValue: this.getCenter().top,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('top', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as `fabric.Canvas#remove` but animated\n\t   * @param {fabric.Object} object Object to remove\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxRemove: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('opacity'),\n\t      endValue: 0,\n\t      duration: this.FX_DURATION,\n\t      onStart: function() {\n\t        object.set('active', false);\n\t      },\n\t      onChange: function(value) {\n\t        object.set('opacity', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function () {\n\t        _this.remove(object);\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t  /**\n\t   * Animates object's properties\n\t   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n\t   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n\t   * @return {fabric.Object} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n\t   * @chainable\n\t   *\n\t   * As object — multiple properties\n\t   *\n\t   * object.animate({ left: ..., top: ... });\n\t   * object.animate({ left: ..., top: ... }, { duration: ... });\n\t   *\n\t   * As string — one property\n\t   *\n\t   * object.animate('left', ...);\n\t   * object.animate('left', { duration: ... });\n\t   *\n\t   */\n\t  animate: function() {\n\t    if (arguments[0] && typeof arguments[0] === 'object') {\n\t      var propsToAnimate = [], prop, skipCallbacks;\n\t      for (prop in arguments[0]) {\n\t        propsToAnimate.push(prop);\n\t      }\n\t      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n\t        prop = propsToAnimate[i];\n\t        skipCallbacks = i !== len - 1;\n\t        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n\t      }\n\t    }\n\t    else {\n\t      this._animate.apply(this, arguments);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to animate\n\t   * @param {String} to Value to animate to\n\t   * @param {Object} [options] Options object\n\t   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n\t   */\n\t  _animate: function(property, to, options, skipCallbacks) {\n\t    var _this = this, propPair;\n\t\n\t    to = to.toString();\n\t\n\t    if (!options) {\n\t      options = { };\n\t    }\n\t    else {\n\t      options = fabric.util.object.clone(options);\n\t    }\n\t\n\t    if (~property.indexOf('.')) {\n\t      propPair = property.split('.');\n\t    }\n\t\n\t    var currentValue = propPair\n\t      ? this.get(propPair[0])[propPair[1]]\n\t      : this.get(property);\n\t\n\t    if (!('from' in options)) {\n\t      options.from = currentValue;\n\t    }\n\t\n\t    if (~to.indexOf('=')) {\n\t      to = currentValue + parseFloat(to.replace('=', ''));\n\t    }\n\t    else {\n\t      to = parseFloat(to);\n\t    }\n\t\n\t    fabric.util.animate({\n\t      startValue: options.from,\n\t      endValue: to,\n\t      byValue: options.by,\n\t      easing: options.easing,\n\t      duration: options.duration,\n\t      abort: options.abort && function() {\n\t        return options.abort.call(_this);\n\t      },\n\t      onChange: function(value, valueProgress, timeProgress) {\n\t        if (propPair) {\n\t          _this[propPair[0]][propPair[1]] = value;\n\t        }\n\t        else {\n\t          _this.set(property, value);\n\t        }\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t        options.onChange && options.onChange(value, valueProgress, timeProgress);\n\t      },\n\t      onComplete: function(value, valueProgress, timeProgress) {\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t\n\t        _this.setCoords();\n\t        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n\t      }\n\t    });\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\t\n\t  if (fabric.Line) {\n\t    fabric.warn('fabric.Line is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Line class\n\t   * @class fabric.Line\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Line#initialize} for constructor definition\n\t   */\n\t  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'line',\n\t\n\t    /**\n\t     * x value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x1: 0,\n\t\n\t    /**\n\t     * y value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y1: 0,\n\t\n\t    /**\n\t     * x value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x2: 0,\n\t\n\t    /**\n\t     * y value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y2: 0,\n\t\n\t    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} [points] Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Line} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      if (!points) {\n\t        points = [0, 0, 0, 0];\n\t      }\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('x1', points[0]);\n\t      this.set('y1', points[1]);\n\t      this.set('x2', points[2]);\n\t      this.set('y2', points[3]);\n\t\n\t      this._setWidthHeight(options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      options || (options = { });\n\t\n\t      this.width = Math.abs(this.x2 - this.x1);\n\t      this.height = Math.abs(this.y2 - this.y1);\n\t\n\t      this.left = 'left' in options\n\t        ? options.left\n\t        : this._getLeftToOriginX();\n\t\n\t      this.top = 'top' in options\n\t        ? options.top\n\t        : this._getTopToOriginY();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      if (typeof coordProps[key] !== 'undefined') {\n\t        this._setWidthHeight();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n\t     */\n\t    _getLeftToOriginX: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originX',\n\t        axis1: 'x1',\n\t        axis2: 'x2',\n\t        dimension: 'width'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'left',\n\t        center: 'center',\n\t        farthest: 'right'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n\t     */\n\t    _getTopToOriginY: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originY',\n\t        axis1: 'y1',\n\t        axis2: 'y2',\n\t        dimension: 'height'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'top',\n\t        center: 'center',\n\t        farthest: 'bottom'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t\n\t      if (noTransform) {\n\t        //  Line coords are distances from left-top of canvas to origin of line.\n\t        //  To render line in a path-group, we need to translate them to\n\t        //  distances from center of path-group to center of line.\n\t        var cp = this.getCenterPoint(),\n\t            offset = this.strokeWidth / 2;\n\t        ctx.translate(\n\t          cp.x - (this.strokeLineCap === 'butt' && this.height === 0 ? 0 : offset),\n\t          cp.y - (this.strokeLineCap === 'butt' && this.width === 0 ? 0 : offset)\n\t        );\n\t      }\n\t\n\t      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n\t        // move from center (of virtual box) to its left/top corner\n\t        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n\t        var p = this.calcLinePoints();\n\t        ctx.moveTo(p.x1, p.y1);\n\t        ctx.lineTo(p.x2, p.y2);\n\t      }\n\t\n\t      ctx.lineWidth = this.strokeWidth;\n\t\n\t      // TODO: test this\n\t      // make sure setting \"fill\" changes color of a line\n\t      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\t      var origStrokeStyle = ctx.strokeStyle;\n\t      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n\t      this.stroke && this._renderStroke(ctx);\n\t      ctx.strokeStyle = origStrokeStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p = this.calcLinePoints();\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @methd toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var dim = this.callSuper('_getNonTransformedDimensions');\n\t      if (this.strokeLineCap === 'butt') {\n\t        if (this.width === 0) {\n\t          dim.y -= this.strokeWidth;\n\t        }\n\t        if (this.height === 0) {\n\t          dim.x -= this.strokeWidth;\n\t        }\n\t      }\n\t      return dim;\n\t    },\n\t\n\t    /**\n\t     * Recalculates line points given width and height\n\t     * @private\n\t     */\n\t    calcLinePoints: function() {\n\t      var xMult = this.x1 <= this.x2 ? -1 : 1,\n\t          yMult = this.y1 <= this.y2 ? -1 : 1,\n\t          x1 = (xMult * this.width * 0.5),\n\t          y1 = (yMult * this.height * 0.5),\n\t          x2 = (xMult * this.width * -0.5),\n\t          y2 = (yMult * this.height * -0.5);\n\t\n\t      return {\n\t        x1: x1,\n\t        x2: x2,\n\t        y1: y1,\n\t        y2: y2\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\t\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        p = this.calcLinePoints();\n\t      }\n\t      markup.push(\n\t        '<line ', this.getSvgId(),\n\t          'x1=\"', p.x1,\n\t          '\" y1=\"', p.y1,\n\t          '\" x2=\"', p.x2,\n\t          '\" y2=\"', p.y2,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n\t   */\n\t  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromElement = function(element, options) {\n\t    options = options || { };\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n\t        points = [\n\t          parsedAttributes.x1 || 0,\n\t          parsedAttributes.y1 || 0,\n\t          parsedAttributes.x2 || 0,\n\t          parsedAttributes.y2 || 0\n\t        ];\n\t    options.originX = 'left';\n\t    options.originY = 'top';\n\t    return new fabric.Line(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromObject = function(object, callback, forceAsync) {\n\t    function _callback(instance) {\n\t      delete instance.points;\n\t      callback && callback(instance);\n\t    };\n\t    var options = clone(object, true);\n\t    options.points = [object.x1, object.y1, object.x2, object.y2];\n\t    var line = fabric.Object._fromObject('Line', options, _callback, forceAsync, 'points');\n\t    if (line) {\n\t      delete line.points;\n\t    }\n\t    return line;\n\t  };\n\t\n\t  /**\n\t   * Produces a function that calculates distance from canvas edge to Line origin.\n\t   */\n\t  function makeEdgeToOriginGetter(propertyNames, originValues) {\n\t    var origin = propertyNames.origin,\n\t        axis1 = propertyNames.axis1,\n\t        axis2 = propertyNames.axis2,\n\t        dimension = propertyNames.dimension,\n\t        nearest = originValues.nearest,\n\t        center = originValues.center,\n\t        farthest = originValues.farthest;\n\t\n\t    return function() {\n\t      switch (this.get(origin)) {\n\t        case nearest:\n\t          return Math.min(this.get(axis1), this.get(axis2));\n\t        case center:\n\t          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n\t        case farthest:\n\t          return Math.max(this.get(axis1), this.get(axis2));\n\t      }\n\t    };\n\t\n\t  }\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      pi = Math.PI,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Circle) {\n\t    fabric.warn('fabric.Circle is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Circle class\n\t   * @class fabric.Circle\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Circle#initialize} for constructor definition\n\t   */\n\t  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'circle',\n\t\n\t    /**\n\t     * Radius of this circle\n\t     * @type Number\n\t     * @default\n\t     */\n\t    radius: 0,\n\t\n\t    /**\n\t     * Start angle of the circle, moving clockwise\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    startAngle: 0,\n\t\n\t    /**\n\t     * End angle of the circle\n\t     * @type Number\n\t     * @default 2Pi\n\t     */\n\t    endAngle: pi * 2,\n\t\n\t    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius'),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('radius', options && options.radius || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (key === 'radius') {\n\t        this.setRadius(value);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n\t          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\t\n\t      if (angle === 0) {\n\t        if (this.group && this.group.type === 'path-group') {\n\t          x = this.left + this.radius;\n\t          y = this.top + this.radius;\n\t        }\n\t        markup.push(\n\t          '<circle ', this.getSvgId(),\n\t            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n\t            'r=\"', this.radius,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            '\" transform=\"', this.getSvgTransform(),\n\t            ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t      else {\n\t        var startX = Math.cos(this.startAngle) * this.radius,\n\t            startY = Math.sin(this.startAngle) * this.radius,\n\t            endX = Math.cos(this.endAngle) * this.radius,\n\t            endY = Math.sin(this.endAngle) * this.radius,\n\t            largeFlag = angle > pi ? '1' : '0';\n\t\n\t        markup.push(\n\t          '<path d=\"M ' + startX + ' ' + startY,\n\t          ' A ' + this.radius + ' ' + this.radius,\n\t          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.arc(noTransform ? this.left + this.radius : 0,\n\t              noTransform ? this.top + this.radius : 0,\n\t              this.radius,\n\t              this.startAngle,\n\t              this.endAngle, false);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusX: function() {\n\t      return this.get('radius') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusY: function() {\n\t      return this.get('radius') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Sets radius of an object (and updates width accordingly)\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    setRadius: function(value) {\n\t      this.radius = value;\n\t      return this.set('width', value * 2).set('height', value * 2);\n\t    },\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n\t   */\n\t  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @throws {Error} If value of `r` attribute is missing or invalid\n\t   * @return {fabric.Circle} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\t\n\t    if (!isValidRadius(parsedAttributes)) {\n\t      throw new Error('value of `r` attribute is required and can not be negative');\n\t    }\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\t\n\t    obj.left -= obj.radius;\n\t    obj.top -= obj.radius;\n\t    return obj;\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function isValidRadius(attributes) {\n\t    return (('radius' in attributes) && (attributes.radius >= 0));\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {Object} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Circle', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Triangle) {\n\t    fabric.warn('fabric.Triangle is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Triangle class\n\t   * @class fabric.Triangle\n\t   * @extends fabric.Object\n\t   * @return {fabric.Triangle} thisArg\n\t   * @see {@link fabric.Triangle#initialize} for constructor definition\n\t   */\n\t  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'triangle',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('width', options && options.width || 100)\n\t          .set('height', options && options.height || 100);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      ctx.moveTo(-widthBy2, heightBy2);\n\t      ctx.lineTo(0, -heightBy2);\n\t      ctx.lineTo(widthBy2, heightBy2);\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2,\n\t          points = [\n\t            -widthBy2 + ' ' + heightBy2,\n\t            '0 ' + -heightBy2,\n\t            widthBy2 + ' ' + heightBy2\n\t          ]\n\t          .join(',');\n\t\n\t      markup.push(\n\t        '<polygon ', this.getSvgId(),\n\t          'points=\"', points,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t        '\"/>'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t  });\n\t\n\t  /**\n\t   * Returns {@link fabric.Triangle} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Triangle\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Triangle}\n\t   */\n\t  fabric.Triangle.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Triangle', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      piBy2   = Math.PI * 2,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Ellipse) {\n\t    fabric.warn('fabric.Ellipse is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Ellipse class\n\t   * @class fabric.Ellipse\n\t   * @extends fabric.Object\n\t   * @return {fabric.Ellipse} thisArg\n\t   * @see {@link fabric.Ellipse#initialize} for constructor definition\n\t   */\n\t  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'ellipse',\n\t\n\t    /**\n\t     * Horizontal radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('rx', options && options.rx || 0);\n\t      this.set('ry', options && options.ry || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      switch (key) {\n\t\n\t        case 'rx':\n\t          this.rx = value;\n\t          this.set('width', value * 2);\n\t          break;\n\t\n\t        case 'ry':\n\t          this.ry = value;\n\t          this.set('height', value * 2);\n\t          break;\n\t\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRx: function() {\n\t      return this.get('rx') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns Vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRy: function() {\n\t      return this.get('ry') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left + this.rx;\n\t        y = this.top + this.ry;\n\t      }\n\t      markup.push(\n\t        '<ellipse ', this.getSvgId(),\n\t          'cx=\"', x, '\" cy=\"', y, '\" ',\n\t          'rx=\"', this.rx,\n\t          '\" ry=\"', this.ry,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.save();\n\t      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n\t      ctx.arc(\n\t        noTransform ? this.left + this.rx : 0,\n\t        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n\t        this.rx,\n\t        0,\n\t        piBy2,\n\t        false);\n\t      ctx.restore();\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n\t   */\n\t  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\t\n\t    ellipse.top -= ellipse.ry;\n\t    ellipse.left -= ellipse.rx;\n\t    return ellipse;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Ellipse', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Rect) {\n\t    fabric.warn('fabric.Rect is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Rectangle class\n\t   * @class fabric.Rect\n\t   * @extends fabric.Object\n\t   * @return {fabric.Rect} thisArg\n\t   * @see {@link fabric.Rect#initialize} for constructor definition\n\t   */\n\t  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\t\n\t    /**\n\t     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'rect',\n\t\n\t    /**\n\t     * Horizontal border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this._initRxRy();\n\t    },\n\t\n\t    /**\n\t     * Initializes rx/ry attributes\n\t     * @private\n\t     */\n\t    _initRxRy: function() {\n\t      if (this.rx && !this.ry) {\n\t        this.ry = this.rx;\n\t      }\n\t      else if (this.ry && !this.rx) {\n\t        this.rx = this.ry;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t\n\t      // optimize 1x1 case (used in spray brush)\n\t      if (this.width === 1 && this.height === 1) {\n\t        ctx.fillRect(-0.5, -0.5, 1, 1);\n\t        return;\n\t      }\n\t\n\t      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n\t          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n\t          w = this.width,\n\t          h = this.height,\n\t          x = noTransform ? this.left : -this.width / 2,\n\t          y = noTransform ? this.top : -this.height / 2,\n\t          isRounded = rx !== 0 || ry !== 0,\n\t          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n\t          k = 1 - 0.5522847498;\n\t      ctx.beginPath();\n\t\n\t      ctx.moveTo(x + rx, y);\n\t\n\t      ctx.lineTo(x + w - rx, y);\n\t      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\t\n\t      ctx.lineTo(x + w, y + h - ry);\n\t      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\t\n\t      ctx.lineTo(x + rx, y + h);\n\t      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\t\n\t      ctx.lineTo(x, y + ry);\n\t      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\t\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        x = -this.width / 2;\n\t        y = -this.height / 2;\n\t      }\n\t      markup.push(\n\t        '<rect ', this.getSvgId(),\n\t          'x=\"', x, '\" y=\"', y,\n\t          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n\t          '\" width=\"', this.width, '\" height=\"', this.height,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n\t   */\n\t  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Rect} Instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options = options || { };\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top  = parsedAttributes.top  || 0;\n\t    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n\t    return rect;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {Object} instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Rect', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  if (fabric.Polyline) {\n\t    fabric.warn('fabric.Polyline is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polyline class\n\t   * @class fabric.Polyline\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polyline#initialize} for constructor definition\n\t   */\n\t  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polyline',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points (where each point is an object with x and y)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Polyline} thisArg\n\t     * @example\n\t     * var poly = new fabric.Polyline([\n\t     *     { x: 10, y: 10 },\n\t     *     { x: 50, y: 30 },\n\t     *     { x: 40, y: 70 },\n\t     *     { x: 60, y: 50 },\n\t     *     { x: 100, y: 150 },\n\t     *     { x: 40, y: 100 }\n\t     *   ], {\n\t     *   stroke: 'red',\n\t     *   left: 100,\n\t     *   top: 100\n\t     * });\n\t     */\n\t    initialize: function(points, options) {\n\t      options = options || {};\n\t      this.points = points || [];\n\t      this.callSuper('initialize', options);\n\t      this._calcDimensions();\n\t      if (!('top' in options)) {\n\t        this.top = this.minY;\n\t      }\n\t      if (!('left' in options)) {\n\t        this.left = this.minX;\n\t      }\n\t      this.pathOffset = {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t\n\t      var points = this.points,\n\t          minX = min(points, 'x'),\n\t          minY = min(points, 'y'),\n\t          maxX = max(points, 'x'),\n\t          maxY = max(points, 'y');\n\t\n\t      this.width = (maxX - minX) || 0;\n\t      this.height = (maxY - minY) || 0;\n\t      this.minX = minX || 0;\n\t      this.minY = minY || 0;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        points: this.points.concat()\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var points = [],\n\t          diffX = 0,\n\t          diffY = 0,\n\t          markup = this._createBaseSVGMarkup();\n\t\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        diffX = this.pathOffset.x;\n\t        diffY = this.pathOffset.y;\n\t      }\n\t\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        points.push(\n\t          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n\t          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n\t        );\n\t      }\n\t      markup.push(\n\t        '<', this.type, ' ', this.getSvgId(),\n\t          'points=\"', points.join(''),\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          ' ', this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    commonRender: function(ctx, noTransform) {\n\t      var point, len = this.points.length,\n\t          x = noTransform ? 0 : this.pathOffset.x,\n\t          y = noTransform ? 0 : this.pathOffset.y;\n\t\n\t      if (!len || isNaN(this.points[len - 1].y)) {\n\t        // do not draw if no points or odd points\n\t        // NaN comes from parseFloat of a empty string in parser\n\t        return false;\n\t      }\n\t      ctx.beginPath();\n\t      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n\t      for (var i = 0; i < len; i++) {\n\t        point = this.points[i];\n\t        ctx.lineTo(point.x - x, point.y - y);\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!this.commonRender(ctx, noTransform)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p1, p2;\n\t\n\t      ctx.beginPath();\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        p1 = this.points[i];\n\t        p2 = this.points[i + 1] || p1;\n\t        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.get('points').length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n\t   */\n\t  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Polyline', object, callback, forceAsync, 'points');\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Polygon) {\n\t    fabric.warn('fabric.Polygon is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polygon class\n\t   * @class fabric.Polygon\n\t   * @extends fabric.Polyline\n\t   * @see {@link fabric.Polygon#initialize} for constructor definition\n\t   */\n\t  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polygon',\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!this.commonRender(ctx, noTransform)) {\n\t        return;\n\t      }\n\t      ctx.closePath();\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      this.callSuper('_renderDashedStroke', ctx);\n\t      ctx.closePath();\n\t    },\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n\t   */\n\t  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns {@link fabric.Polygon} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polygon(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polygon instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Polygon', object, callback, forceAsync, 'points');\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      extend = fabric.util.object.extend,\n\t      _toString = Object.prototype.toString,\n\t      drawArc = fabric.util.drawArc,\n\t      commandLengths = {\n\t        m: 2,\n\t        l: 2,\n\t        h: 1,\n\t        v: 1,\n\t        c: 6,\n\t        s: 4,\n\t        q: 4,\n\t        t: 2,\n\t        a: 7\n\t      },\n\t      repeatedCommands = {\n\t        m: 'l',\n\t        M: 'L'\n\t      };\n\t\n\t  if (fabric.Path) {\n\t    fabric.warn('fabric.Path is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path class\n\t   * @class fabric.Path\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.Path#initialize} for constructor definition\n\t   */\n\t  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path',\n\t\n\t    /**\n\t     * Array of path points\n\t     * @type Array\n\t     * @default\n\t     */\n\t    path: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\t\n\t    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Path} thisArg\n\t     */\n\t    initialize: function(path, options) {\n\t      options = options || { };\n\t      this.callSuper('initialize', options);\n\t\n\t      if (!path) {\n\t        path = [];\n\t      }\n\t\n\t      var fromArray = _toString.call(path) === '[object Array]';\n\t\n\t      this.path = fromArray\n\t        ? path\n\t        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n\t        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\t\n\t      if (!this.path) {\n\t        return;\n\t      }\n\t\n\t      if (!fromArray) {\n\t        this.path = this._parsePath();\n\t      }\n\t\n\t      this._setPositionDimensions(options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} options Options object\n\t     */\n\t    _setPositionDimensions: function(options) {\n\t      var calcDim = this._parseDimensions();\n\t\n\t      this.minX = calcDim.left;\n\t      this.minY = calcDim.top;\n\t      this.width = calcDim.width;\n\t      this.height = calcDim.height;\n\t\n\t      if (typeof options.left === 'undefined') {\n\t        this.left = calcDim.left + (this.originX === 'center'\n\t          ? this.width / 2\n\t          : this.originX === 'right'\n\t            ? this.width\n\t            : 0);\n\t      }\n\t\n\t      if (typeof options.top === 'undefined') {\n\t        this.top = calcDim.top + (this.originY === 'center'\n\t          ? this.height / 2\n\t          : this.originY === 'bottom'\n\t            ? this.height\n\t            : 0);\n\t      }\n\t\n\t      this.pathOffset = this.pathOffset || {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _renderPathCommands: function(ctx) {\n\t      var current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          l = -this.pathOffset.x,\n\t          t = -this.pathOffset.y;\n\t\n\t      if (this.group && this.group.type === 'path-group') {\n\t        l = 0;\n\t        t = 0;\n\t      }\n\t\n\t      ctx.beginPath();\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            ctx.bezierCurveTo(\n\t              x + current[1] + l, // x1\n\t              y + current[2] + t, // y1\n\t              controlX + l, // x2\n\t              controlY + t, // y2\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            ctx.bezierCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              controlX + l,\n\t              controlY + t,\n\t              x + l,\n\t              y + t\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              x + current[1] + l,\n\t              y + current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t\n\t            ctx.quadraticCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x + l,\n\t              current[7] + y + t\n\t            ]);\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + l,\n\t              current[7] + t\n\t            ]);\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            ctx.closePath();\n\t            break;\n\t        }\n\t        previous = current;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _render: function(ctx) {\n\t      this._renderPathCommands(ctx);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Path (' + this.complexity() +\n\t        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(this.callSuper('toObject', ['sourcePath', 'pathOffset'].concat(propertiesToInclude)), {\n\t        path: this.path.map(function(item) { return item.slice(); }),\n\t        top: this.top,\n\t        left: this.left,\n\t      });\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.path = this.sourcePath;\n\t      }\n\t      delete o.sourcePath;\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var chunks = [],\n\t          markup = this._createBaseSVGMarkup(), addTransform = '';\n\t\n\t      for (var i = 0, len = this.path.length; i < len; i++) {\n\t        chunks.push(this.path[i].join(' '));\n\t      }\n\t      var path = chunks.join(' ');\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        '<path ', this.getSvgId(),\n\t          'd=\"', path,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n\t        '/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns number representation of an instance complexity\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.path.length;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parsePath: function() {\n\t      var result = [],\n\t          coords = [],\n\t          currentPath,\n\t          parsed,\n\t          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n\t          match,\n\t          coordsStr;\n\t\n\t      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n\t        currentPath = this.path[i];\n\t\n\t        coordsStr = currentPath.slice(1).trim();\n\t        coords.length = 0;\n\t\n\t        while ((match = re.exec(coordsStr))) {\n\t          coords.push(match[0]);\n\t        }\n\t\n\t        coordsParsed = [currentPath.charAt(0)];\n\t\n\t        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n\t          parsed = parseFloat(coords[j]);\n\t          if (!isNaN(parsed)) {\n\t            coordsParsed.push(parsed);\n\t          }\n\t        }\n\t\n\t        var command = coordsParsed[0],\n\t            commandLength = commandLengths[command.toLowerCase()],\n\t            repeatedCommand = repeatedCommands[command] || command;\n\t\n\t        if (coordsParsed.length - 1 > commandLength) {\n\t          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n\t            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n\t            command = repeatedCommand;\n\t          }\n\t        }\n\t        else {\n\t          result.push(coordsParsed);\n\t        }\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parseDimensions: function() {\n\t\n\t      var aX = [],\n\t          aY = [],\n\t          current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          bounds;\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              x + current[1], // x1\n\t              y + current[2], // y1\n\t              controlX, // x2\n\t              controlY, // y2\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              current[1],\n\t              current[2],\n\t              controlX,\n\t              controlY,\n\t              current[5],\n\t              current[6]\n\t            );\n\t            x = current[5];\n\t            y = current[6];\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              x + current[1],\n\t              y + current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              current[1],\n\t              current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              current[3],\n\t              current[4]\n\t            );\n\t            x = current[3];\n\t            y = current[4];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x,\n\t              current[7] + y\n\t            );\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6],\n\t              current[7]\n\t            );\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            break;\n\t        }\n\t        previous = current;\n\t        bounds.forEach(function (point) {\n\t          aX.push(point.x);\n\t          aY.push(point.y);\n\t        });\n\t        aX.push(x);\n\t        aY.push(y);\n\t      }\n\t\n\t      var minX = min(aX) || 0,\n\t          minY = min(aY) || 0,\n\t          maxX = max(aX) || 0,\n\t          maxY = max(aY) || 0,\n\t          deltaX = maxX - minX,\n\t          deltaY = maxY - minY,\n\t\n\t          o = {\n\t            left: minX,\n\t            top: minY,\n\t            width: deltaX,\n\t            height: deltaY\n\t          };\n\t\n\t      return o;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an object\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {Object} object\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   */\n\t  fabric.Path.fromObject = function(object, callback, forceAsync) {\n\t    // remove this pattern rom 2.0, accept just object.\n\t    var path;\n\t    if (typeof object.path === 'string') {\n\t      fabric.loadSVGFromURL(object.path, function (elements) {\n\t        var pathUrl = object.path;\n\t        path = elements[0];\n\t        delete object.path;\n\t\n\t        path.setOptions(object);\n\t        path.setSourcePath(pathUrl);\n\t\n\t        callback && callback(path);\n\t      });\n\t    }\n\t    else {\n\t      return fabric.Object._fromObject('Path', object, callback, forceAsync, 'path');\n\t    }\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n\t   */\n\t  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an SVG <path> element\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {SVGElement} element to parse\n\t   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n\t   * @param {Object} [options] Options object\n\t   */\n\t  fabric.Path.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n\t    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Path.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.PathGroup) {\n\t    fabric.warn('fabric.PathGroup is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path group class\n\t   * @class fabric.PathGroup\n\t   * @extends fabric.Path\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.PathGroup#initialize} for constructor definition\n\t   */\n\t  fabric.PathGroup = fabric.util.createClass(fabric.Object, /** @lends fabric.PathGroup.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path-group',\n\t\n\t    /**\n\t     * Fill value\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill: '',\n\t\n\t    /**\n\t     * Pathgroups are container, do not render anything on theyr own, ence no cache properties\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    cacheProperties: [],\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} paths\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    initialize: function(paths, options) {\n\t\n\t      options = options || { };\n\t      this.paths = paths || [];\n\t\n\t      for (var i = this.paths.length; i--;) {\n\t        this.paths[i].group = this;\n\t      }\n\t\n\t      if (options.toBeParsed) {\n\t        this.parseDimensionsFromPaths(options);\n\t        delete options.toBeParsed;\n\t      }\n\t      this.setOptions(options);\n\t      this.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Calculate width and height based on paths contained\n\t     */\n\t    parseDimensionsFromPaths: function(options) {\n\t      var points, p, xC = [], yC = [], path, height, width,\n\t          m;\n\t      for (var j = this.paths.length; j--;) {\n\t        path = this.paths[j];\n\t        height = path.height + path.strokeWidth;\n\t        width = path.width + path.strokeWidth;\n\t        points = [\n\t          { x: path.left, y: path.top },\n\t          { x: path.left + width, y: path.top },\n\t          { x: path.left, y: path.top + height },\n\t          { x: path.left + width, y: path.top + height }\n\t        ];\n\t        m = this.paths[j].transformMatrix;\n\t        for (var i = 0; i < points.length; i++) {\n\t          p = points[i];\n\t          if (m) {\n\t            p = fabric.util.transformPoint(p, m, false);\n\t          }\n\t          xC.push(p.x);\n\t          yC.push(p.y);\n\t        }\n\t      }\n\t      options.width = Math.max.apply(null, xC);\n\t      options.height = Math.max.apply(null, yC);\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx) {\n\t      ctx.save();\n\t      ctx.translate(-this.width / 2, -this.height / 2);\n\t      for (var i = 0, l = this.paths.length; i < l; ++i) {\n\t        this.paths[i].render(ctx, true);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Decide if the object should cache or not.\n\t     * objectCaching is a global flag, wins over everything\n\t     * needsItsOwnCache should be used when the object drawing method requires\n\t     * a cache step. None of the fabric classes requires it.\n\t     * Generally you do not cache objects in groups because the group outside is cached.\n\t     * @return {Boolean}\n\t     */\n\t    shouldCache: function() {\n\t      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n\t      this.caching = parentCache;\n\t      if (parentCache) {\n\t        for (var i = 0, len = this.paths.length; i < len; i++) {\n\t          if (this.paths[i].willDrawShadow()) {\n\t            this.caching = false;\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return parentCache;\n\t    },\n\t\n\t    /**\n\t     * Check if this object or a child object will cast a shadow\n\t     * @return {Boolean}\n\t     */\n\t    willDrawShadow: function() {\n\t      if (this.shadow) {\n\t        return true;\n\t      }\n\t      for (var i = 0, len = this.paths.length; i < len; i++) {\n\t        if (this.paths[i].willDrawShadow()) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Check if this group or its parent group are caching, recursively up\n\t     * @return {Boolean}\n\t     */\n\t    isCaching: function() {\n\t      return this.caching || this.group && this.group.isCaching();\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     */\n\t    isCacheDirty: function() {\n\t      if (this.callSuper('isCacheDirty')) {\n\t        return true;\n\t      }\n\t      if (!this.statefullCache) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = this.paths.length; i < len; i++) {\n\t        if (this.paths[i].isCacheDirty(true)) {\n\t          if (this._cacheCanvas) {\n\t            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n\t            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n\t          }\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets certain property to a certain value\n\t     * @param {String} prop\n\t     * @param {*} value\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    _set: function(prop, value) {\n\t\n\t      if (prop === 'fill' && value && this.isSameColor()) {\n\t        var i = this.paths.length;\n\t        while (i--) {\n\t          this.paths[i]._set(prop, value);\n\t        }\n\t      }\n\t\n\t      return this.callSuper('_set', prop, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var pathsToObject = this.paths.map(function(path) {\n\t        var originalDefaults = path.includeDefaultValues;\n\t        path.includeDefaultValues = path.group.includeDefaultValues;\n\t        var obj = path.toObject(propertiesToInclude);\n\t        path.includeDefaultValues = originalDefaults;\n\t        return obj;\n\t      });\n\t      var o = extend(this.callSuper('toObject', ['sourcePath'].concat(propertiesToInclude)), {\n\t        paths: pathsToObject\n\t      });\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} dataless object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.paths = this.sourcePath;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var objects = this.getObjects(),\n\t          p = this.getPointByOrigin('left', 'top'),\n\t          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n\t          markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(),\n\t        'style=\"', this.getSvgStyles(), '\" ',\n\t        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n\t        '>\\n'\n\t      );\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        markup.push('\\t', objects[i].toSVG(reviver));\n\t      }\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns a string representation of this path group\n\t     * @return {String} string representation of an object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.PathGroup (' + this.complexity() +\n\t        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns true if all paths in this group are of same color\n\t     * @return {Boolean} true if all paths are of the same color (`fill`)\n\t     */\n\t    isSameColor: function() {\n\t      var firstPathFill = this.getObjects()[0].get('fill') || '';\n\t      if (typeof firstPathFill !== 'string') {\n\t        return false;\n\t      }\n\t      firstPathFill = firstPathFill.toLowerCase();\n\t      return this.getObjects().every(function(path) {\n\t        var pathFill = path.get('fill') || '';\n\t        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Returns number representation of object's complexity\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return this.paths.reduce(function(total, path) {\n\t        return total + ((path && path.complexity) ? path.complexity() : 0);\n\t      }, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns all paths in this path group\n\t     * @return {Array} array of path objects included in this path group\n\t     */\n\t    getObjects: function() {\n\t      return this.paths;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates fabric.PathGroup instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n\t   */\n\t  fabric.PathGroup.fromObject = function(object, callback) {\n\t    var originalPaths = object.paths;\n\t    delete object.paths;\n\t    if (typeof originalPaths === 'string') {\n\t      fabric.loadSVGFromURL(originalPaths, function (elements) {\n\t        var pathUrl = originalPaths;\n\t        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\t        object.paths = originalPaths;\n\t        callback(pathGroup);\n\t      });\n\t    }\n\t    else {\n\t      fabric.util.enlivenObjects(originalPaths, function(enlivenedObjects) {\n\t        var pathGroup = new fabric.PathGroup(enlivenedObjects, object);\n\t        object.paths = originalPaths;\n\t        callback(pathGroup);\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.PathGroup.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max;\n\t\n\t  if (fabric.Group) {\n\t    return;\n\t  }\n\t\n\t  // lock-related properties, for use in fabric.Group#get\n\t  // to enable locking behavior on group\n\t  // when one of its objects has lock-related properties set\n\t  var _lockProperties = {\n\t    lockMovementX:  true,\n\t    lockMovementY:  true,\n\t    lockRotation:   true,\n\t    lockScalingX:   true,\n\t    lockScalingY:   true,\n\t    lockUniScaling: true\n\t  };\n\t\n\t  /**\n\t   * Group class\n\t   * @class fabric.Group\n\t   * @extends fabric.Object\n\t   * @mixes fabric.Collection\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n\t   * @see {@link fabric.Group#initialize} for constructor definition\n\t   */\n\t  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'group',\n\t\n\t    /**\n\t     * Width of stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * Indicates if click events should also check for subtargets\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    subTargetCheck: false,\n\t\n\t    /**\n\t     * Groups are container, do not render anything on theyr own, ence no cache properties\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    cacheProperties: [],\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} objects Group objects\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(objects, options, isAlreadyGrouped) {\n\t      options = options || { };\n\t\n\t      this._objects = [];\n\t      // if objects enclosed in a group have been grouped already,\n\t      // we cannot change properties of objects.\n\t      // Thus we need to set options to group without objects,\n\t      // because delegatedProperties propagate to objects.\n\t      isAlreadyGrouped && this.callSuper('initialize', options);\n\t\n\t      this._objects = objects || [];\n\t      for (var i = this._objects.length; i--; ) {\n\t        this._objects[i].group = this;\n\t      }\n\t\n\t      if (options.originX) {\n\t        this.originX = options.originX;\n\t      }\n\t      if (options.originY) {\n\t        this.originY = options.originY;\n\t      }\n\t\n\t      if (isAlreadyGrouped) {\n\t        // do not change coordinate of objects enclosed in a group,\n\t        // because objects coordinate system have been group coodinate system already.\n\t        this._updateObjectsCoords(true);\n\t        this._updateObjectsACoords();\n\t      }\n\t      else {\n\t        this._calcBounds();\n\t        this._updateObjectsCoords();\n\t        this.callSuper('initialize', options);\n\t      }\n\t\n\t      this.setCoords();\n\t      this.saveCoords();\n\t    },\n\t\n\t    _updateObjectsACoords: function() {\n\t      var ignoreZoom = true, skipAbsolute = true;\n\t      for (var i = this._objects.length; i--; ){\n\t        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n\t     */\n\t    _updateObjectsCoords: function(skipCoordsChange) {\n\t      var center = this.getCenterPoint();\n\t      for (var i = this._objects.length; i--; ){\n\t        this._updateObjectCoords(this._objects[i], center, skipCoordsChange);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     * @param {fabric.Point} center, current center of group.\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n\t     */\n\t    _updateObjectCoords: function(object, center, skipCoordsChange) {\n\t      // do not display corners of objects enclosed in a group\n\t      object.__origHasControls = object.hasControls;\n\t      object.hasControls = false;\n\t\n\t      if (skipCoordsChange) {\n\t        return;\n\t      }\n\t\n\t      var objectLeft = object.getLeft(),\n\t          objectTop = object.getTop(),\n\t          ignoreZoom = true, skipAbsolute = true;\n\t\n\t      object.set({\n\t        left: objectLeft - center.x,\n\t        top: objectTop - center.y\n\t      });\n\t      object.setCoords(ignoreZoom, skipAbsolute);\n\t    },\n\t\n\t    /**\n\t     * Returns string represenation of a group\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Group: (' + this.complexity() + ')>';\n\t    },\n\t\n\t    /**\n\t     * Adds an object to a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    addWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      if (object) {\n\t        this._objects.push(object);\n\t        object.group = this;\n\t        object._set('canvas', this.canvas);\n\t      }\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      this.setCoords();\n\t      this.dirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObjectActive: function(object) {\n\t      object.set('active', true);\n\t      object.group = this;\n\t    },\n\t\n\t    /**\n\t     * Removes an object from a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    removeWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t\n\t      this.remove(object);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      this.setCoords();\n\t      this.dirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectAdded: function(object) {\n\t      this.dirty = true;\n\t      object.group = this;\n\t      object._set('canvas', this.canvas);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectRemoved: function(object) {\n\t      this.dirty = true;\n\t      delete object.group;\n\t      object.set('active', false);\n\t    },\n\t\n\t    /**\n\t     * Properties that are delegated to group objects when reading/writing\n\t     * @param {Object} delegatedProperties\n\t     */\n\t    delegatedProperties: {\n\t      fill:             true,\n\t      stroke:           true,\n\t      strokeWidth:      true,\n\t      fontFamily:       true,\n\t      fontWeight:       true,\n\t      fontSize:         true,\n\t      fontStyle:        true,\n\t      lineHeight:       true,\n\t      textDecoration:   true,\n\t      textAlign:        true,\n\t      backgroundColor:  true\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _set: function(key, value) {\n\t      var i = this._objects.length;\n\t\n\t      if (this.delegatedProperties[key] || key === 'canvas') {\n\t        while (i--) {\n\t          this._objects[i].set(key, value);\n\t        }\n\t      }\n\t      else {\n\t        while (i--) {\n\t          this._objects[i].setOnGroup(key, value);\n\t        }\n\t      }\n\t\n\t      this.callSuper('_set', key, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var objsToObject = this.getObjects().map(function(obj) {\n\t        var originalDefaults = obj.includeDefaultValues;\n\t        obj.includeDefaultValues = obj.group.includeDefaultValues;\n\t        var _obj = obj.toObject(propertiesToInclude);\n\t        obj.includeDefaultValues = originalDefaults;\n\t        return _obj;\n\t      });\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        objects: objsToObject\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance, in dataless mode.\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var objsToObject = this.getObjects().map(function(obj) {\n\t        var originalDefaults = obj.includeDefaultValues;\n\t        obj.includeDefaultValues = obj.group.includeDefaultValues;\n\t        var _obj = obj.toDatalessObject(propertiesToInclude);\n\t        obj.includeDefaultValues = originalDefaults;\n\t        return _obj;\n\t      });\n\t      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n\t        objects: objsToObject\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Renders instance on a given context\n\t     * @param {CanvasRenderingContext2D} ctx context to render instance on\n\t     */\n\t    render: function(ctx) {\n\t      this._transformDone = true;\n\t      this.callSuper('render', ctx);\n\t      this._transformDone = false;\n\t    },\n\t\n\t    /**\n\t     * Decide if the object should cache or not.\n\t     * objectCaching is a global flag, wins over everything\n\t     * needsItsOwnCache should be used when the object drawing method requires\n\t     * a cache step. None of the fabric classes requires it.\n\t     * Generally you do not cache objects in groups because the group outside is cached.\n\t     * @return {Boolean}\n\t     */\n\t    shouldCache: function() {\n\t      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n\t      this.caching = parentCache;\n\t      if (parentCache) {\n\t        for (var i = 0, len = this._objects.length; i < len; i++) {\n\t          if (this._objects[i].willDrawShadow()) {\n\t            this.caching = false;\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return parentCache;\n\t    },\n\t\n\t    /**\n\t     * Check if this object or a child object will cast a shadow\n\t     * @return {Boolean}\n\t     */\n\t    willDrawShadow: function() {\n\t      if (this.callSuper('willDrawShadow')) {\n\t        return true;\n\t      }\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        if (this._objects[i].willDrawShadow()) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Check if this group or its parent group are caching, recursively up\n\t     * @return {Boolean}\n\t     */\n\t    isCaching: function() {\n\t      return this.caching || this.group && this.group.isCaching();\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._renderObject(this._objects[i], ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     */\n\t    isCacheDirty: function() {\n\t      if (this.callSuper('isCacheDirty')) {\n\t        return true;\n\t      }\n\t      if (!this.statefullCache) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        if (this._objects[i].isCacheDirty(true)) {\n\t          if (this._cacheCanvas) {\n\t            // if this group has not a cache canvas there is nothing to clean\n\t            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n\t            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n\t          }\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      ctx.save();\n\t      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t      this.callSuper('_renderControls', ctx, noTransform);\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _renderObject: function(object, ctx) {\n\t      // do not render if object is not visible\n\t      if (!object.visible) {\n\t        return;\n\t      }\n\t\n\t      var originalHasRotatingPoint = object.hasRotatingPoint;\n\t      object.hasRotatingPoint = false;\n\t      object.render(ctx);\n\t      object.hasRotatingPoint = originalHasRotatingPoint;\n\t    },\n\t\n\t    /**\n\t     * Retores original state of each of group objects (original state is that which was before group was created).\n\t     * @private\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    _restoreObjectsState: function() {\n\t      this._objects.forEach(this._restoreObjectState, this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Realises the transform from this group onto the supplied object\n\t     * i.e. it tells you what would happen if the supplied object was in\n\t     * the group, and then the group was destroyed. It mutates the supplied\n\t     * object.\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Object} transformedObject\n\t     */\n\t    realizeTransform: function(object) {\n\t      var matrix = object.calcTransformMatrix(),\n\t          options = fabric.util.qrDecompose(matrix),\n\t          center = new fabric.Point(options.translateX, options.translateY);\n\t      object.flipX = false;\n\t      object.flipY = false;\n\t      object.set('scaleX', options.scaleX);\n\t      object.set('scaleY', options.scaleY);\n\t      object.skewX = options.skewX;\n\t      object.skewY = options.skewY;\n\t      object.angle = options.angle;\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Restores original state of a specified object in group\n\t     * @private\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Group} thisArg\n\t     */\n\t    _restoreObjectState: function(object) {\n\t      this.realizeTransform(object);\n\t      object.setCoords();\n\t      object.hasControls = object.__origHasControls;\n\t      delete object.__origHasControls;\n\t      object.set('active', false);\n\t      delete object.group;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Destroys a group (restoring state of its objects)\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    destroy: function() {\n\t      // when group is destroyed objects needs to get a repaint to be eventually\n\t      // displayed on canvas.\n\t      this._objects.forEach(function(object) {\n\t        object.set('dirty', true);\n\t      });\n\t      return this._restoreObjectsState();\n\t    },\n\t\n\t    /**\n\t     * Saves coordinates of this instance (to be used together with `hasMoved`)\n\t     * @saveCoords\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    saveCoords: function() {\n\t      this._originalLeft = this.get('left');\n\t      this._originalTop = this.get('top');\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Checks whether this group was moved (since `saveCoords` was called last)\n\t     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n\t     */\n\t    hasMoved: function() {\n\t      return this._originalLeft !== this.get('left') ||\n\t             this._originalTop !== this.get('top');\n\t    },\n\t\n\t    /**\n\t     * Sets coordinates of all objects inside group\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    setObjectsCoords: function() {\n\t      var ignoreZoom = true, skipAbsolute = true;\n\t      this.forEachObject(function(object) {\n\t        object.setCoords(ignoreZoom, skipAbsolute);\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcBounds: function(onlyWidthHeight) {\n\t      var aX = [],\n\t          aY = [],\n\t          o, prop,\n\t          props = ['tr', 'br', 'bl', 'tl'],\n\t          i = 0, iLen = this._objects.length,\n\t          j, jLen = props.length,\n\t          ignoreZoom = true;\n\t\n\t      for ( ; i < iLen; ++i) {\n\t        o = this._objects[i];\n\t        o.setCoords(ignoreZoom);\n\t        for (j = 0; j < jLen; j++) {\n\t          prop = props[j];\n\t          aX.push(o.oCoords[prop].x);\n\t          aY.push(o.oCoords[prop].y);\n\t        }\n\t      }\n\t\n\t      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getBounds: function(aX, aY, onlyWidthHeight) {\n\t      var minXY = new fabric.Point(min(aX), min(aY)),\n\t          maxXY = new fabric.Point(max(aX), max(aY)),\n\t          obj = {\n\t            width: (maxXY.x - minXY.x) || 0,\n\t            height: (maxXY.y - minXY.y) || 0\n\t          };\n\t\n\t      if (!onlyWidthHeight) {\n\t        obj.left = minXY.x || 0;\n\t        obj.top = minXY.y || 0;\n\t        if (this.originX === 'center') {\n\t          obj.left += obj.width / 2;\n\t        }\n\t        if (this.originX === 'right') {\n\t          obj.left += obj.width;\n\t        }\n\t        if (this.originY === 'center') {\n\t          obj.top += obj.height / 2;\n\t        }\n\t        if (this.originY === 'bottom') {\n\t          obj.top += obj.height;\n\t        }\n\t      }\n\t      return obj;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(), 'transform=\"',\n\t        /* avoiding styles intentionally */\n\t        this.getSvgTransform(),\n\t        this.getSvgTransformMatrix(),\n\t        '\" style=\"',\n\t        this.getSvgFilter(),\n\t        '\">\\n'\n\t      );\n\t\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        markup.push('\\t', this._objects[i].toSVG(reviver));\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns requested property\n\t     * @param {String} prop Property to get\n\t     * @return {*}\n\t     */\n\t    get: function(prop) {\n\t      if (prop in _lockProperties) {\n\t        if (this[prop]) {\n\t          return this[prop];\n\t        }\n\t        else {\n\t          for (var i = 0, len = this._objects.length; i < len; i++) {\n\t            if (this._objects[i][prop]) {\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t      else {\n\t        if (prop in this.delegatedProperties) {\n\t          return this._objects[0] && this._objects[0].get(prop);\n\t        }\n\t        return this[prop];\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns {@link fabric.Group} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @param {Object} object Object to create a group from\n\t   * @param {Function} [callback] Callback to invoke when an group instance is created\n\t   */\n\t  fabric.Group.fromObject = function(object, callback) {\n\t    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n\t      var options = fabric.util.object.clone(object, true);\n\t      delete options.objects;\n\t      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Group.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var extend = fabric.util.object.extend;\n\t\n\t  if (!global.fabric) {\n\t    global.fabric = { };\n\t  }\n\t\n\t  if (global.fabric.Image) {\n\t    fabric.warn('fabric.Image is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Image class\n\t   * @class fabric.Image\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n\t   * @see {@link fabric.Image#initialize} for constructor definition\n\t   */\n\t  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'image',\n\t\n\t    /**\n\t     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n\t     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n\t     * @type String\n\t     * @default\n\t     */\n\t    crossOrigin: '',\n\t\n\t    /**\n\t     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignX: 'none',\n\t\n\t    /**\n\t     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignY: 'none',\n\t\n\t    /**\n\t     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n\t     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * @type String\n\t     * @default\n\t     */\n\t    meetOrSlice: 'meet',\n\t\n\t    /**\n\t     * Width of a stroke.\n\t     * For image quality a stroke multiple of 2 gives better results.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleX to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleX: 1,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleY to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleY: 1,\n\t\n\t    /**\n\t     * minimum scale factor under which any resizeFilter is triggered to resize the image\n\t     * 0 will disable the automatic resize. 1 will trigger automatically always.\n\t     * number bigger than 1 can be used in case we want to scale with some filter above\n\t     * the natural image dimensions\n\t     * @type Number\n\t     */\n\t    minimumScaleTrigger: 0.5,\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: fabric.Object.prototype.stateProperties.concat(\n\t      'alignX',\n\t      'alignY',\n\t      'meetOrSlice'),\n\t\n\t    /**\n\t     * When `true`, object is cached on an additional canvas.\n\t     * default to false for images\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    objectCaching: false,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLImageElement | String} element Image element\n\t     * @param {Object} [options] Options object\n\t     * @param {function} [callback] callback function to call after eventual filters applied.\n\t     * @return {fabric.Image} thisArg\n\t     */\n\t    initialize: function(element, options, callback) {\n\t      options || (options = { });\n\t      this.filters = [];\n\t      this.resizeFilters = [];\n\t      this.callSuper('initialize', options);\n\t      this._initElement(element, options, callback);\n\t    },\n\t\n\t    /**\n\t     * Returns image element which this instance if based on\n\t     * @return {HTMLImageElement} Image element\n\t     */\n\t    getElement: function() {\n\t      return this._element;\n\t    },\n\t\n\t    /**\n\t     * Sets image element for this instance to a specified one.\n\t     * If filters defined they are applied to new image.\n\t     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n\t     * @param {HTMLImageElement} element\n\t     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setElement: function(element, callback, options) {\n\t\n\t      var _callback, _this;\n\t\n\t      this._element = element;\n\t      this._originalElement = element;\n\t      this._initConfig(options);\n\t\n\t      if (this.resizeFilters.length === 0) {\n\t        _callback = callback;\n\t      }\n\t      else {\n\t        _this = this;\n\t        _callback = function() {\n\t          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n\t        };\n\t      }\n\t\n\t      if (this.filters.length !== 0) {\n\t        this.applyFilters(_callback);\n\t      }\n\t      else if (_callback) {\n\t        _callback(this);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets crossOrigin value (on an instance and corresponding image element)\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setCrossOrigin: function(value) {\n\t      this.crossOrigin = value;\n\t      this._element.crossOrigin = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns original size of an image\n\t     * @return {Object} Object with \"width\" and \"height\" properties\n\t     */\n\t    getOriginalSize: function() {\n\t      var element = this.getElement();\n\t      return {\n\t        width: element.width,\n\t        height: element.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _stroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t      var w = this.width / 2, h = this.height / 2;\n\t      ctx.beginPath();\n\t      ctx.moveTo(-w, -h);\n\t      ctx.lineTo(w, -h);\n\t      ctx.lineTo(w, h);\n\t      ctx.lineTo(-w, h);\n\t      ctx.lineTo(-w, -h);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.save();\n\t      this._setStrokeStyles(ctx);\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var filters = [], resizeFilters = [],\n\t          scaleX = 1, scaleY = 1;\n\t\n\t      this.filters.forEach(function(filterObj) {\n\t        if (filterObj) {\n\t          if (filterObj.type === 'Resize') {\n\t            scaleX *= filterObj.scaleX;\n\t            scaleY *= filterObj.scaleY;\n\t          }\n\t          filters.push(filterObj.toObject());\n\t        }\n\t      });\n\t\n\t      this.resizeFilters.forEach(function(filterObj) {\n\t        filterObj && resizeFilters.push(filterObj.toObject());\n\t      });\n\t      var object = extend(\n\t        this.callSuper(\n\t          'toObject',\n\t          ['crossOrigin', 'alignX', 'alignY', 'meetOrSlice'].concat(propertiesToInclude)\n\t        ), {\n\t          src: this.getSrc(),\n\t          filters: filters,\n\t          resizeFilters: resizeFilters,\n\t        });\n\t\n\t      object.width /= scaleX;\n\t      object.height /= scaleY;\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n\t          preserveAspectRatio = 'none', filtered = true;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left;\n\t        y = this.top;\n\t      }\n\t      if (this.alignX !== 'none' && this.alignY !== 'none') {\n\t        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n\t      }\n\t      markup.push(\n\t        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n\t          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n\t            '\" x=\"', x, '\" y=\"', y,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n\t            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n\t            // so that object's center aligns with container's left/top\n\t            '\" width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n\t          '></image>\\n'\n\t      );\n\t\n\t      if (this.stroke || this.strokeDashArray) {\n\t        var origFill = this.fill;\n\t        this.fill = null;\n\t        markup.push(\n\t          '<rect ',\n\t            'x=\"', x, '\" y=\"', y,\n\t            '\" width=\"', this.width, '\" height=\"', this.height,\n\t            '\" style=\"', this.getSvgStyles(),\n\t          '\"/>\\n'\n\t        );\n\t        this.fill = origFill;\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns source of an image\n\t     * @param {Boolean} filtered indicates if the src is needed for svg\n\t     * @return {String} Source of an image\n\t     */\n\t    getSrc: function(filtered) {\n\t      var element = filtered ? this._element : this._originalElement;\n\t      if (element) {\n\t        return fabric.isLikelyNode ? element._src : element.src;\n\t      }\n\t      else {\n\t        return this.src || '';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets source of an image\n\t     * @param {String} src Source string (URL)\n\t     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setSrc: function(src, callback, options) {\n\t      fabric.util.loadImage(src, function(img) {\n\t        return this.setElement(img, callback, options);\n\t      }, this, options && options.crossOrigin);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * Applies filters assigned to this image (from \"filters\" array)\n\t     * @method applyFilters\n\t     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Array} filters to be applied\n\t     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n\t     * @param {Boolean} forResizing\n\t     * @return {CanvasElement} canvasEl to be drawn immediately\n\t     * @chainable\n\t     */\n\t    applyFilters: function(callback, filters, imgElement, forResizing) {\n\t\n\t      filters = filters || this.filters;\n\t      imgElement = imgElement || this._originalElement;\n\t\n\t      if (!imgElement) {\n\t        return;\n\t      }\n\t\n\t      var replacement = fabric.util.createImage(),\n\t          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n\t          minimumScale = this.minimumScaleTrigger / retinaScaling,\n\t          _this = this, scaleX, scaleY;\n\t\n\t      if (filters.length === 0) {\n\t        this._element = imgElement;\n\t        callback && callback(this);\n\t        return imgElement;\n\t      }\n\t\n\t      var canvasEl = fabric.util.createCanvasElement();\n\t      canvasEl.width = imgElement.width;\n\t      canvasEl.height = imgElement.height;\n\t      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\t\n\t      filters.forEach(function(filter) {\n\t        if (!filter) {\n\t          return;\n\t        }\n\t        if (forResizing) {\n\t          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n\t          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n\t          if (scaleX * retinaScaling < 1) {\n\t            scaleX *= retinaScaling;\n\t          }\n\t          if (scaleY * retinaScaling < 1) {\n\t            scaleY *= retinaScaling;\n\t          }\n\t        }\n\t        else {\n\t          scaleX = filter.scaleX;\n\t          scaleY = filter.scaleY;\n\t        }\n\t        filter.applyTo(canvasEl, scaleX, scaleY);\n\t        if (!forResizing && filter.type === 'Resize') {\n\t          _this.width *= filter.scaleX;\n\t          _this.height *= filter.scaleY;\n\t        }\n\t      });\n\t\n\t      /** @ignore */\n\t      replacement.width = canvasEl.width;\n\t      replacement.height = canvasEl.height;\n\t      if (fabric.isLikelyNode) {\n\t        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n\t        // onload doesn't fire in some node versions, so we invoke callback manually\n\t        _this._element = replacement;\n\t        !forResizing && (_this._filteredEl = replacement);\n\t        callback && callback(_this);\n\t      }\n\t      else {\n\t        replacement.onload = function() {\n\t          _this._element = replacement;\n\t          !forResizing && (_this._filteredEl = replacement);\n\t          callback && callback(_this);\n\t          replacement.onload = canvasEl = null;\n\t        };\n\t        replacement.src = canvasEl.toDataURL('image/png');\n\t      }\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\t\n\t      x = (noTransform ? this.left : -this.width / 2);\n\t      y = (noTransform ? this.top : -this.height / 2);\n\t\n\t      if (this.meetOrSlice === 'slice') {\n\t        ctx.beginPath();\n\t        ctx.rect(x, y, this.width, this.height);\n\t        ctx.clip();\n\t      }\n\t\n\t      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n\t        this._lastScaleX = this.scaleX;\n\t        this._lastScaleY = this.scaleY;\n\t        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n\t      }\n\t      else {\n\t        elementToDraw = this._element;\n\t      }\n\t      elementToDraw && ctx.drawImage(elementToDraw,\n\t                                     x + imageMargins.marginX,\n\t                                     y + imageMargins.marginY,\n\t                                     imageMargins.width,\n\t                                     imageMargins.height\n\t                                    );\n\t\n\t      this._stroke(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private, needed to check if image needs resize\n\t     */\n\t    _needsResize: function() {\n\t      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findMargins: function() {\n\t      var width = this.width, height = this.height, scales,\n\t          scale, marginX = 0, marginY = 0;\n\t\n\t      if (this.alignX !== 'none' || this.alignY !== 'none') {\n\t        scales = [this.width / this._element.width, this.height / this._element.height];\n\t        scale = this.meetOrSlice === 'meet'\n\t                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n\t        width = this._element.width * scale;\n\t        height = this._element.height * scale;\n\t        if (this.alignX === 'Mid') {\n\t          marginX = (this.width - width) / 2;\n\t        }\n\t        if (this.alignX === 'Max') {\n\t          marginX = this.width - width;\n\t        }\n\t        if (this.alignY === 'Mid') {\n\t          marginY = (this.height - height) / 2;\n\t        }\n\t        if (this.alignY === 'Max') {\n\t          marginY = this.height - height;\n\t        }\n\t      }\n\t      return {\n\t        width:  width,\n\t        height: height,\n\t        marginX: marginX,\n\t        marginY: marginY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _resetWidthHeight: function() {\n\t      var element = this.getElement();\n\t\n\t      this.set('width', element.width);\n\t      this.set('height', element.height);\n\t    },\n\t\n\t    /**\n\t     * The Image class's initialization method. This method is automatically\n\t     * called by the constructor.\n\t     * @private\n\t     * @param {HTMLImageElement|String} element The element representing the image\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initElement: function(element, options, callback) {\n\t      this.setElement(fabric.util.getById(element), callback, options);\n\t      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initConfig: function(options) {\n\t      options || (options = { });\n\t      this.setOptions(options);\n\t      this._setWidthHeight(options);\n\t      if (this._element && this.crossOrigin) {\n\t        this._element.crossOrigin = this.crossOrigin;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Array} filters to be initialized\n\t     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n\t     */\n\t    _initFilters: function(filters, callback) {\n\t      if (filters && filters.length) {\n\t        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }, 'fabric.Image.filters');\n\t      }\n\t      else {\n\t        callback && callback();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Object with width/height properties\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      this.width = 'width' in options\n\t        ? options.width\n\t        : (this.getElement()\n\t            ? this.getElement().width || 0\n\t            : 0);\n\t\n\t      this.height = 'height' in options\n\t        ? options.height\n\t        : (this.getElement()\n\t            ? this.getElement().height || 0\n\t            : 0);\n\t    },\n\t  });\n\t\n\t  /**\n\t   * Default CSS class name for canvas\n\t   * @static\n\t   * @type String\n\t   * @default\n\t   */\n\t  fabric.Image.CSS_CANVAS = 'canvas-img';\n\t\n\t  /**\n\t   * Alias for getSrc\n\t   * @static\n\t   */\n\t  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from its object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} callback Callback to invoke when an image instance is created\n\t   */\n\t  fabric.Image.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.src, function(img, error) {\n\t      if (error) {\n\t        callback && callback(null, error);\n\t        return;\n\t      }\n\t      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n\t        object.filters = filters || [];\n\t        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n\t          object.resizeFilters = resizeFilters || [];\n\t          return new fabric.Image(img, object, callback);\n\t        });\n\t      });\n\t    }, null, object.crossOrigin);\n\t  };\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from an URL string\n\t   * @static\n\t   * @param {String} url URL to create an image from\n\t   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n\t   * @param {Object} [imgOptions] Options object\n\t   */\n\t  fabric.Image.fromURL = function(url, callback, imgOptions) {\n\t    fabric.util.loadImage(url, function(img) {\n\t      callback && callback(new fabric.Image(img, imgOptions));\n\t    }, null, imgOptions && imgOptions.crossOrigin);\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n\t   * @static\n\t   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n\t   */\n\t  fabric.Image.ATTRIBUTE_NAMES =\n\t    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Image} instance from an SVG element\n\t   * @static\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Function} callback Callback to execute when fabric.Image object is created\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Image} Instance of fabric.Image\n\t   */\n\t  fabric.Image.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n\t        preserveAR;\n\t\n\t    if (parsedAttributes.preserveAspectRatio) {\n\t      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n\t      extend(parsedAttributes, preserveAR);\n\t    }\n\t\n\t    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n\t      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.async = true;\n\t\n\t  /**\n\t   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n\t   * @static\n\t   * @type Number\n\t   * @default\n\t   */\n\t  fabric.Image.pngCompression = 1;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * @private\n\t   * @return {Number} angle value\n\t   */\n\t  _getAngleValueForStraighten: function() {\n\t    var angle = this.getAngle() % 360;\n\t    if (angle > 0) {\n\t      return Math.round((angle - 1) / 90) * 90;\n\t    }\n\t    return Math.round(angle / 90) * 90;\n\t  },\n\t\n\t  /**\n\t   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  straighten: function() {\n\t    this.setAngle(this._getAngleValueForStraighten());\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Object.prototype.straighten} but with animation\n\t   * @param {Object} callbacks Object with callback functions\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraighten: function(callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: this.get('angle'),\n\t      endValue: this._getAngleValueForStraighten(),\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        _this.setAngle(value);\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        _this.setCoords();\n\t        onComplete();\n\t      },\n\t      onStart: function() {\n\t        _this.set('active', false);\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Straightens object, then rerenders canvas\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  straightenObject: function (object) {\n\t    object.straighten();\n\t    this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraightenObject: function (object) {\n\t    object.fxStraighten({\n\t      onChange: this.renderAll.bind(this)\n\t    });\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * @namespace fabric.Image.filters\n\t * @memberOf fabric.Image\n\t * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n\t * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t */\n\tfabric.Image.filters = fabric.Image.filters || { };\n\t\n\t/**\n\t * Root filter class from which all filter classes inherit from\n\t * @class fabric.Image.filters.BaseFilter\n\t * @memberOf fabric.Image.filters\n\t */\n\tfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\t\n\t  /**\n\t   * Filter type\n\t   * @param {String} type\n\t   * @default\n\t   */\n\t  type: 'BaseFilter',\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   */\n\t  initialize: function(options) {\n\t    if (options) {\n\t      this.setOptions(options);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets filter's properties from options\n\t   * @param {Object} [options] Options object\n\t   */\n\t  setOptions: function(options) {\n\t    for (var prop in options) {\n\t      this[prop] = options[prop];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of an instance\n\t   * @return {Object} Object representation of an instance\n\t   */\n\t  toObject: function() {\n\t    return { type: this.type };\n\t  },\n\t\n\t  /**\n\t   * Returns a JSON representation of an instance\n\t   * @return {Object} JSON\n\t   */\n\t  toJSON: function() {\n\t    // delegate, not alias\n\t    return this.toObject();\n\t  }\n\t});\n\t\n\tfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n\t  var filter = new fabric.Image.filters[object.type](object);\n\t  callback && callback(filter);\n\t  return filter;\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Brightness filter class\n\t   * @class fabric.Image.filters.Brightness\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Brightness({\n\t   *   brightness: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Brightness',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Brightness.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.brightness=0] Value to brighten the image up (-255..255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.brightness = options.brightness || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          brightness = this.brightness;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] += brightness;\n\t        data[i + 1] += brightness;\n\t        data[i + 2] += brightness;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        brightness: this.brightness\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n\t   */\n\t  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n\t   * @class fabric.Image.filters.Convolute\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Sharpen filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 0, -1,  0,\n\t   *            -1,  5, -1,\n\t   *             0, -1,  0 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Blur filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter with opaqueness</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   opaque: true,\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Convolute',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Convolute.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n\t     * @param {Array} [options.matrix] Filter matrix\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.opaque = options.opaque;\n\t      this.matrix = options.matrix || [\n\t        0, 0, 0,\n\t        0, 1, 0,\n\t        0, 0, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t\n\t      var weights = this.matrix,\n\t          context = canvasEl.getContext('2d'),\n\t          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t\n\t          side = Math.round(Math.sqrt(weights.length)),\n\t          halfSide = Math.floor(side / 2),\n\t          src = pixels.data,\n\t          sw = pixels.width,\n\t          sh = pixels.height,\n\t          output = context.createImageData(sw, sh),\n\t          dst = output.data,\n\t          // go through the destination image pixels\n\t          alphaFac = this.opaque ? 1 : 0,\n\t          r, g, b, a, dstOff,\n\t          scx, scy, srcOff, wt;\n\t\n\t      for (var y = 0; y < sh; y++) {\n\t        for (var x = 0; x < sw; x++) {\n\t          dstOff = (y * sw + x) * 4;\n\t          // calculate the weighed sum of the source image pixels that\n\t          // fall under the convolution matrix\n\t          r = 0; g = 0; b = 0; a = 0;\n\t\n\t          for (var cy = 0; cy < side; cy++) {\n\t            for (var cx = 0; cx < side; cx++) {\n\t              scy = y + cy - halfSide;\n\t              scx = x + cx - halfSide;\n\t\n\t              // eslint-disable-next-line max-depth\n\t              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n\t                continue;\n\t              }\n\t\n\t              srcOff = (scy * sw + scx) * 4;\n\t              wt = weights[cy * side + cx];\n\t\n\t              r += src[srcOff] * wt;\n\t              g += src[srcOff + 1] * wt;\n\t              b += src[srcOff + 2] * wt;\n\t              a += src[srcOff + 3] * wt;\n\t            }\n\t          }\n\t          dst[dstOff] = r;\n\t          dst[dstOff + 1] = g;\n\t          dst[dstOff + 2] = b;\n\t          dst[dstOff + 3] = a + alphaFac * (255 - a);\n\t        }\n\t      }\n\t\n\t      context.putImageData(output, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        opaque: this.opaque,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n\t   */\n\t  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * GradientTransparency filter class\n\t   * @class fabric.Image.filters.GradientTransparency\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.GradientTransparency({\n\t   *   threshold: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t   // eslint-disable-next-line max-len\n\t  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'GradientTransparency',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=100] Threshold value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 100;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          total = data.length;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i + 3] = threshold + 255 * (total - i) / total;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n\t   */\n\t  fabric.Image.filters.GradientTransparency.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Grayscale image filter class\n\t   * @class fabric.Image.filters.Grayscale\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Grayscale();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Grayscale',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Grayscale.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          len = imageData.width * imageData.height * 4,\n\t          index = 0,\n\t          average;\n\t\n\t      while (index < len) {\n\t        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n\t        data[index]     = average;\n\t        data[index + 1] = average;\n\t        data[index + 2] = average;\n\t        index += 4;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n\t   */\n\t  fabric.Image.filters.Grayscale.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Grayscale';\n\t    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Invert filter class\n\t   * @class fabric.Image.filters.Invert\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Invert();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Invert',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Invert.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i] = 255 - data[i];\n\t        data[i + 1] = 255 - data[i + 1];\n\t        data[i + 2] = 255 - data[i + 2];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n\t   */\n\t  fabric.Image.filters.Invert.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Invert';\n\t    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Mask filter class\n\t   * See http://resources.aleph-1.com/mask/\n\t   * @class fabric.Image.filters.Mask\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n\t   */\n\t  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Mask',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Mask.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {fabric.Image} [options.mask] Mask image object\n\t     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.mask = options.mask;\n\t      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      if (!this.mask) {\n\t        return;\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          maskEl = this.mask.getElement(),\n\t          maskCanvasEl = fabric.util.createCanvasElement(),\n\t          channel = this.channel,\n\t          i,\n\t          iLen = imageData.width * imageData.height * 4;\n\t\n\t      maskCanvasEl.width = canvasEl.width;\n\t      maskCanvasEl.height = canvasEl.height;\n\t\n\t      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\t\n\t      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          maskData = maskImageData.data;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i + 3] = maskData[i + channel];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        mask: this.mask.toObject(),\n\t        channel: this.channel\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n\t   */\n\t  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.mask.src, function(img) {\n\t      object.mask = new fabric.Image(img, object.mask);\n\t      return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.filters.Mask.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Noise filter class\n\t   * @class fabric.Image.filters.Noise\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Noise({\n\t   *   noise: 700\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Noise',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Noise.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.noise=0] Noise value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.noise = options.noise || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          noise = this.noise, rand;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        rand = (0.5 - Math.random()) * noise;\n\t\n\t        data[i] += rand;\n\t        data[i + 1] += rand;\n\t        data[i + 2] += rand;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        noise: this.noise\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n\t   */\n\t  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Pixelate filter class\n\t   * @class fabric.Image.filters.Pixelate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Pixelate({\n\t   *   blocksize: 8\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Pixelate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Pixelate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.blocksize = options.blocksize || 4;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = imageData.height,\n\t          jLen = imageData.width,\n\t          index, i, j, r, g, b, a;\n\t\n\t      for (i = 0; i < iLen; i += this.blocksize) {\n\t        for (j = 0; j < jLen; j += this.blocksize) {\n\t\n\t          index = (i * 4) * jLen + (j * 4);\n\t\n\t          r = data[index];\n\t          g = data[index + 1];\n\t          b = data[index + 2];\n\t          a = data[index + 3];\n\t\n\t          /*\n\t           blocksize: 4\n\t\n\t           [1,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [1,1,1,1,1]\n\t           */\n\t\n\t          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n\t            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n\t              index = (_i * 4) * jLen + (_j * 4);\n\t              data[index] = r;\n\t              data[index + 1] = g;\n\t              data[index + 2] = b;\n\t              data[index + 3] = a;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        blocksize: this.blocksize\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n\t   */\n\t  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Remove white filter class\n\t   * @class fabric.Image.filters.RemoveWhite\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.RemoveWhite({\n\t   *   threshold: 40,\n\t   *   distance: 140\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'RemoveWhite',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=30] Threshold value\n\t     * @param {Number} [options.distance=20] Distance value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 30;\n\t      this.distance = options.distance || 20;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          distance = this.distance,\n\t          limit = 255 - threshold,\n\t          abs = Math.abs,\n\t          r, g, b;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (r > limit &&\n\t            g > limit &&\n\t            b > limit &&\n\t            abs(r - g) < distance &&\n\t            abs(r - b) < distance &&\n\t            abs(g - b) < distance\n\t        ) {\n\t          data[i + 3] = 0;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold,\n\t        distance: this.distance\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n\t   */\n\t  fabric.Image.filters.RemoveWhite.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Sepia filter class\n\t   * @class fabric.Image.filters.Sepia\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, avg;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n\t        data[i] = avg + 100;\n\t        data[i + 1] = avg + 50;\n\t        data[i + 2] = avg + 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n\t   */\n\t  fabric.Image.filters.Sepia.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Sepia';\n\t    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Sepia2 filter class\n\t   * @class fabric.Image.filters.Sepia2\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia2();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia2',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, r, g, b;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n\t        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n\t        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n\t   */\n\t  fabric.Image.filters.Sepia2.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Sepia2';\n\t    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Tint filter class\n\t   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n\t   * @class fabric.Image.filters.Tint\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Tint filter with hex color and opacity</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: '#3513B0',\n\t   *   opacity: 0.5\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Tint filter with rgba color</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: 'rgba(53, 21, 176, 0.5)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Tint',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Tint.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to tint the image with\n\t     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t      this.opacity = typeof options.opacity !== 'undefined'\n\t                      ? options.opacity\n\t                      : new fabric.Color(this.color).getAlpha();\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          tintR, tintG, tintB,\n\t          r, g, b, alpha1,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      tintR = source[0] * this.opacity;\n\t      tintG = source[1] * this.opacity;\n\t      tintB = source[2] * this.opacity;\n\t\n\t      alpha1 = 1 - this.opacity;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        // alpha compositing\n\t        data[i] = tintR + r * alpha1;\n\t        data[i + 1] = tintG + g * alpha1;\n\t        data[i + 2] = tintB + b * alpha1;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color,\n\t        opacity: this.opacity\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n\t   */\n\t  fabric.Image.filters.Tint.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Multiply filter class\n\t   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n\t   * @class fabric.Image.filters.Multiply\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example <caption>Multiply filter with hex color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: '#F0F'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Multiply filter with rgb color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: 'rgb(53, 21, 176)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Multiply',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Multiply.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i] *= source[0] / 255;\n\t        data[i + 1] *= source[1] / 255;\n\t        data[i + 2] *= source[2] / 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n\t   */\n\t  fabric.Image.filters.Multiply.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t  'use strict';\n\t\n\t  var fabric = global.fabric,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Color Blend filter class\n\t   * @class fabric.Image.filter.Blend\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  color: '#000',\n\t   *  mode: 'multiply'\n\t   * });\n\t   *\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  image: fabricImageObject,\n\t   *  mode: 'multiply',\n\t   *  alpha: 0.5\n\t   * });\n\t\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t\n\t  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n\t    type: 'Blend',\n\t\n\t    initialize: function(options) {\n\t      options = options || {};\n\t      this.color = options.color || '#000';\n\t      this.image = options.image || false;\n\t      this.mode = options.mode || 'multiply';\n\t      this.alpha = options.alpha || 1;\n\t    },\n\t\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          tr, tg, tb,\n\t          r, g, b,\n\t          _r, _g, _b,\n\t          source,\n\t          isImage = false;\n\t\n\t      if (this.image) {\n\t        // Blend images\n\t        isImage = true;\n\t\n\t        var _el = fabric.util.createCanvasElement();\n\t        _el.width = this.image.width;\n\t        _el.height = this.image.height;\n\t\n\t        var tmpCanvas = new fabric.StaticCanvas(_el);\n\t        tmpCanvas.add(this.image);\n\t        var context2 =  tmpCanvas.getContext('2d');\n\t        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n\t      }\n\t      else {\n\t        // Blend color\n\t        source = new fabric.Color(this.color).getSource();\n\t\n\t        tr = source[0] * this.alpha;\n\t        tg = source[1] * this.alpha;\n\t        tb = source[2] * this.alpha;\n\t      }\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (isImage) {\n\t          tr = source[i] * this.alpha;\n\t          tg = source[i + 1] * this.alpha;\n\t          tb = source[i + 2] * this.alpha;\n\t        }\n\t\n\t        switch (this.mode) {\n\t          case 'multiply':\n\t            data[i] = r * tr / 255;\n\t            data[i + 1] = g * tg / 255;\n\t            data[i + 2] = b * tb / 255;\n\t            break;\n\t          case 'screen':\n\t            data[i] = 1 - (1 - r) * (1 - tr);\n\t            data[i + 1] = 1 - (1 - g) * (1 - tg);\n\t            data[i + 2] = 1 - (1 - b) * (1 - tb);\n\t            break;\n\t          case 'add':\n\t            data[i] = Math.min(255, r + tr);\n\t            data[i + 1] = Math.min(255, g + tg);\n\t            data[i + 2] = Math.min(255, b + tb);\n\t            break;\n\t          case 'diff':\n\t          case 'difference':\n\t            data[i] = Math.abs(r - tr);\n\t            data[i + 1] = Math.abs(g - tg);\n\t            data[i + 2] = Math.abs(b - tb);\n\t            break;\n\t          case 'subtract':\n\t            _r = r - tr;\n\t            _g = g - tg;\n\t            _b = b - tb;\n\t\n\t            data[i] = (_r < 0) ? 0 : _r;\n\t            data[i + 1] = (_g < 0) ? 0 : _g;\n\t            data[i + 2] = (_b < 0) ? 0 : _b;\n\t            break;\n\t          case 'darken':\n\t            data[i] = Math.min(r, tr);\n\t            data[i + 1] = Math.min(g, tg);\n\t            data[i + 2] = Math.min(b, tb);\n\t            break;\n\t          case 'lighten':\n\t            data[i] = Math.max(r, tr);\n\t            data[i + 1] = Math.max(g, tg);\n\t            data[i + 2] = Math.max(b, tb);\n\t            break;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        color: this.color,\n\t        image: this.image,\n\t        mode: this.mode,\n\t        alpha: this.alpha\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Blend} Instance of fabric.Image.filters.Blend\n\t   */\n\t  fabric.Image.filters.Blend.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n\t      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n\t      ceil = Math.ceil,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Resize image filter class\n\t   * @class fabric.Image.filters.Resize\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Resize();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Resize',\n\t\n\t    /**\n\t     * Resize type\n\t     * @param {String} resizeType\n\t     * @default\n\t     */\n\t    resizeType: 'hermite',\n\t\n\t    /**\n\t     * Scale factor for resizing, x axis\n\t     * @param {Number} scaleX\n\t     * @default\n\t     */\n\t    scaleX: 0,\n\t\n\t    /**\n\t     * Scale factor for resizing, y axis\n\t     * @param {Number} scaleY\n\t     * @default\n\t     */\n\t    scaleY: 0,\n\t\n\t    /**\n\t     * LanczosLobes parameter for lanczos filter\n\t     * @param {Number} lanczosLobes\n\t     * @default\n\t     */\n\t    lanczosLobes: 3,\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Resize.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} scaleX\n\t     * @param {Number} scaleY\n\t     */\n\t    applyTo: function(canvasEl, scaleX, scaleY) {\n\t      if (scaleX === 1 && scaleY === 1) {\n\t        return;\n\t      }\n\t\n\t      this.rcpScaleX = 1 / scaleX;\n\t      this.rcpScaleY = 1 / scaleY;\n\t\n\t      var oW = canvasEl.width, oH = canvasEl.height,\n\t          dW = round(oW * scaleX), dH = round(oH * scaleY),\n\t          imageData;\n\t\n\t      if (this.resizeType === 'sliceHack') {\n\t        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'hermite') {\n\t        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'bilinear') {\n\t        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'lanczos') {\n\t        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      canvasEl.width = dW;\n\t      canvasEl.height = dH;\n\t      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Filter sliceByTwo\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n\t      var context = canvasEl.getContext('2d'), imageData,\n\t          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n\t          doneW = false, doneH = false, stepW = oW, stepH = oH,\n\t          tmpCanvas = fabric.util.createCanvasElement(),\n\t          tmpCtx = tmpCanvas.getContext('2d');\n\t      dW = floor(dW);\n\t      dH = floor(dH);\n\t      tmpCanvas.width = max(dW, oW);\n\t      tmpCanvas.height = max(dH, oH);\n\t\n\t      if (dW > oW) {\n\t        multW = 2;\n\t        signW = -1;\n\t      }\n\t      if (dH > oH) {\n\t        multH = 2;\n\t        signH = -1;\n\t      }\n\t      imageData = context.getImageData(0, 0, oW, oH);\n\t      canvasEl.width = max(dW, oW);\n\t      canvasEl.height = max(dH, oH);\n\t      context.putImageData(imageData, 0, 0);\n\t\n\t      while (!doneW || !doneH) {\n\t        oW = stepW;\n\t        oH = stepH;\n\t        if (dW * signW < floor(stepW * multW * signW)) {\n\t          stepW = floor(stepW * multW);\n\t        }\n\t        else {\n\t          stepW = dW;\n\t          doneW = true;\n\t        }\n\t        if (dH * signH < floor(stepH * multH * signH)) {\n\t          stepH = floor(stepH * multH);\n\t        }\n\t        else {\n\t          stepH = dH;\n\t          doneH = true;\n\t        }\n\t        imageData = context.getImageData(0, 0, oW, oH);\n\t        tmpCtx.putImageData(imageData, 0, 0);\n\t        context.clearRect(0, 0, stepW, stepH);\n\t        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n\t      }\n\t      return context.getImageData(0, 0, dW, dH);\n\t    },\n\t\n\t    /**\n\t     * Filter lanczosResize\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\t\n\t      function lanczosCreate(lobes) {\n\t        return function(x) {\n\t          if (x > lobes) {\n\t            return 0;\n\t          }\n\t          x *= Math.PI;\n\t          if (abs(x) < 1e-16) {\n\t            return 1;\n\t          }\n\t          var xx = x / lobes;\n\t          return sin(x) * sin(xx) / x / xx;\n\t        };\n\t      }\n\t\n\t      function process(u) {\n\t        var v, i, weight, idx, a, red, green,\n\t            blue, alpha, fX, fY;\n\t        center.x = (u + 0.5) * ratioX;\n\t        icenter.x = floor(center.x);\n\t        for (v = 0; v < dH; v++) {\n\t          center.y = (v + 0.5) * ratioY;\n\t          icenter.y = floor(center.y);\n\t          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n\t          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n\t            if (i < 0 || i >= oW) {\n\t              continue;\n\t            }\n\t            fX = floor(1000 * abs(i - center.x));\n\t            if (!cacheLanc[fX]) {\n\t              cacheLanc[fX] = { };\n\t            }\n\t            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n\t              if (j < 0 || j >= oH) {\n\t                continue;\n\t              }\n\t              fY = floor(1000 * abs(j - center.y));\n\t              if (!cacheLanc[fX][fY]) {\n\t                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n\t              }\n\t              weight = cacheLanc[fX][fY];\n\t              if (weight > 0) {\n\t                idx = (j * oW + i) * 4;\n\t                a += weight;\n\t                red += weight * srcData[idx];\n\t                green += weight * srcData[idx + 1];\n\t                blue += weight * srcData[idx + 2];\n\t                alpha += weight * srcData[idx + 3];\n\t              }\n\t            }\n\t          }\n\t          idx = (v * dW + u) * 4;\n\t          destData[idx] = red / a;\n\t          destData[idx + 1] = green / a;\n\t          destData[idx + 2] = blue / a;\n\t          destData[idx + 3] = alpha / a;\n\t        }\n\t\n\t        if (++u < dW) {\n\t          return process(u);\n\t        }\n\t        else {\n\t          return destImg;\n\t        }\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          srcImg = context.getImageData(0, 0, oW, oH),\n\t          destImg = context.getImageData(0, 0, dW, dH),\n\t          srcData = srcImg.data, destData = destImg.data,\n\t          lanczos = lanczosCreate(this.lanczosLobes),\n\t          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n\t          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n\t          range2X = ceil(ratioX * this.lanczosLobes / 2),\n\t          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n\t          cacheLanc = { }, center = { }, icenter = { };\n\t\n\t      return process(0);\n\t    },\n\t\n\t    /**\n\t     * bilinearFiltering\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n\t      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n\t          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n\t          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n\t          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n\t          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n\t          destPixels = destImage.data;\n\t      for (i = 0; i < dH; i++) {\n\t        for (j = 0; j < dW; j++) {\n\t          x = floor(ratioX * j);\n\t          y = floor(ratioY * i);\n\t          xDiff = ratioX * j - x;\n\t          yDiff = ratioY * i - y;\n\t          origPix = 4 * (y * oW + x);\n\t\n\t          for (chnl = 0; chnl < 4; chnl++) {\n\t            a = pixels[origPix + chnl];\n\t            b = pixels[origPix + 4 + chnl];\n\t            c = pixels[origPix + w4 + chnl];\n\t            d = pixels[origPix + w4 + 4 + chnl];\n\t            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n\t                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n\t            destPixels[offset++] = color;\n\t          }\n\t        }\n\t      }\n\t      return destImage;\n\t    },\n\t\n\t    /**\n\t     * hermiteFastResize\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n\t      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n\t          ratioWHalf = ceil(ratioW / 2),\n\t          ratioHHalf = ceil(ratioH / 2),\n\t          context = canvasEl.getContext('2d'),\n\t          img = context.getImageData(0, 0, oW, oH), data = img.data,\n\t          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n\t      for (var j = 0; j < dH; j++) {\n\t        for (var i = 0; i < dW; i++) {\n\t          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n\t              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n\t          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n\t            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n\t                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n\t            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n\t              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n\t                  w = sqrt(w0 + dx * dx);\n\t              /* eslint-disable max-depth */\n\t              if (w > 1 && w < -1) {\n\t                continue;\n\t              }\n\t              //hermite filter\n\t              weight = 2 * w * w * w - 3 * w * w + 1;\n\t              if (weight > 0) {\n\t                dx = 4 * (xx + yy * oW);\n\t                //alpha\n\t                gxA += weight * data[dx + 3];\n\t                weightsAlpha += weight;\n\t                //colors\n\t                if (data[dx + 3] < 255) {\n\t                  weight = weight * data[dx + 3] / 250;\n\t                }\n\t                gxR += weight * data[dx];\n\t                gxG += weight * data[dx + 1];\n\t                gxB += weight * data[dx + 2];\n\t                weights += weight;\n\t              }\n\t              /* eslint-enable max-depth */\n\t            }\n\t          }\n\t          data2[x2] = gxR / weights;\n\t          data2[x2 + 1] = gxG / weights;\n\t          data2[x2 + 2] = gxB / weights;\n\t          data2[x2 + 3] = gxA / weightsAlpha;\n\t        }\n\t      }\n\t      return img2;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        scaleX: this.scaleX,\n\t        scaleY: this.scaleY,\n\t        resizeType: this.resizeType,\n\t        lanczosLobes: this.lanczosLobes\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n\t   */\n\t  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Color Matrix filter class\n\t   * @class fabric.Image.filters.ColorMatrix\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n\t   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n\t   * @example <caption>Kodachrome filter</caption>\n\t   * var filter = new fabric.Image.filters.ColorMatrix({\n\t   *  matrix: [\n\t       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n\t       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n\t       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n\t       0, 0, 0, 1, 0\n\t      ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'ColorMatrix',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n\t     */\n\t    initialize: function( options ) {\n\t      options || ( options = {} );\n\t      this.matrix = options.matrix || [\n\t        1, 0, 0, 0, 0,\n\t        0, 1, 0, 0, 0,\n\t        0, 0, 1, 0, 0,\n\t        0, 0, 0, 1, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function( canvasEl ) {\n\t      var context = canvasEl.getContext( '2d' ),\n\t          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n\t          data = imageData.data,\n\t          iLen = data.length,\n\t          i,\n\t          r,\n\t          g,\n\t          b,\n\t          a,\n\t          m = this.matrix;\n\t\n\t      for ( i = 0; i < iLen; i += 4 ) {\n\t        r = data[ i ];\n\t        g = data[ i + 1 ];\n\t        b = data[ i + 2 ];\n\t        a = data[ i + 3 ];\n\t\n\t        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n\t        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n\t        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n\t        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n\t      }\n\t\n\t      context.putImageData( imageData, 0, 0 );\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        type: this.type,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] function to invoke after filter creation\n\t   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n\t   */\n\t  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Contrast filter class\n\t   * @class fabric.Image.filters.Contrast\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Contrast({\n\t   *   contrast: 40\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Contrast',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Contrast.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.contrast=0] Value to contrast the image up (-255...255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.contrast = options.contrast || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          contrastF = 259 * (this.contrast + 255) / (255 * (259 - this.contrast));\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] = contrastF * (data[i] - 128) + 128;\n\t        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n\t        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        contrast: this.contrast\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n\t   */\n\t  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Saturate filter class\n\t   * @class fabric.Image.filters.Saturate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Saturate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Saturate({\n\t   *   saturate: 100\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Saturate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Saturate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Saturate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.saturate=0] Value to saturate the image (-100...100)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.saturate = options.saturate || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          max, adjust = -this.saturate * 0.01;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        max = Math.max(data[i], data[i + 1], data[i + 2]);\n\t        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n\t        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n\t        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        saturate: this.saturate\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Saturate} Instance of fabric.Image.filters.Saturate\n\t   */\n\t  fabric.Image.filters.Saturate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t      MIN_TEXT_WIDTH = 2;\n\t\n\t  if (fabric.Text) {\n\t    fabric.warn('fabric.Text is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Text class\n\t   * @class fabric.Text\n\t   * @extends fabric.Object\n\t   * @return {fabric.Text} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n\t   * @see {@link fabric.Text#initialize} for constructor definition\n\t   */\n\t  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\t\n\t    /**\n\t     * Properties which when set cause object to change dimensions\n\t     * @type Object\n\t     * @private\n\t     */\n\t    _dimensionAffectingProps: [\n\t      'fontSize',\n\t      'fontWeight',\n\t      'fontFamily',\n\t      'fontStyle',\n\t      'lineHeight',\n\t      'text',\n\t      'charSpacing',\n\t      'textAlign'\n\t    ],\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reNewline: /\\r?\\n/,\n\t\n\t    /**\n\t     * Use this regular expression to filter for whitespace that is not a new line.\n\t     * Mostly used when text is 'justify' aligned.\n\t     * @private\n\t     */\n\t    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\t\n\t    /**\n\t     * Retrieves object's fontSize\n\t     * @method getFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font size (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontSize\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} fontSize Font size (in pixels)\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontWeight\n\t     * @method getFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {(String|Number)} Font weight\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontWeight\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {(Number|String)} fontWeight Font weight\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontFamily\n\t     * @method getFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font family\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontFamily\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontFamily Font family\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's text\n\t     * @method getText\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} text\n\t     */\n\t\n\t    /**\n\t     * Sets object's text\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setText\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} text Text\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textDecoration\n\t     * @method getTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text decoration\n\t     */\n\t\n\t    /**\n\t     * Sets object's textDecoration\n\t     * @method setTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textDecoration Text decoration\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontStyle\n\t     * @method getFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font style\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontStyle\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontStyle Font style\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's lineHeight\n\t     * @method getLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {Number} Line height\n\t     */\n\t\n\t    /**\n\t     * Sets object's lineHeight\n\t     * @method setLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} lineHeight Line height\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textAlign\n\t     * @method getTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text alignment\n\t     */\n\t\n\t    /**\n\t     * Sets object's textAlign\n\t     * @method setTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textAlign Text alignment\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textBackgroundColor\n\t     * @method getTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text background color\n\t     */\n\t\n\t    /**\n\t     * Sets object's textBackgroundColor\n\t     * @method setTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textBackgroundColor Text background color\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                 'text',\n\t\n\t    /**\n\t     * Font size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    fontSize:             40,\n\t\n\t    /**\n\t     * Font weight (e.g. bold, normal, 400, 600, 800)\n\t     * @type {(Number|String)}\n\t     * @default\n\t     */\n\t    fontWeight:           'normal',\n\t\n\t    /**\n\t     * Font family\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontFamily:           'Times New Roman',\n\t\n\t    /**\n\t     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textDecoration:       '',\n\t\n\t    /**\n\t     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textAlign:            'left',\n\t\n\t    /**\n\t     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontStyle:            '',\n\t\n\t    /**\n\t     * Line height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    lineHeight:           1.16,\n\t\n\t    /**\n\t     * Background color of text lines\n\t     * @type String\n\t     * @default\n\t     */\n\t    textBackgroundColor:  '',\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: fabric.Object.prototype.stateProperties.concat(\n\t      'fontFamily',\n\t      'fontWeight',\n\t      'fontSize',\n\t      'text',\n\t      'textDecoration',\n\t      'textAlign',\n\t      'fontStyle',\n\t      'lineHeight',\n\t      'textBackgroundColor',\n\t      'charSpacing'),\n\t\n\t    /**\n\t     * List of properties to consider when checking if cache needs refresh\n\t     * @type Array\n\t     */\n\t    cacheProperties: fabric.Object.prototype.cacheProperties.concat(\n\t      'fontFamily',\n\t      'fontWeight',\n\t      'fontSize',\n\t      'text',\n\t      'textDecoration',\n\t      'textAlign',\n\t      'fontStyle',\n\t      'lineHeight',\n\t      'textBackgroundColor',\n\t      'charSpacing',\n\t      'styles'),\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:               null,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:               null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fontSizeFraction: 0.25,\n\t\n\t    /**\n\t     * Text Line proportion to font Size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    _fontSizeMult:             1.13,\n\t\n\t    /**\n\t     * additional space between characters\n\t     * expressed in thousands of em unit\n\t     * @type Number\n\t     * @default\n\t     */\n\t    charSpacing:             0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Text} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      options = options || { };\n\t      this.text = text;\n\t      this.__skipDimension = true;\n\t      this.callSuper('initialize', options);\n\t      this.__skipDimension = false;\n\t      this._initDimensions();\n\t      this.setCoords();\n\t      this.setupState({ propertySet: '_dimensionAffectingProps' });\n\t    },\n\t\n\t    /**\n\t     * Initialize text dimensions. Render all text on given context\n\t     * or on a offscreen canvas to get the text width with measureText.\n\t     * Updates this.width and this.height with the proper values.\n\t     * Does not return dimensions.\n\t     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t      }\n\t      this._textLines = this._splitTextIntoLines();\n\t      this._clearCache();\n\t      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n\t      this.height = this._getTextHeight(ctx);\n\t      this.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of text object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Text (' + this.complexity() +\n\t        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * Return the dimension and the zoom level needed to create a cache canvas\n\t     * big enough to host the object to be cached.\n\t     * @private\n\t     * @param {Object} dim.x width of object to be cached\n\t     * @param {Object} dim.y height of object to be cached\n\t     * @return {Object}.width width of canvas\n\t     * @return {Object}.height height of canvas\n\t     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n\t     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n\t     */\n\t    _getCacheCanvasDimensions: function() {\n\t      var dims = this.callSuper('_getCacheCanvasDimensions');\n\t      var fontSize = this.fontSize;\n\t      dims.width += fontSize * dims.zoomX;\n\t      dims.height += fontSize * dims.zoomY;\n\t      return dims;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this._setTextStyles(ctx);\n\t      if (this.group && this.group.type === 'path-group') {\n\t        ctx.translate(this.left, this.top);\n\t      }\n\t      this._renderTextLinesBackground(ctx);\n\t      this._renderText(ctx);\n\t      this._renderTextDecoration(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderText: function(ctx) {\n\t      this._renderTextFill(ctx);\n\t      this._renderTextStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setTextStyles: function(ctx) {\n\t      ctx.textBaseline = 'alphabetic';\n\t      ctx.font = this._getFontDeclaration();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Height of fabric.Text object\n\t     */\n\t    _getTextHeight: function() {\n\t      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {Number} Maximum width of fabric.Text object\n\t     */\n\t    _getTextWidth: function(ctx) {\n\t      var maxWidth = this._getLineWidth(ctx, 0);\n\t\n\t      for (var i = 1, len = this._textLines.length; i < len; i++) {\n\t        var currentLineWidth = this._getLineWidth(ctx, i);\n\t        if (currentLineWidth > maxWidth) {\n\t          maxWidth = currentLineWidth;\n\t        }\n\t      }\n\t      return maxWidth;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} chars Chars to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     */\n\t    _renderChars: function(method, ctx, chars, left, top) {\n\t      // remove Text word from method var\n\t      var shortM = method.slice(0, -4), _char, width;\n\t      if (this[shortM].toLive) {\n\t        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n\t            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n\t        ctx.save();\n\t        ctx.translate(offsetX, offsetY);\n\t        left -= offsetX;\n\t        top -= offsetY;\n\t      }\n\t      if (this.charSpacing !== 0) {\n\t        var additionalSpace = this._getWidthOfCharSpacing();\n\t        chars = chars.split('');\n\t        for (var i = 0, len = chars.length; i < len; i++) {\n\t          _char = chars[i];\n\t          width = ctx.measureText(_char).width + additionalSpace;\n\t          ctx[method](_char, left, top);\n\t          left += width > 0 ? width : 0;\n\t        }\n\t      }\n\t      else {\n\t        ctx[method](chars, left, top);\n\t      }\n\t      this[shortM].toLive && ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Text to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     * @param {Number} lineIndex Index of a line in a text\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // lift the line by quarter of fontSize\n\t      top -= this.fontSize * this._fontSizeFraction;\n\t\n\t      // short-circuit\n\t      var lineWidth = this._getLineWidth(ctx, lineIndex);\n\t      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n\t        this._renderChars(method, ctx, line, left, top, lineIndex);\n\t        return;\n\t      }\n\t\n\t      // stretch the line\n\t      var words = line.split(/\\s+/),\n\t          charOffset = 0,\n\t          wordsWidth = this._getWidthOfWords(ctx, words.join(' '), lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          leftOffset = 0, word;\n\t\n\t      for (var i = 0, len = words.length; i < len; i++) {\n\t        while (line[charOffset] === ' ' && charOffset < line.length) {\n\t          charOffset++;\n\t        }\n\t        word = words[i];\n\t        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n\t        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n\t        charOffset += word.length;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} word\n\t     */\n\t    _getWidthOfWords: function (ctx, word) {\n\t      var width = ctx.measureText(word).width, charCount, additionalSpace;\n\t      if (this.charSpacing !== 0) {\n\t        charCount = word.split('').length;\n\t        additionalSpace = charCount * this._getWidthOfCharSpacing();\n\t        width += additionalSpace;\n\t      }\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Left offset\n\t     */\n\t    _getLeftOffset: function() {\n\t      return -this.width / 2;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Top offset\n\t     */\n\t    _getTopOffset: function() {\n\t      return -this.height / 2;\n\t    },\n\t\n\t    /**\n\t     * Returns true because text has no style\n\t     */\n\t    isEmptyStyles: function() {\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     */\n\t    _renderTextCommon: function(ctx, method) {\n\t\n\t      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\t\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        var heightOfLine = this._getHeightOfLine(ctx, i),\n\t            maxHeight = heightOfLine / this.lineHeight,\n\t            lineWidth = this._getLineWidth(ctx, i),\n\t            leftOffset = this._getLineLeftOffset(lineWidth);\n\t        this._renderTextLine(\n\t          method,\n\t          ctx,\n\t          this._textLines[i],\n\t          left + leftOffset,\n\t          top + lineHeights + maxHeight,\n\t          i\n\t        );\n\t        lineHeights += heightOfLine;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextFill: function(ctx) {\n\t      if (!this.fill && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      this._renderTextCommon(ctx, 'fillText');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextStroke: function(ctx) {\n\t      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.strokeDashArray);\n\t      ctx.beginPath();\n\t      this._renderTextCommon(ctx, 'strokeText');\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line\n\t     */\n\t    _getHeightOfLine: function() {\n\t      return this._getHeightOfSingleLine() * this.lineHeight;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line without lineHeight\n\t     */\n\t    _getHeightOfSingleLine: function() {\n\t      return this.fontSize * this._fontSizeMult;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      if (!this.textBackgroundColor) {\n\t        return;\n\t      }\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset, originalFill = ctx.fillStyle;\n\t\n\t      ctx.fillStyle = this.textBackgroundColor;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        if (lineWidth > 0) {\n\t          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t          ctx.fillRect(\n\t            this._getLeftOffset() + lineLeftOffset,\n\t            this._getTopOffset() + lineTopOffset,\n\t            lineWidth,\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t      ctx.fillStyle = originalFill;\n\t      // if there is text background color no\n\t      // other shadows should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} lineWidth Width of text line\n\t     * @return {Number} Line left offset\n\t     */\n\t    _getLineLeftOffset: function(lineWidth) {\n\t      if (this.textAlign === 'center') {\n\t        return (this.width - lineWidth) / 2;\n\t      }\n\t      if (this.textAlign === 'right') {\n\t        return this.width - lineWidth;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.__lineWidths = [];\n\t      this.__lineHeights = [];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _shouldClearDimensionCache: function() {\n\t      var shouldClear = this._forceClearCache;\n\t      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n\t      if (shouldClear) {\n\t        this.saveState({ propertySet: '_dimensionAffectingProps' });\n\t        this.dirty = true;\n\t      }\n\t      return shouldClear;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _getLineWidth: function(ctx, lineIndex) {\n\t      if (this.__lineWidths[lineIndex]) {\n\t        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n\t      }\n\t\n\t      var width, wordCount, line = this._textLines[lineIndex];\n\t\n\t      if (line === '') {\n\t        width = 0;\n\t      }\n\t      else {\n\t        width = this._measureLine(ctx, lineIndex);\n\t      }\n\t      this.__lineWidths[lineIndex] = width;\n\t\n\t      if (width && this.textAlign === 'justify') {\n\t        wordCount = line.split(/\\s+/);\n\t        if (wordCount.length > 1) {\n\t          this.__lineWidths[lineIndex] = -1;\n\t        }\n\t      }\n\t      return width;\n\t    },\n\t\n\t    _getWidthOfCharSpacing: function() {\n\t      if (this.charSpacing !== 0) {\n\t        return this.fontSize * this.charSpacing / 1000;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      var line = this._textLines[lineIndex],\n\t          width = ctx.measureText(line).width,\n\t          additionalSpace = 0, charCount, finalWidth;\n\t      if (this.charSpacing !== 0) {\n\t        charCount = line.split('').length;\n\t        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n\t      }\n\t      finalWidth = width + additionalSpace;\n\t      return finalWidth > 0 ? finalWidth : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (!this.textDecoration) {\n\t        return;\n\t      }\n\t      var halfOfVerticalBox = this.height / 2,\n\t          _this = this, offsets = [];\n\t\n\t      /** @ignore */\n\t      function renderLinesAtOffset(offsets) {\n\t        var i, lineHeight = 0, len, j, oLen, lineWidth,\n\t            lineLeftOffset, heightOfLine;\n\t\n\t        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\t\n\t          lineWidth = _this._getLineWidth(ctx, i);\n\t          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n\t          heightOfLine = _this._getHeightOfLine(ctx, i);\n\t\n\t          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n\t            ctx.fillRect(\n\t              _this._getLeftOffset() + lineLeftOffset,\n\t              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n\t              lineWidth,\n\t              _this.fontSize / 15);\n\t          }\n\t          lineHeight += heightOfLine;\n\t        }\n\t      }\n\t\n\t      if (this.textDecoration.indexOf('underline') > -1) {\n\t        offsets.push(0.85); // 1 - 3/16\n\t      }\n\t      if (this.textDecoration.indexOf('line-through') > -1) {\n\t        offsets.push(0.43);\n\t      }\n\t      if (this.textDecoration.indexOf('overline') > -1) {\n\t        offsets.push(-0.12);\n\t      }\n\t      if (offsets.length > 0) {\n\t        renderLinesAtOffset(offsets);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * return font declaration string for canvas context\n\t     * @returns {String} font declaration formatted for canvas context.\n\t     */\n\t    _getFontDeclaration: function() {\n\t      return [\n\t        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n\t        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n\t        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n\t        this.fontSize + 'px',\n\t        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n\t      ].join(' ');\n\t    },\n\t\n\t    /**\n\t     * Renders text instance on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n\t        return;\n\t      }\n\t      if (this._shouldClearDimensionCache()) {\n\t        this._setTextStyles(ctx);\n\t        this._initDimensions(ctx);\n\t      }\n\t      this.callSuper('render', ctx, noTransform);\n\t    },\n\t\n\t    /**\n\t     * Returns the text as an array of lines.\n\t     * @returns {Array} Lines in the text\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      return this.text.split(this._reNewline);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var additionalProperties = [\n\t        'text',\n\t        'fontSize',\n\t        'fontWeight',\n\t        'fontFamily',\n\t        'fontStyle',\n\t        'lineHeight',\n\t        'textDecoration',\n\t        'textAlign',\n\t        'textBackgroundColor',\n\t        'charSpacing'\n\t      ].concat(propertiesToInclude);\n\t      return this.callSuper('toObject', additionalProperties);\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      if (!this.ctx) {\n\t        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n\t      }\n\t      var markup = this._createBaseSVGMarkup(),\n\t          offsets = this._getSVGLeftTopOffsets(this.ctx),\n\t          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\t      this._wrapSVGTextAndBg(markup, textAndBg);\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLeftTopOffsets: function(ctx) {\n\t      var lineTop = this._getHeightOfLine(ctx, 0),\n\t          textLeft = -this.width / 2,\n\t          textTop = 0;\n\t\n\t      return {\n\t        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n\t        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n\t        lineTop: lineTop\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _wrapSVGTextAndBg: function(markup, textAndBg) {\n\t      var noShadow = true, filter = this.getSvgFilter(),\n\t          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\t\n\t      markup.push(\n\t        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n\t          style, '>\\n',\n\t          textAndBg.textBgRects.join(''),\n\t          '\\t\\t<text xml:space=\"preserve\" ',\n\t            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n\t            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n\t            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n\t            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n\t            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n\t            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n\t            textAndBg.textSpans.join(''),\n\t          '\\t\\t</text>\\n',\n\t        '\\t</g>\\n'\n\t      );\n\t    },\n\t\n\t    getSvgStyles: function(skipShadow) {\n\t      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n\t      return svgStyle + ' white-space: pre;';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} textTopOffset Text top offset\n\t     * @param {Number} textLeftOffset Text left offset\n\t     * @return {Object}\n\t     */\n\t    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n\t      var textSpans = [],\n\t          textBgRects = [],\n\t          height = 0;\n\t      // bounding-box background\n\t      this._setSVGBg(textBgRects);\n\t\n\t      // text and text-background\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        if (this.textBackgroundColor) {\n\t          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n\t        }\n\t        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n\t        height += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      return {\n\t        textSpans: textSpans,\n\t        textBgRects: textBgRects\n\t      };\n\t    },\n\t\n\t    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n\t      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n\t        - textTopOffset + height - this.height / 2;\n\t      if (this.textAlign === 'justify') {\n\t        // i call from here to do not intefere with IText\n\t        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n\t        return;\n\t      }\n\t      textSpans.push(\n\t        '\\t\\t\\t<tspan x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n\t          'y=\"',\n\t          toFixed(yPos, NUM_FRACTION_DIGITS),\n\t          '\" ',\n\t          // doing this on <tspan> elements since setting opacity\n\t          // on containing <text> one doesn't work in Illustrator\n\t          this._getFillAttributes(this.fill), '>',\n\t          fabric.util.string.escapeXml(this._textLines[i]),\n\t        '</tspan>\\n'\n\t      );\n\t    },\n\t\n\t    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n\t      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\t\n\t      this._setTextStyles(ctx);\n\t\n\t      var line = this._textLines[i],\n\t          words = line.split(/\\s+/),\n\t          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          word, attributes = this._getFillAttributes(this.fill),\n\t          len;\n\t\n\t      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\t\n\t      for (i = 0, len = words.length; i < len; i++) {\n\t        word = words[i];\n\t        textSpans.push(\n\t          '\\t\\t\\t<tspan x=\"',\n\t            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n\t            'y=\"',\n\t            toFixed(yPos, NUM_FRACTION_DIGITS),\n\t            '\" ',\n\t            // doing this on <tspan> elements since setting opacity\n\t            // on containing <text> one doesn't work in Illustrator\n\t            attributes, '>',\n\t            fabric.util.string.escapeXml(word),\n\t          '</tspan>\\n'\n\t        );\n\t        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n\t      }\n\t    },\n\t\n\t    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n\t      textBgRects.push(\n\t        '\\t\\t<rect ',\n\t          this._getFillAttributes(this.textBackgroundColor),\n\t          ' x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n\t          '\" y=\"',\n\t          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n\t          '\" width=\"',\n\t          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n\t          '\" height=\"',\n\t          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n');\n\t    },\n\t\n\t    _setSVGBg: function(textBgRects) {\n\t      if (this.backgroundColor) {\n\t        textBgRects.push(\n\t          '\\t\\t<rect ',\n\t            this._getFillAttributes(this.backgroundColor),\n\t            ' x=\"',\n\t            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n\t            '\" y=\"',\n\t            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n\t            '\" width=\"',\n\t            toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            '\" height=\"',\n\t            toFixed(this.height, NUM_FRACTION_DIGITS),\n\t          '\"></rect>\\n');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n\t     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n\t     *\n\t     * @private\n\t     * @param {*} value\n\t     * @return {String}\n\t     */\n\t    _getFillAttributes: function(value) {\n\t      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n\t      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n\t        return 'fill=\"' + value + '\"';\n\t      }\n\t      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Sets specified property to a specified value\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Text} thisArg\n\t     * @chainable\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (this._dimensionAffectingProps.indexOf(key) > -1) {\n\t        this._initDimensions();\n\t        this.setCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n\t   */\n\t  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n\t    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\t\n\t  /**\n\t   * Default SVG font size\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   */\n\t  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n\t    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\t\n\t    options.top = options.top || 0;\n\t    options.left = options.left || 0;\n\t    if ('dx' in parsedAttributes) {\n\t      options.left += parsedAttributes.dx;\n\t    }\n\t    if ('dy' in parsedAttributes) {\n\t      options.top += parsedAttributes.dy;\n\t    }\n\t    if (!('fontSize' in options)) {\n\t      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t    }\n\t\n\t    if (!options.originX) {\n\t      options.originX = 'left';\n\t    }\n\t\n\t    var textContent = '';\n\t\n\t    // The XML is not properly parsed in IE9 so a workaround to get\n\t    // textContent is through firstChild.data. Another workaround would be\n\t    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n\t    if (!('textContent' in element)) {\n\t      if ('firstChild' in element && element.firstChild !== null) {\n\t        if ('data' in element.firstChild && element.firstChild.data !== null) {\n\t          textContent = element.firstChild.data;\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      textContent = element.textContent;\n\t    }\n\t\n\t    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\t\n\t    var text = new fabric.Text(textContent, options),\n\t        textHeightScaleFactor = text.getHeight() / text.height,\n\t        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n\t        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n\t        textHeight = text.getHeight() + scaledDiff,\n\t        offX = 0;\n\t    /*\n\t      Adjust positioning:\n\t        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n\t        top/left properties in Fabric correspond to center point of text bounding box\n\t    */\n\t    if (text.originX === 'left') {\n\t      offX = text.getWidth() / 2;\n\t    }\n\t    if (text.originX === 'right') {\n\t      offX = -text.getWidth() / 2;\n\t    }\n\t    text.set({\n\t      left: text.getLeft() + offX,\n\t      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n\t    });\n\t\n\t    return text;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Text', object, callback, forceAsync, 'text');\n\t  };\n\t\n\t  fabric.util.createAccessors(fabric.Text);\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  /**\n\t   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n\t   * prefix when observing canvas.\n\t   * @class fabric.IText\n\t   * @extends fabric.Text\n\t   * @mixes fabric.Observable\n\t   *\n\t   * @fires changed\n\t   * @fires selection:changed\n\t   * @fires editing:entered\n\t   * @fires editing:exited\n\t   *\n\t   * @return {fabric.IText} thisArg\n\t   * @see {@link fabric.IText#initialize} for constructor definition\n\t   *\n\t   * <p>Supported key combinations:</p>\n\t   * <pre>\n\t   *   Move cursor:                    left, right, up, down\n\t   *   Select character:               shift + left, shift + right\n\t   *   Select text vertically:         shift + up, shift + down\n\t   *   Move cursor by word:            alt + left, alt + right\n\t   *   Select words:                   shift + alt + left, shift + alt + right\n\t   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n\t   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n\t   *   Jump to start/end of text:      cmd + up, cmd + down\n\t   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n\t   *   Delete character:               backspace\n\t   *   Delete word:                    alt + backspace\n\t   *   Delete line:                    cmd + backspace\n\t   *   Forward delete:                 delete\n\t   *   Copy text:                      ctrl/cmd + c\n\t   *   Paste text:                     ctrl/cmd + v\n\t   *   Cut text:                       ctrl/cmd + x\n\t   *   Select entire text:             ctrl/cmd + a\n\t   *   Quit editing                    tab or esc\n\t   * </pre>\n\t   *\n\t   * <p>Supported mouse/touch combination</p>\n\t   * <pre>\n\t   *   Position cursor:                click/touch\n\t   *   Create selection:               click/touch & drag\n\t   *   Create selection:               click & shift + click\n\t   *   Select word:                    double click\n\t   *   Select line:                    triple click\n\t   * </pre>\n\t   */\n\t  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'i-text',\n\t\n\t    /**\n\t     * Index where text selection starts (or where cursor is when there is no selection)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionStart: 0,\n\t\n\t    /**\n\t     * Index where text selection ends\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionEnd: 0,\n\t\n\t    /**\n\t     * Color of text selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor: 'rgba(17,119,255,0.3)',\n\t\n\t    /**\n\t     * Indicates whether text is in editing mode\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isEditing: false,\n\t\n\t    /**\n\t     * Indicates whether a text can be edited\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    editable: true,\n\t\n\t    /**\n\t     * Border color of text object while it's in editing mode\n\t     * @type String\n\t     * @default\n\t     */\n\t    editingBorderColor: 'rgba(102,153,255,0.25)',\n\t\n\t    /**\n\t     * Width of cursor (in px)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorWidth: 2,\n\t\n\t    /**\n\t     * Color of default cursor (when not overwritten by character style)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cursorColor: '#333',\n\t\n\t    /**\n\t     * Delay between cursor blink (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDelay: 1000,\n\t\n\t    /**\n\t     * Duration of cursor fadein (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDuration: 600,\n\t\n\t    /**\n\t     * Object containing character styles\n\t     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n\t     * @type Object\n\t     * @default\n\t     */\n\t    styles: null,\n\t\n\t    /**\n\t     * Indicates whether internal text char widths can be cached\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    caching: true,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reSpace: /\\s|\\n/,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _currentCursorOpacity: 0,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _selectionDirection: null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _abortCursorAnimation: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __widthOfSpace: [],\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.IText} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      this.styles = options ? (options.styles || { }) : { };\n\t      this.callSuper('initialize', text, options);\n\t      this.initBehavior();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.callSuper('_clearCache');\n\t      this.__widthOfSpace = [];\n\t    },\n\t\n\t    /**\n\t     * Returns true if object has no styling\n\t     */\n\t    isEmptyStyles: function() {\n\t      if (!this.styles) {\n\t        return true;\n\t      }\n\t      var obj = this.styles;\n\t\n\t      for (var p1 in obj) {\n\t        for (var p2 in obj[p1]) {\n\t          // eslint-disable-next-line no-unused-vars\n\t          for (var p3 in obj[p1][p2]) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Sets selection start (left boundary of a selection)\n\t     * @param {Number} index Index to set selection start to\n\t     */\n\t    setSelectionStart: function(index) {\n\t      index = Math.max(index, 0);\n\t      this._updateAndFire('selectionStart', index);\n\t    },\n\t\n\t    /**\n\t     * Sets selection end (right boundary of a selection)\n\t     * @param {Number} index Index to set selection end to\n\t     */\n\t    setSelectionEnd: function(index) {\n\t      index = Math.min(index, this.text.length);\n\t      this._updateAndFire('selectionEnd', index);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property 'selectionStart' or 'selectionEnd'\n\t     * @param {Number} index new position of property\n\t     */\n\t    _updateAndFire: function(property, index) {\n\t      if (this[property] !== index) {\n\t        this._fireSelectionChanged();\n\t        this[property] = index;\n\t      }\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Fires the even of selection changed\n\t     * @private\n\t     */\n\t    _fireSelectionChanged: function() {\n\t      this.fire('selection:changed');\n\t      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n\t    },\n\t\n\t    /**\n\t     * Gets style of a current selection/cursor (at the start position)\n\t     * @param {Number} [startIndex] Start index to get styles at\n\t     * @param {Number} [endIndex] End index to get styles at\n\t     * @return {Object} styles Style object at a specified (or current) index\n\t     */\n\t    getSelectionStyles: function(startIndex, endIndex) {\n\t\n\t      if (arguments.length === 2) {\n\t        var styles = [];\n\t        for (var i = startIndex; i < endIndex; i++) {\n\t          styles.push(this.getSelectionStyles(i));\n\t        }\n\t        return styles;\n\t      }\n\t\n\t      var loc = this.get2DCursorLocation(startIndex),\n\t          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\t\n\t      return style || {};\n\t    },\n\t\n\t    /**\n\t     * Sets style of a current selection\n\t     * @param {Object} [styles] Styles object\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    setSelectionStyles: function(styles) {\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        this._extendStyles(this.selectionStart, styles);\n\t      }\n\t      else {\n\t        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n\t          this._extendStyles(i, styles);\n\t        }\n\t      }\n\t      /* not included in _extendStyles to avoid clearing cache more than once */\n\t      this._forceClearCache = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _extendStyles: function(index, styles) {\n\t      var loc = this.get2DCursorLocation(index);\n\t\n\t      if (!this._getLineStyle(loc.lineIndex)) {\n\t        this._setLineStyle(loc.lineIndex, {});\n\t      }\n\t\n\t      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n\t        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n\t      }\n\t\n\t      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n\t    },\n\t\n\t    /**\n\t     * Initialize text dimensions. Render all text on given context\n\t     * or on a offscreen canvas to get the text width with measureText.\n\t     * Updates this.width and this.height with the proper values.\n\t     * Does not return dimensions.\n\t     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (!ctx) {\n\t        this.clearContextTop();\n\t      }\n\t      this.callSuper('_initDimensions', ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      this.clearContextTop();\n\t      this.callSuper('render', ctx, noTransform);\n\t      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n\t      // the correct position but not at every cursor animation.\n\t      this.cursorOffsetCache = { };\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this.callSuper('_render', ctx);\n\t      this.ctx = ctx;\n\t    },\n\t\n\t    /**\n\t     * Prepare and clean the contextTop\n\t     */\n\t    clearContextTop: function() {\n\t      if (!this.active || !this.isEditing) {\n\t        return;\n\t      }\n\t      if (this.canvas && this.canvas.contextTop) {\n\t        var ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t        this._clearTextArea(ctx);\n\t        ctx.restore();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders cursor or selection (depending on what exists)\n\t     */\n\t    renderCursorOrSelection: function() {\n\t      if (!this.active || !this.isEditing) {\n\t        return;\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries, ctx;\n\t      if (this.canvas && this.canvas.contextTop) {\n\t        ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t        this._clearTextArea(ctx);\n\t      }\n\t      else {\n\t        ctx = this.ctx;\n\t        ctx.save();\n\t      }\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        boundaries = this._getCursorBoundaries(chars, 'cursor');\n\t        this.renderCursor(boundaries, ctx);\n\t      }\n\t      else {\n\t        boundaries = this._getCursorBoundaries(chars, 'selection');\n\t        this.renderSelection(chars, boundaries, ctx);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    _clearTextArea: function(ctx) {\n\t      // we add 4 pixel, to be sure to do not leave any pixel out\n\t      var width = this.width + 4, height = this.height + 4;\n\t      ctx.clearRect(-width / 2, -height / 2, width, height);\n\t    },\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t      var len = this._textLines.length;\n\t      for (var i = 0; i < len; i++) {\n\t        if (selectionStart <= this._textLines[i].length) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart\n\t          };\n\t        }\n\t        selectionStart -= this._textLines[i].length + 1;\n\t      }\n\t      return {\n\t        lineIndex: i - 1,\n\t        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns complete style of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Object} Character style\n\t     */\n\t    getCurrentCharStyle: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t\n\t      return {\n\t        fontSize: style && style.fontSize || this.fontSize,\n\t        fill: style && style.fill || this.fill,\n\t        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n\t        textDecoration: style && style.textDecoration || this.textDecoration,\n\t        fontFamily: style && style.fontFamily || this.fontFamily,\n\t        fontWeight: style && style.fontWeight || this.fontWeight,\n\t        fontStyle: style && style.fontStyle || this.fontStyle,\n\t        stroke: style && style.stroke || this.stroke,\n\t        strokeWidth: style && style.strokeWidth || this.strokeWidth\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns fontSize of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Number} Character font size\n\t     */\n\t    getCurrentCharFontSize: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * Returns color (fill) of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {String} Character color (fill)\n\t     */\n\t    getCurrentCharColor: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fill ? style.fill : this.cursorColor;\n\t    },\n\t\n\t    /**\n\t     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n\t     * @private\n\t     * @param {Array} chars Array of characters\n\t     * @param {String} typeOfBoundaries\n\t     */\n\t    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\t\n\t      // left/top are left/top of entire text box\n\t      // leftOffset/topOffset are offset from that left/top point of a text box\n\t\n\t      var left = Math.round(this._getLeftOffset()),\n\t          top = this._getTopOffset(),\n\t\n\t          offsets = this._getCursorBoundariesOffsets(\n\t                      chars, typeOfBoundaries);\n\t\n\t      return {\n\t        left: left,\n\t        top: top,\n\t        leftOffset: offsets.left + offsets.lineLeft,\n\t        topOffset: offsets.top\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n\t        return this.cursorOffsetCache;\n\t      }\n\t      var lineLeftOffset = 0,\n\t          lineIndex = 0,\n\t          charIndex = 0,\n\t          topOffset = 0,\n\t          leftOffset = 0,\n\t          boundaries;\n\t\n\t      for (var i = 0; i < this.selectionStart; i++) {\n\t        if (chars[i] === '\\n') {\n\t          leftOffset = 0;\n\t          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t          lineIndex++;\n\t          charIndex = 0;\n\t        }\n\t        else {\n\t          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n\t          charIndex++;\n\t        }\n\t\n\t        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n\t      }\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n\t          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n\t      }\n\t      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n\t        leftOffset -= this._getWidthOfCharSpacing();\n\t      }\n\t      boundaries = {\n\t        top: topOffset,\n\t        left: leftOffset > 0 ? leftOffset : 0,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t      this.cursorOffsetCache = boundaries;\n\t      return this.cursorOffsetCache;\n\t    },\n\t\n\t    /**\n\t     * Renders cursor\n\t     * @param {Object} boundaries\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderCursor: function(boundaries, ctx) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = boundaries.leftOffset,\n\t          multiplier = this.scaleX * this.canvas.getZoom(),\n\t          cursorWidth = this.cursorWidth / multiplier;\n\t\n\t      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n\t      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\t\n\t      ctx.fillRect(\n\t        boundaries.left + leftOffset - cursorWidth / 2,\n\t        boundaries.top + boundaries.topOffset,\n\t        cursorWidth,\n\t        charHeight);\n\t    },\n\t\n\t    /**\n\t     * Renders text selection\n\t     * @param {Array} chars Array of characters\n\t     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderSelection: function(chars, boundaries, ctx) {\n\t\n\t      ctx.fillStyle = this.selectionColor;\n\t\n\t      var start = this.get2DCursorLocation(this.selectionStart),\n\t          end = this.get2DCursorLocation(this.selectionEnd),\n\t          startLine = start.lineIndex,\n\t          endLine = end.lineIndex;\n\t      for (var i = startLine; i <= endLine; i++) {\n\t        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n\t            lineHeight = this._getHeightOfLine(this.ctx, i),\n\t            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\t\n\t        if (i === startLine) {\n\t          for (var j = 0, len = line.length; j < len; j++) {\n\t            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n\t              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t            if (j < start.charIndex) {\n\t              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t          }\n\t          if (j === line.length) {\n\t            boxWidth -= this._getWidthOfCharSpacing();\n\t          }\n\t        }\n\t        else if (i > startLine && i < endLine) {\n\t          boxWidth += this._getLineWidth(ctx, i) || 5;\n\t        }\n\t        else if (i === endLine) {\n\t          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n\t            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n\t          }\n\t          if (end.charIndex === line.length) {\n\t            boxWidth -= this._getWidthOfCharSpacing();\n\t          }\n\t        }\n\t        realLineHeight = lineHeight;\n\t        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n\t          lineHeight /= this.lineHeight;\n\t        }\n\t        ctx.fillRect(\n\t          boundaries.left + lineOffset,\n\t          boundaries.top + boundaries.topOffset,\n\t          boxWidth > 0 ? boxWidth : 0,\n\t          lineHeight);\n\t\n\t        boundaries.topOffset += realLineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left\n\t     * @param {Number} top\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charOffset\n\t     */\n\t    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\t\n\t      if (this.isEmptyStyles()) {\n\t        return this._renderCharsFast(method, ctx, line, left, top);\n\t      }\n\t\n\t      charOffset = charOffset || 0;\n\t\n\t      // set proper line offset\n\t      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n\t          prevStyle,\n\t          thisStyle,\n\t          charsToRender = '';\n\t\n\t      ctx.save();\n\t      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n\t      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n\t        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n\t        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\t\n\t        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n\t          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n\t          charsToRender = '';\n\t          prevStyle = thisStyle;\n\t        }\n\t        charsToRender += line[i - charOffset];\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     */\n\t    _renderCharsFast: function(method, ctx, line, left, top) {\n\t\n\t      if (method === 'fillText' && this.fill) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} i\n\t     * @param {String} _char\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     * @param {Number} lineHeight Height of the line\n\t     */\n\t    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n\t      var charWidth, charHeight, shouldFill, shouldStroke,\n\t          decl = this._getStyleDeclaration(lineIndex, i),\n\t          offset, textDecoration, chars, additionalSpace, _charWidth;\n\t\n\t      if (decl) {\n\t        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n\t        shouldStroke = decl.stroke;\n\t        shouldFill = decl.fill;\n\t        textDecoration = decl.textDecoration;\n\t      }\n\t      else {\n\t        charHeight = this.fontSize;\n\t      }\n\t\n\t      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n\t      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\t\n\t      decl && ctx.save();\n\t\n\t      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n\t      textDecoration = textDecoration || this.textDecoration;\n\t\n\t      if (decl && decl.textBackgroundColor) {\n\t        this._removeShadow(ctx);\n\t      }\n\t      if (this.charSpacing !== 0) {\n\t        additionalSpace = this._getWidthOfCharSpacing();\n\t        chars = _char.split('');\n\t        charWidth = 0;\n\t        for (var j = 0, len = chars.length, jChar; j < len; j++) {\n\t          jChar = chars[j];\n\t          shouldFill && ctx.fillText(jChar, left + charWidth, top);\n\t          shouldStroke && ctx.strokeText(jChar, left + charWidth, top);\n\t          _charWidth = ctx.measureText(jChar).width + additionalSpace;\n\t          charWidth += _charWidth > 0 ? _charWidth : 0;\n\t        }\n\t      }\n\t      else {\n\t        shouldFill && ctx.fillText(_char, left, top);\n\t        shouldStroke && ctx.strokeText(_char, left, top);\n\t      }\n\t\n\t      if (textDecoration || textDecoration !== '') {\n\t        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n\t        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n\t      }\n\t\n\t      decl && ctx.restore();\n\t      ctx.translate(charWidth, 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} prevStyle\n\t     * @param {Object} thisStyle\n\t     */\n\t    _hasStyleChanged: function(prevStyle, thisStyle) {\n\t      return (prevStyle.fill !== thisStyle.fill ||\n\t              prevStyle.fontSize !== thisStyle.fontSize ||\n\t              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n\t              prevStyle.textDecoration !== thisStyle.textDecoration ||\n\t              prevStyle.fontFamily !== thisStyle.fontFamily ||\n\t              prevStyle.fontWeight !== thisStyle.fontWeight ||\n\t              prevStyle.fontStyle !== thisStyle.fontStyle ||\n\t              prevStyle.stroke !== thisStyle.stroke ||\n\t              prevStyle.strokeWidth !== thisStyle.strokeWidth\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\t\n\t      if (!textDecoration) {\n\t        return;\n\t      }\n\t\n\t      var decorationWeight = charHeight / 15,\n\t          positions = {\n\t            underline: top + charHeight / 10,\n\t            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n\t            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n\t          },\n\t          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\t\n\t      for (i = 0; i < decorations.length; i++) {\n\t        decoration = decorations[i];\n\t        if (textDecoration.indexOf(decoration) > -1) {\n\t          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     * @param {Number} left\n\t     * @param {Number} top\n\t     * @param {Number} lineIndex\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n\t      // the adding 0.03 is just to align text with itext by overlap test\n\t      if (!this.isEmptyStyles()) {\n\t        top += this.fontSize * (this._fontSizeFraction + 0.03);\n\t      }\n\t      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (this.isEmptyStyles()) {\n\t        return this.callSuper('_renderTextDecoration', ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      this.callSuper('_renderTextLinesBackground', ctx);\n\t\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset,\n\t          leftOffset = this._getLeftOffset(),\n\t          topOffset = this._getTopOffset(),\n\t          colorCache = '',\n\t          line, _char, style, leftCache,\n\t          topCache, widthCache, heightCache;\n\t      ctx.save();\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        line = this._textLines[i];\n\t\n\t        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n\t          lineTopOffset += heightOfLine;\n\t          continue;\n\t        }\n\t\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t        leftCache = topCache = widthCache = heightCache = 0;\n\t        for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t          style = this._getStyleDeclaration(i, j) || {};\n\t\n\t          if (colorCache !== style.textBackgroundColor) {\n\t            if (heightCache && widthCache) {\n\t              ctx.fillStyle = colorCache;\n\t              ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n\t            }\n\t            leftCache = topCache = widthCache = heightCache = 0;\n\t            colorCache = style.textBackgroundColor || '';\n\t          }\n\t\n\t          if (!style.textBackgroundColor) {\n\t            colorCache = '';\n\t            continue;\n\t          }\n\t          _char = line[j];\n\t\n\t          if (colorCache === style.textBackgroundColor) {\n\t            colorCache = style.textBackgroundColor;\n\t            if (!leftCache) {\n\t              leftCache = leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j);\n\t            }\n\t            topCache = topOffset + lineTopOffset;\n\t            widthCache += this._getWidthOfChar(ctx, _char, i, j);\n\t            heightCache = heightOfLine / this.lineHeight;\n\t          }\n\t        }\n\t        // if a textBackgroundColor ends on the last character of a line\n\t        if (heightCache && widthCache) {\n\t          ctx.fillStyle = colorCache;\n\t          ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n\t          leftCache = topCache = widthCache = heightCache = 0;\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCacheProp: function(_char, styleDeclaration) {\n\t      return _char +\n\t             styleDeclaration.fontSize +\n\t             styleDeclaration.fontWeight +\n\t             styleDeclaration.fontStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} fontFamily name\n\t     * @return {Object} reference to cache\n\t     */\n\t    _getFontCache: function(fontFamily) {\n\t      if (!fabric.charWidthsCache[fontFamily]) {\n\t        fabric.charWidthsCache[fontFamily] = { };\n\t      }\n\t      return fabric.charWidthsCache[fontFamily];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} _char\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} [decl]\n\t     */\n\t    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n\t      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n\t          styleDeclaration = clone(charDecl),\n\t          width, cacheProp, charWidthsCache;\n\t\n\t      this._applyFontStyles(styleDeclaration);\n\t      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n\t      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\t\n\t      // short-circuit if no styles for this char\n\t      // global style from object is always applyed and handled by save and restore\n\t      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n\t        return charWidthsCache[cacheProp];\n\t      }\n\t\n\t      if (typeof styleDeclaration.shadow === 'string') {\n\t        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n\t      }\n\t\n\t      var fill = styleDeclaration.fill || this.fill;\n\t      ctx.fillStyle = fill.toLive\n\t        ? fill.toLive(ctx, this)\n\t        : fill;\n\t\n\t      if (styleDeclaration.stroke) {\n\t        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n\t          ? styleDeclaration.stroke.toLive(ctx, this)\n\t          : styleDeclaration.stroke;\n\t      }\n\t\n\t      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n\t      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\t\n\t      //if we want this._setShadow.call to work with styleDeclarion\n\t      //we have to add those references\n\t      if (styleDeclaration.shadow) {\n\t        styleDeclaration.scaleX = this.scaleX;\n\t        styleDeclaration.scaleY = this.scaleY;\n\t        styleDeclaration.canvas = this.canvas;\n\t        styleDeclaration.getObjectScaling = this.getObjectScaling;\n\t        this._setShadow.call(styleDeclaration, ctx);\n\t      }\n\t\n\t      if (!this.caching || !charWidthsCache[cacheProp]) {\n\t        width = ctx.measureText(_char).width;\n\t        this.caching && (charWidthsCache[cacheProp] = width);\n\t        return width;\n\t      }\n\t\n\t      return charWidthsCache[cacheProp];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} styleDeclaration\n\t     */\n\t    _applyFontStyles: function(styleDeclaration) {\n\t      if (!styleDeclaration.fontFamily) {\n\t        styleDeclaration.fontFamily = this.fontFamily;\n\t      }\n\t      if (!styleDeclaration.fontSize) {\n\t        styleDeclaration.fontSize = this.fontSize;\n\t      }\n\t      if (!styleDeclaration.fontWeight) {\n\t        styleDeclaration.fontWeight = this.fontWeight;\n\t      }\n\t      if (!styleDeclaration.fontStyle) {\n\t        styleDeclaration.fontStyle = this.fontStyle;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (returnCloneOrEmpty) {\n\t        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n\t          ? clone(this.styles[lineIndex][charIndex])\n\t          : { };\n\t      }\n\t\n\t      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      return this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      this.styles[lineIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      delete this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n\t      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n\t        return this._getWidthOfSpace(ctx, lineIndex);\n\t      }\n\t      ctx.save();\n\t      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n\t      if (this.charSpacing !== 0) {\n\t        width += this._getWidthOfCharSpacing();\n\t      }\n\t      ctx.restore();\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n\t      var width = 0, i, _char;\n\t      for (i = 0; i < charIndex; i++) {\n\t        _char = this._textLines[lineIndex][i];\n\t        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      this._isMeasuring = true;\n\t      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n\t      if (this.charSpacing !== 0) {\n\t        width -= this._getWidthOfCharSpacing();\n\t      }\n\t      this._isMeasuring = false;\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     */\n\t    _getWidthOfSpace: function (ctx, lineIndex) {\n\t      if (this.__widthOfSpace[lineIndex]) {\n\t        return this.__widthOfSpace[lineIndex];\n\t      }\n\t      var line = this._textLines[lineIndex],\n\t          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n\t          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n\t      this.__widthOfSpace[lineIndex] = width;\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charOffset\n\t     */\n\t    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n\t      var width = 0;\n\t\n\t      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n\t        var _char = line[charIndex];\n\t\n\t        if (!_char.match(/\\s/)) {\n\t          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n\t        }\n\t      }\n\t\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getHeightOfLine: function(ctx, lineIndex) {\n\t      if (this.__lineHeights[lineIndex]) {\n\t        return this.__lineHeights[lineIndex];\n\t      }\n\t\n\t      var line = this._textLines[lineIndex],\n\t          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\t\n\t      for (var i = 1, len = line.length; i < len; i++) {\n\t        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n\t        if (currentCharHeight > maxHeight) {\n\t          maxHeight = currentCharHeight;\n\t        }\n\t      }\n\t      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n\t      return this.__lineHeights[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getTextHeight: function(ctx) {\n\t      var lineHeight, height = 0;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        lineHeight = this._getHeightOfLine(ctx, i);\n\t        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n\t      }\n\t      return height;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n\t        styles: clone(this.styles, true)\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.IText instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.IText\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.IText} instance of fabric.IText\n\t   */\n\t  fabric.IText.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('IText', object, callback, forceAsync, 'text');\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Initializes all the interactive behavior of IText\n\t     */\n\t    initBehavior: function() {\n\t      this.initAddedHandler();\n\t      this.initRemovedHandler();\n\t      this.initCursorSelectionHandlers();\n\t      this.initDoubleClickSimulation();\n\t      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n\t    },\n\t\n\t    onDeselect: function() {\n\t      this.isEditing && this.exitEditing();\n\t      this.selected = false;\n\t      this.callSuper('onDeselect');\n\t    },\n\t\n\t    /**\n\t     * Initializes \"added\" event handler\n\t     */\n\t    initAddedHandler: function() {\n\t      var _this = this;\n\t      this.on('added', function() {\n\t        var canvas = _this.canvas;\n\t        if (canvas) {\n\t          if (!canvas._hasITextHandlers) {\n\t            canvas._hasITextHandlers = true;\n\t            _this._initCanvasHandlers(canvas);\n\t          }\n\t          canvas._iTextInstances = canvas._iTextInstances || [];\n\t          canvas._iTextInstances.push(_this);\n\t        }\n\t      });\n\t    },\n\t\n\t    initRemovedHandler: function() {\n\t      var _this = this;\n\t      this.on('removed', function() {\n\t        var canvas = _this.canvas;\n\t        if (canvas) {\n\t          canvas._iTextInstances = canvas._iTextInstances || [];\n\t          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n\t          if (canvas._iTextInstances.length === 0) {\n\t            canvas._hasITextHandlers = false;\n\t            _this._removeCanvasHandlers(canvas);\n\t          }\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * register canvas event to manage exiting on other instances\n\t     * @private\n\t     */\n\t    _initCanvasHandlers: function(canvas) {\n\t      canvas._mouseUpITextHandler = (function() {\n\t        if (canvas._iTextInstances) {\n\t          canvas._iTextInstances.forEach(function(obj) {\n\t            obj.__isMousedown = false;\n\t          });\n\t        }\n\t      }).bind(this);\n\t      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n\t    },\n\t\n\t    /**\n\t     * remove canvas event to manage exiting on other instances\n\t     * @private\n\t     */\n\t    _removeCanvasHandlers: function(canvas) {\n\t      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _tick: function() {\n\t      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\t\n\t      var tickState;\n\t\n\t      tickState = {\n\t        isAborted: false,\n\t        abort: function() {\n\t          this.isAborted = true;\n\t        },\n\t      };\n\t\n\t      obj.animate('_currentCursorOpacity', targetOpacity, {\n\t        duration: duration,\n\t        onComplete: function() {\n\t          if (!tickState.isAborted) {\n\t            obj[completeMethod]();\n\t          }\n\t        },\n\t        onChange: function() {\n\t          // we do not want to animate a selection, only cursor\n\t          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n\t            obj.renderCursorOrSelection();\n\t          }\n\t        },\n\t        abort: function() {\n\t          return tickState.isAborted;\n\t        }\n\t      });\n\t      return tickState;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onTickComplete: function() {\n\t\n\t      var _this = this;\n\t\n\t      if (this._cursorTimeout1) {\n\t        clearTimeout(this._cursorTimeout1);\n\t      }\n\t      this._cursorTimeout1 = setTimeout(function() {\n\t        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n\t      }, 100);\n\t    },\n\t\n\t    /**\n\t     * Initializes delayed cursor\n\t     */\n\t    initDelayedCursor: function(restart) {\n\t      var _this = this,\n\t          delay = restart ? 0 : this.cursorDelay;\n\t\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this._cursorTimeout2 = setTimeout(function() {\n\t        _this._tick();\n\t      }, delay);\n\t    },\n\t\n\t    /**\n\t     * Aborts cursor animation and clears all timeouts\n\t     */\n\t    abortCursorAnimation: function() {\n\t      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n\t      this._currentTickState && this._currentTickState.abort();\n\t      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\t\n\t      clearTimeout(this._cursorTimeout1);\n\t      clearTimeout(this._cursorTimeout2);\n\t\n\t      this._currentCursorOpacity = 0;\n\t      // to clear just itext area we need to transform the context\n\t      // it may not be worth it\n\t      if (shouldClear) {\n\t        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * Selects entire text\n\t     */\n\t    selectAll: function() {\n\t      this.selectionStart = 0;\n\t      this.selectionEnd = this.text.length;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Returns selected text\n\t     * @return {String}\n\t     */\n\t    getSelectedText: function() {\n\t      return this.text.slice(this.selectionStart, this.selectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current word according to current selection index\n\t     * @param {Number} startFrom Surrent selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      // remove space before cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index--;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current word according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      // remove space after cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index++;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Returns number of newlines in selected text\n\t     * @return {Number} Number of newlines in selected text\n\t     */\n\t    getNumNewLinesInSelectedText: function() {\n\t      var selectedText = this.getSelectedText(),\n\t          numNewLines  = 0;\n\t\n\t      for (var i = 0, len = selectedText.length; i < len; i++) {\n\t        if (selectedText[i] === '\\n') {\n\t          numNewLines++;\n\t        }\n\t      }\n\t      return numNewLines;\n\t    },\n\t\n\t    /**\n\t     * Finds index corresponding to beginning or end of a word\n\t     * @param {Number} selectionStart Index of a character\n\t     * @param {Number} direction 1 or -1\n\t     * @return {Number} Index of the beginning or end of a word\n\t     */\n\t    searchWordBoundary: function(selectionStart, direction) {\n\t      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n\t          _char     = this.text.charAt(index),\n\t          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\t\n\t      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n\t        index += direction;\n\t        _char = this.text.charAt(index);\n\t      }\n\t      if (reNonWord.test(_char) && _char !== '\\n') {\n\t        index += direction === 1 ? 0 : 1;\n\t      }\n\t      return index;\n\t    },\n\t\n\t    /**\n\t     * Selects a word based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectWord: function(selectionStart) {\n\t      selectionStart = selectionStart || this.selectionStart;\n\t      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n\t          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\t\n\t      this.selectionStart = newSelectionStart;\n\t      this.selectionEnd = newSelectionEnd;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * Selects a line based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectLine: function(selectionStart) {\n\t      selectionStart = selectionStart || this.selectionStart;\n\t      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n\t          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\t\n\t      this.selectionStart = newSelectionStart;\n\t      this.selectionEnd = newSelectionEnd;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Enters editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    enterEditing: function(e) {\n\t      if (this.isEditing || !this.editable) {\n\t        return;\n\t      }\n\t\n\t      if (this.canvas) {\n\t        this.exitEditingOnOthers(this.canvas);\n\t      }\n\t\n\t      this.isEditing = true;\n\t      this.selected = true;\n\t      this.initHiddenTextarea(e);\n\t      this.hiddenTextarea.focus();\n\t      this._updateTextarea();\n\t      this._saveEditingProps();\n\t      this._setEditingProps();\n\t      this._textBeforeEdit = this.text;\n\t\n\t      this._tick();\n\t      this.fire('editing:entered');\n\t      this._fireSelectionChanged();\n\t      if (!this.canvas) {\n\t        return this;\n\t      }\n\t      this.canvas.fire('text:editing:entered', { target: this });\n\t      this.initMouseMoveHandler();\n\t      this.canvas.renderAll();\n\t      return this;\n\t    },\n\t\n\t    exitEditingOnOthers: function(canvas) {\n\t      if (canvas._iTextInstances) {\n\t        canvas._iTextInstances.forEach(function(obj) {\n\t          obj.selected = false;\n\t          if (obj.isEditing) {\n\t            obj.exitEditing();\n\t          }\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Initializes \"mousemove\" event handler\n\t     */\n\t    initMouseMoveHandler: function() {\n\t      this.canvas.on('mouse:move', this.mouseMoveHandler);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    mouseMoveHandler: function(options) {\n\t      if (!this.__isMousedown || !this.isEditing) {\n\t        return;\n\t      }\n\t\n\t      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n\t          currentStart = this.selectionStart,\n\t          currentEnd = this.selectionEnd;\n\t      if (\n\t        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n\t        &&\n\t        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n\t      ) {\n\t        return;\n\t      }\n\t      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n\t        this.selectionStart = this.__selectionStartOnMouseDown;\n\t        this.selectionEnd = newSelectionStart;\n\t      }\n\t      else {\n\t        this.selectionStart = newSelectionStart;\n\t        this.selectionEnd = this.__selectionStartOnMouseDown;\n\t      }\n\t      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n\t        this.restartCursorIfNeeded();\n\t        this._fireSelectionChanged();\n\t        this._updateTextarea();\n\t        this.renderCursorOrSelection();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setEditingProps: function() {\n\t      this.hoverCursor = 'text';\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n\t      }\n\t\n\t      this.borderColor = this.editingBorderColor;\n\t\n\t      this.hasControls = this.selectable = false;\n\t      this.lockMovementX = this.lockMovementY = true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateTextarea: function() {\n\t      if (!this.hiddenTextarea || this.inCompositionMode) {\n\t        return;\n\t      }\n\t      this.cursorOffsetCache = { };\n\t      this.hiddenTextarea.value = this.text;\n\t      this.hiddenTextarea.selectionStart = this.selectionStart;\n\t      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        var style = this._calcTextareaPosition();\n\t        this.hiddenTextarea.style.left = style.left;\n\t        this.hiddenTextarea.style.top = style.top;\n\t        this.hiddenTextarea.style.fontSize = style.fontSize;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Object} style contains style for hiddenTextarea\n\t     */\n\t    _calcTextareaPosition: function() {\n\t      if (!this.canvas) {\n\t        return { x: 1, y: 1 };\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = boundaries.leftOffset,\n\t          m = this.calcTransformMatrix(),\n\t          p = {\n\t            x: boundaries.left + leftOffset,\n\t            y: boundaries.top + boundaries.topOffset + charHeight\n\t          },\n\t          upperCanvas = this.canvas.upperCanvasEl,\n\t          maxWidth = upperCanvas.width - charHeight,\n\t          maxHeight = upperCanvas.height - charHeight;\n\t\n\t      p = fabric.util.transformPoint(p, m);\n\t      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\t\n\t      if (p.x < 0) {\n\t        p.x = 0;\n\t      }\n\t      if (p.x > maxWidth) {\n\t        p.x = maxWidth;\n\t      }\n\t      if (p.y < 0) {\n\t        p.y = 0;\n\t      }\n\t      if (p.y > maxHeight) {\n\t        p.y = maxHeight;\n\t      }\n\t\n\t      // add canvas offset on document\n\t      p.x += this.canvas._offset.left;\n\t      p.y += this.canvas._offset.top;\n\t\n\t      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _saveEditingProps: function() {\n\t      this._savedProps = {\n\t        hasControls: this.hasControls,\n\t        borderColor: this.borderColor,\n\t        lockMovementX: this.lockMovementX,\n\t        lockMovementY: this.lockMovementY,\n\t        hoverCursor: this.hoverCursor,\n\t        defaultCursor: this.canvas && this.canvas.defaultCursor,\n\t        moveCursor: this.canvas && this.canvas.moveCursor\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _restoreEditingProps: function() {\n\t      if (!this._savedProps) {\n\t        return;\n\t      }\n\t\n\t      this.hoverCursor = this._savedProps.overCursor;\n\t      this.hasControls = this._savedProps.hasControls;\n\t      this.borderColor = this._savedProps.borderColor;\n\t      this.lockMovementX = this._savedProps.lockMovementX;\n\t      this.lockMovementY = this._savedProps.lockMovementY;\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n\t        this.canvas.moveCursor = this._savedProps.moveCursor;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Exits from editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    exitEditing: function() {\n\t      var isTextChanged = (this._textBeforeEdit !== this.text);\n\t      this.selected = false;\n\t      this.isEditing = false;\n\t      this.selectable = true;\n\t\n\t      this.selectionEnd = this.selectionStart;\n\t\n\t      if (this.hiddenTextarea) {\n\t        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n\t        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n\t        this.hiddenTextarea = null;\n\t      }\n\t\n\t      this.abortCursorAnimation();\n\t      this._restoreEditingProps();\n\t      this._currentCursorOpacity = 0;\n\t\n\t      this.fire('editing:exited');\n\t      isTextChanged && this.fire('modified');\n\t      if (this.canvas) {\n\t        this.canvas.off('mouse:move', this.mouseMoveHandler);\n\t        this.canvas.fire('text:editing:exited', { target: this });\n\t        isTextChanged && this.canvas.fire('object:modified', { target: this });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this.styles) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[prop];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeCharsFromTo: function(start, end) {\n\t      while (end !== start) {\n\t        this._removeSingleCharAndStyle(start + 1);\n\t        end--;\n\t      }\n\t      this.selectionStart = start;\n\t      this.selectionEnd = start;\n\t    },\n\t\n\t    _removeSingleCharAndStyle: function(index) {\n\t      var isBeginningOfLine = this.text[index - 1] === '\\n',\n\t          indexStyle        = isBeginningOfLine ? index : index - 1;\n\t      this.removeStyleObject(isBeginningOfLine, indexStyle);\n\t      this.text = this.text.slice(0, index - 1) +\n\t        this.text.slice(index);\n\t\n\t      this._textLines = this._splitTextIntoLines();\n\t    },\n\t\n\t    /**\n\t     * Inserts characters where cursor is (replacing selection if one exists)\n\t     * @param {String} _chars Characters to insert\n\t     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n\t     */\n\t    insertChars: function(_chars, useCopiedStyle) {\n\t      var style;\n\t\n\t      if (this.selectionEnd - this.selectionStart > 1) {\n\t        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t      }\n\t      //short circuit for block paste\n\t      if (!useCopiedStyle && this.isEmptyStyles()) {\n\t        this.insertChar(_chars, false);\n\t        return;\n\t      }\n\t      for (var i = 0, len = _chars.length; i < len; i++) {\n\t        if (useCopiedStyle) {\n\t          style = fabric.util.object.clone(fabric.copiedTextStyle[i], true);\n\t        }\n\t        this.insertChar(_chars[i], i < len - 1, style);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts a character where cursor is\n\t     * @param {String} _char Characters to insert\n\t     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n\t     * @param {Object} styleObject Style to be inserted for the new char\n\t     */\n\t    insertChar: function(_char, skipUpdate, styleObject) {\n\t      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n\t      this.text = this.text.slice(0, this.selectionStart) +\n\t        _char + this.text.slice(this.selectionEnd);\n\t      this._textLines = this._splitTextIntoLines();\n\t      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n\t      this.selectionStart += _char.length;\n\t      this.selectionEnd = this.selectionStart;\n\t      if (skipUpdate) {\n\t        return;\n\t      }\n\t      this._updateTextarea();\n\t      this.setCoords();\n\t      this._fireSelectionChanged();\n\t      this.fire('changed');\n\t      this.restartCursorIfNeeded();\n\t      if (this.canvas) {\n\t        this.canvas.fire('text:changed', { target: this });\n\t        this.canvas.renderAll();\n\t      }\n\t    },\n\t\n\t    restartCursorIfNeeded: function() {\n\t      if (!this._currentTickState || this._currentTickState.isAborted\n\t        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n\t      ) {\n\t        this.initDelayedCursor();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t\n\t      this.shiftLineStyles(lineIndex, +1);\n\t\n\t      var currentCharStyle = {},\n\t          newLineStyles    = {};\n\t\n\t      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n\t        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n\t      }\n\t\n\t      // if there's nothing after cursor,\n\t      // we clone current char style onto the next (otherwise empty) line\n\t      if (isEndOfLine && currentCharStyle) {\n\t        newLineStyles[0] = clone(currentCharStyle);\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      // otherwise we clone styles of all chars\n\t      // after cursor onto the next line, from the beginning\n\t      else {\n\t        var somethingAdded = false;\n\t        for (var index in this.styles[lineIndex]) {\n\t          var numIndex = parseInt(index, 10);\n\t          if (numIndex >= charIndex) {\n\t            somethingAdded = true;\n\t            newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n\t            // remove lines from the previous line since they're on a new line now\n\t            delete this.styles[lineIndex][index];\n\t          }\n\t        }\n\t        somethingAdded && (this.styles[lineIndex + 1] = newLineStyles);\n\t      }\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t\n\t      var currentLineStyles       = this.styles[lineIndex],\n\t          currentLineStylesCloned = clone(currentLineStyles);\n\t\n\t      if (charIndex === 0 && !style) {\n\t        charIndex = 1;\n\t      }\n\t\n\t      // shift all char styles by 1 forward\n\t      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\t      for (var index in currentLineStylesCloned) {\n\t        var numericIndex = parseInt(index, 10);\n\t\n\t        if (numericIndex >= charIndex) {\n\t          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\t\n\t          // only delete the style if there was nothing moved there\n\t          if (!currentLineStylesCloned[numericIndex - 1]) {\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t      var newStyle = style || clone(currentLineStyles[charIndex - 1]);\n\t      newStyle && (this.styles[lineIndex][charIndex] = newStyle);\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object(s)\n\t     * @param {String} _chars Characters at the location where style is inserted\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     * @param {Object} [styleObject] Style to insert\n\t     */\n\t    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n\t      // removed shortcircuit over isEmptyStyles\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        this._setLineStyle(lineIndex, {});\n\t      }\n\t\n\t      if (_chars === '\\n') {\n\t        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n\t      }\n\t      else {\n\t        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward or downward\n\t      var clonedStyles = clone(this.styles);\n\t      for (var line in clonedStyles) {\n\t        var numericLine = parseInt(line, 10);\n\t        if (numericLine <= lineIndex) {\n\t          delete clonedStyles[numericLine];\n\t        }\n\t      }\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    },\n\t\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      return this._textLines[lIndex - 1];\n\t    },\n\t\n\t    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\t\n\t      if (isBeginningOfLine) {\n\t        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n\t            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\t\n\t        if (!this.styles[lineIndex - 1]) {\n\t          this.styles[lineIndex - 1] = {};\n\t        }\n\t        for (charIndex in this.styles[lineIndex]) {\n\t          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n\t            = this.styles[lineIndex][charIndex];\n\t        }\n\t        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n\t      }\n\t      else {\n\t        var currentLineStyles = this.styles[lineIndex];\n\t\n\t        if (currentLineStyles) {\n\t          delete currentLineStyles[charIndex];\n\t        }\n\t        var currentLineStylesCloned = clone(currentLineStyles);\n\t        // shift all styles by 1 backwards\n\t        for (var i in currentLineStylesCloned) {\n\t          var numericIndex = parseInt(i, 10);\n\t          if (numericIndex >= charIndex && numericIndex !== 0) {\n\t            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts new line\n\t     */\n\t    insertNewline: function() {\n\t      this.insertChars('\\n');\n\t    },\n\t\n\t    /**\n\t     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n\t     * mimic the key - mouse navigation when shift is pressed.\n\t     */\n\t    setSelectionStartEndWithShift: function(start, end, newSelection) {\n\t      if (newSelection <= start) {\n\t        if (end === start) {\n\t          this._selectionDirection = 'left';\n\t        }\n\t        else if (this._selectionDirection === 'right') {\n\t          this._selectionDirection = 'left';\n\t          this.selectionEnd = start;\n\t        }\n\t        this.selectionStart = newSelection;\n\t      }\n\t      else if (newSelection > start && newSelection < end) {\n\t        if (this._selectionDirection === 'right') {\n\t          this.selectionEnd = newSelection;\n\t        }\n\t        else {\n\t          this.selectionStart = newSelection;\n\t        }\n\t      }\n\t      else {\n\t        // newSelection is > selection start and end\n\t        if (end === start) {\n\t          this._selectionDirection = 'right';\n\t        }\n\t        else if (this._selectionDirection === 'left') {\n\t          this._selectionDirection = 'right';\n\t          this.selectionStart = end;\n\t        }\n\t        this.selectionEnd = newSelection;\n\t      }\n\t    },\n\t\n\t    setSelectionInBoundaries: function() {\n\t      var length = this.text.length;\n\t      if (this.selectionStart > length) {\n\t        this.selectionStart = length;\n\t      }\n\t      else if (this.selectionStart < 0) {\n\t        this.selectionStart = 0;\n\t      }\n\t      if (this.selectionEnd > length) {\n\t        this.selectionEnd = length;\n\t      }\n\t      else if (this.selectionEnd < 0) {\n\t        this.selectionEnd = 0;\n\t      }\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t  /**\n\t   * Initializes \"dbclick\" event handler\n\t   */\n\t  initDoubleClickSimulation: function() {\n\t\n\t    // for double click\n\t    this.__lastClickTime = +new Date();\n\t\n\t    // for triple click\n\t    this.__lastLastClickTime = +new Date();\n\t\n\t    this.__lastPointer = { };\n\t\n\t    this.on('mousedown', this.onMouseDown.bind(this));\n\t  },\n\t\n\t  onMouseDown: function(options) {\n\t\n\t    this.__newClickTime = +new Date();\n\t    var newPointer = this.canvas.getPointer(options.e);\n\t\n\t    if (this.isTripleClick(newPointer, options.e)) {\n\t      this.fire('tripleclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t    else if (this.isDoubleClick(newPointer)) {\n\t      this.fire('dblclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t\n\t    this.__lastLastClickTime = this.__lastClickTime;\n\t    this.__lastClickTime = this.__newClickTime;\n\t    this.__lastPointer = newPointer;\n\t    this.__lastIsEditing = this.isEditing;\n\t    this.__lastSelected = this.selected;\n\t  },\n\t\n\t  isDoubleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n\t  },\n\t\n\t  isTripleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _stopEvent: function(e) {\n\t    e.preventDefault && e.preventDefault();\n\t    e.stopPropagation && e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Initializes event handlers related to cursor or selection\n\t   */\n\t  initCursorSelectionHandlers: function() {\n\t    this.initMousedownHandler();\n\t    this.initMouseupHandler();\n\t    this.initClicks();\n\t  },\n\t\n\t  /**\n\t   * Initializes double and triple click event handlers\n\t   */\n\t  initClicks: function() {\n\t    this.on('dblclick', function(options) {\n\t      this.selectWord(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t    this.on('tripleclick', function(options) {\n\t      this.selectLine(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mousedown\" event handler\n\t   */\n\t  initMousedownHandler: function() {\n\t    this.on('mousedown', function(options) {\n\t      if (!this.editable || (options.e.button && options.e.button !== 1)) {\n\t        return;\n\t      }\n\t      var pointer = this.canvas.getPointer(options.e);\n\t      this.__mousedownX = pointer.x;\n\t      this.__mousedownY = pointer.y;\n\t      this.__isMousedown = true;\n\t\n\t      if (this.selected) {\n\t        this.setCursorByClick(options.e);\n\t      }\n\t\n\t      if (this.isEditing) {\n\t        this.__selectionStartOnMouseDown = this.selectionStart;\n\t        if (this.selectionStart === this.selectionEnd) {\n\t          this.abortCursorAnimation();\n\t        }\n\t        this.renderCursorOrSelection();\n\t      }\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _isObjectMoved: function(e) {\n\t    var pointer = this.canvas.getPointer(e);\n\t\n\t    return this.__mousedownX !== pointer.x ||\n\t           this.__mousedownY !== pointer.y;\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mouseup\" event handler\n\t   */\n\t  initMouseupHandler: function() {\n\t    this.on('mouseup', function(options) {\n\t      this.__isMousedown = false;\n\t      if (!this.editable || this._isObjectMoved(options.e) || (options.e.button && options.e.button !== 1)) {\n\t        return;\n\t      }\n\t\n\t      if (this.__lastSelected && !this.__corner) {\n\t        this.enterEditing(options.e);\n\t        if (this.selectionStart === this.selectionEnd) {\n\t          this.initDelayedCursor(true);\n\t        }\n\t        else {\n\t          this.renderCursorOrSelection();\n\t        }\n\t      }\n\t      this.selected = true;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Changes cursor location in a text depending on passed pointer (x/y) object\n\t   * @param {Event} e Event object\n\t   */\n\t  setCursorByClick: function(e) {\n\t    var newSelection = this.getSelectionStartFromPointer(e),\n\t        start = this.selectionStart, end = this.selectionEnd;\n\t    if (e.shiftKey) {\n\t      this.setSelectionStartEndWithShift(start, end, newSelection);\n\t    }\n\t    else {\n\t      this.selectionStart = newSelection;\n\t      this.selectionEnd = newSelection;\n\t    }\n\t    if (this.isEditing) {\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns index of a character corresponding to where an object was clicked\n\t   * @param {Event} e Event object\n\t   * @return {Number} Index of a character\n\t   */\n\t  getSelectionStartFromPointer: function(e) {\n\t    var mouseOffset = this.getLocalPointer(e),\n\t        prevWidth = 0,\n\t        width = 0,\n\t        height = 0,\n\t        charIndex = 0,\n\t        newSelectionStart,\n\t        line;\n\t\n\t    for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t      line = this._textLines[i];\n\t      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\t\n\t      var widthOfLine = this._getLineWidth(this.ctx, i),\n\t          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\t\n\t      width = lineLeftOffset * this.scaleX;\n\t\n\t      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t\n\t        prevWidth = width;\n\t\n\t        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n\t                 this.scaleX;\n\t\n\t        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n\t          charIndex++;\n\t          continue;\n\t        }\n\t\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i, jlen);\n\t      }\n\t\n\t      if (mouseOffset.y < height) {\n\t        //this happens just on end of lines.\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n\t      }\n\t    }\n\t\n\t    // clicked somewhere after all chars, so set at the end\n\t    if (typeof newSelectionStart === 'undefined') {\n\t      return this.text.length;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\t\n\t    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n\t        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n\t        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n\t        newSelectionStart = index + offset;\n\t\n\t    // if object is horizontally flipped, mirror cursor location from the end\n\t    if (this.flipX) {\n\t      newSelectionStart = jlen - newSelectionStart;\n\t    }\n\t\n\t    if (newSelectionStart > this.text.length) {\n\t      newSelectionStart = this.text.length;\n\t    }\n\t\n\t    return newSelectionStart;\n\t  }\n\t});\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t  /**\n\t   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n\t   */\n\t  initHiddenTextarea: function() {\n\t    this.hiddenTextarea = fabric.document.createElement('textarea');\n\t    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n\t    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n\t    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n\t    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n\t    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n\t    this.hiddenTextarea.setAttribute('wrap', 'off');\n\t    var style = this._calcTextareaPosition();\n\t    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n\t    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n\t    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n\t    fabric.document.body.appendChild(this.hiddenTextarea);\n\t\n\t    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\t\n\t    if (!this._clickHandlerInitialized && this.canvas) {\n\t      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n\t      this._clickHandlerInitialized = true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * For functionalities on keyDown\n\t   * Map a special key to a function of the instance/prototype\n\t   * If you need different behaviour for ESC or TAB or arrows, you have to change\n\t   * this map setting the name of a function that you build on the fabric.Itext or\n\t   * your prototype.\n\t   * the map change will affect all Instances unless you need for only some text Instances\n\t   * in that case you have to clone this object and assign your Instance.\n\t   * this.keysMap = fabric.util.object.clone(this.keysMap);\n\t   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n\t   */\n\t  keysMap: {\n\t    8:  'removeChars',\n\t    9:  'exitEditing',\n\t    27: 'exitEditing',\n\t    13: 'insertNewline',\n\t    33: 'moveCursorUp',\n\t    34: 'moveCursorDown',\n\t    35: 'moveCursorRight',\n\t    36: 'moveCursorLeft',\n\t    37: 'moveCursorLeft',\n\t    38: 'moveCursorUp',\n\t    39: 'moveCursorRight',\n\t    40: 'moveCursorDown',\n\t    46: 'forwardDelete'\n\t  },\n\t\n\t  /**\n\t   * For functionalities on keyUp + ctrl || cmd\n\t   */\n\t  ctrlKeysMapUp: {\n\t    67: 'copy',\n\t    88: 'cut'\n\t  },\n\t\n\t  /**\n\t   * For functionalities on keyDown + ctrl || cmd\n\t   */\n\t  ctrlKeysMapDown: {\n\t    65: 'selectAll'\n\t  },\n\t\n\t  onClick: function() {\n\t    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n\t    this.hiddenTextarea && this.hiddenTextarea.focus();\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyDown: function(e) {\n\t    if (!this.isEditing) {\n\t      return;\n\t    }\n\t    if (e.keyCode in this.keysMap) {\n\t      this[this.keysMap[e.keyCode]](e);\n\t    }\n\t    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n\t      this[this.ctrlKeysMapDown[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    if (e.keyCode >= 33 && e.keyCode <= 40) {\n\t      // if i press an arrow key just update selection\n\t      this.clearContextTop();\n\t      this.renderCursorOrSelection();\n\t    }\n\t    else {\n\t      this.canvas && this.canvas.renderAll();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n\t   * if a copy/cut event fired, keyup is dismissed\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyUp: function(e) {\n\t    if (!this.isEditing || this._copyDone) {\n\t      this._copyDone = false;\n\t      return;\n\t    }\n\t    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n\t      this[this.ctrlKeysMapUp[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this.canvas && this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * Handles onInput event\n\t   * @param {Event} e Event object\n\t   */\n\t  onInput: function(e) {\n\t    if (!this.isEditing || this.inCompositionMode) {\n\t      return;\n\t    }\n\t    var offset = this.selectionStart || 0,\n\t        offsetEnd = this.selectionEnd || 0,\n\t        textLength = this.text.length,\n\t        newTextLength = this.hiddenTextarea.value.length,\n\t        diff, charsToInsert, start;\n\t    if (newTextLength > textLength) {\n\t      //we added some character\n\t      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n\t      diff = newTextLength - textLength;\n\t      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n\t    }\n\t    else {\n\t      //we selected a portion of text and then input something else.\n\t      //Internet explorer does not trigger this else\n\t      diff = newTextLength - textLength + offsetEnd - offset;\n\t      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n\t    }\n\t    this.insertChars(charsToInsert);\n\t    e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Composition start\n\t   */\n\t  onCompositionStart: function() {\n\t    this.inCompositionMode = true;\n\t    this.prevCompositionLength = 0;\n\t    this.compositionStart = this.selectionStart;\n\t  },\n\t\n\t  /**\n\t   * Composition end\n\t   */\n\t  onCompositionEnd: function() {\n\t    this.inCompositionMode = false;\n\t  },\n\t\n\t  /**\n\t   * Composition update\n\t   */\n\t  onCompositionUpdate: function(e) {\n\t    var data = e.data;\n\t    this.selectionStart = this.compositionStart;\n\t    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n\t      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n\t    this.insertChars(data, false);\n\t    this.prevCompositionLength = data.length;\n\t  },\n\t\n\t  /**\n\t   * Forward delete\n\t   */\n\t  forwardDelete: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      if (this.selectionStart === this.text.length) {\n\t        return;\n\t      }\n\t      this.moveCursorRight(e);\n\t    }\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * Copies selected text\n\t   * @param {Event} e Event object\n\t   */\n\t  copy: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      //do not cut-copy if no selection\n\t      return;\n\t    }\n\t    var selectedText = this.getSelectedText(),\n\t        clipboardData = this._getClipboardData(e);\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      clipboardData.setData('text', selectedText);\n\t    }\n\t\n\t    fabric.copiedText = selectedText;\n\t    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd);\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this._copyDone = true;\n\t  },\n\t\n\t  /**\n\t   * Pastes text\n\t   * @param {Event} e Event object\n\t   */\n\t  paste: function(e) {\n\t    var copiedText = null,\n\t        clipboardData = this._getClipboardData(e),\n\t        useCopiedStyle = true;\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n\t      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n\t        useCopiedStyle = false;\n\t      }\n\t    }\n\t    else {\n\t      copiedText = fabric.copiedText;\n\t    }\n\t\n\t    if (copiedText) {\n\t      this.insertChars(copiedText, useCopiedStyle);\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t  },\n\t\n\t  /**\n\t   * Cuts text\n\t   * @param {Event} e Event object\n\t   */\n\t  cut: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      return;\n\t    }\n\t\n\t    this.copy(e);\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   * @return {Object} Clipboard data object\n\t   */\n\t  _getClipboardData: function(e) {\n\t    return (e && e.clipboardData) || fabric.window.clipboardData;\n\t  },\n\t\n\t  /**\n\t   * Finds the width in pixels before the cursor on the same line\n\t   * @private\n\t   * @param {Number} lineIndex\n\t   * @param {Number} charIndex\n\t   * @return {Number} widthBeforeCursor width before cursor\n\t   */\n\t  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n\t    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n\t        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n\t        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\t\n\t    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n\t      _char = textBeforeCursor[i];\n\t      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n\t    }\n\t    return widthBeforeCursor;\n\t  },\n\t\n\t  /**\n\t   * Gets start offset of a selection\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getDownCursorOffset: function(e, isRight) {\n\t    var selectionProp = this._getSelectionForOffset(e, isRight),\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    // if on last line, down cursor goes to end of line\n\t    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n\t      // move to the end of a text\n\t      return this.text.length - selectionProp;\n\t    }\n\t    var charIndex = cursorLocation.charIndex,\n\t        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n\t        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n\t        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\t\n\t    return textAfterCursor.length + indexOnOtherLine + 2;\n\t  },\n\t\n\t  /**\n\t   * private\n\t   * Helps finding if the offset should be counted from Start or End\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  _getSelectionForOffset: function(e, isRight) {\n\t    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n\t      return this.selectionEnd;\n\t    }\n\t    else {\n\t      return this.selectionStart;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getUpCursorOffset: function(e, isRight) {\n\t    var selectionProp = this._getSelectionForOffset(e, isRight),\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n\t      // if on first line, up cursor goes to start of line\n\t      return -selectionProp;\n\t    }\n\t    var charIndex = cursorLocation.charIndex,\n\t        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n\t        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n\t        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n\t    // return a negative offset\n\t    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n\t  },\n\t\n\t  /**\n\t   * find for a given width it founds the matching character.\n\t   * @private\n\t   */\n\t  _getIndexOnLine: function(lineIndex, width) {\n\t\n\t    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n\t        textOnLine = this._textLines[lineIndex],\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n\t        widthOfCharsOnLine = lineLeftOffset,\n\t        indexOnLine = 0,\n\t        foundMatch;\n\t\n\t    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\t\n\t      var _char = textOnLine[j],\n\t          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\t\n\t      widthOfCharsOnLine += widthOfChar;\n\t\n\t      if (widthOfCharsOnLine > width) {\n\t\n\t        foundMatch = true;\n\t\n\t        var leftEdge = widthOfCharsOnLine - widthOfChar,\n\t            rightEdge = widthOfCharsOnLine,\n\t            offsetFromLeftEdge = Math.abs(leftEdge - width),\n\t            offsetFromRightEdge = Math.abs(rightEdge - width);\n\t\n\t        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    // reached end\n\t    if (!foundMatch) {\n\t      indexOnLine = textOnLine.length - 1;\n\t    }\n\t\n\t    return indexOnLine;\n\t  },\n\t\n\t\n\t  /**\n\t   * Moves cursor down\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorDown: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t    this._moveCursorUpOrDown('Down', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorUp: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t    this._moveCursorUpOrDown('Up', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up or down, fires the events\n\t   * @param {String} direction 'Up' or 'Down'\n\t   * @param {Event} e Event object\n\t   */\n\t  _moveCursorUpOrDown: function(direction, e) {\n\t    // getUpCursorOffset\n\t    // getDownCursorOffset\n\t    var action = 'get' + direction + 'CursorOffset',\n\t        offset = this[action](e, this._selectionDirection === 'right');\n\t    if (e.shiftKey) {\n\t      this.moveCursorWithShift(offset);\n\t    }\n\t    else {\n\t      this.moveCursorWithoutShift(offset);\n\t    }\n\t    if (offset !== 0) {\n\t      this.setSelectionInBoundaries();\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this.initDelayedCursor();\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor with shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorWithShift: function(offset) {\n\t    var newSelection = this._selectionDirection === 'left'\n\t    ? this.selectionStart + offset\n\t    : this.selectionEnd + offset;\n\t    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n\t    return offset !== 0;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up without shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorWithoutShift: function(offset) {\n\t    if (offset < 0) {\n\t      this.selectionStart += offset;\n\t      this.selectionEnd = this.selectionStart;\n\t    }\n\t    else {\n\t      this.selectionEnd += offset;\n\t      this.selectionStart = this.selectionEnd;\n\t    }\n\t    return offset !== 0;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorLeft: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t    this._moveCursorLeftOrRight('Left', e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @return {Boolean} true if a change happened\n\t   */\n\t  _move: function(e, prop, direction) {\n\t    var newValue;\n\t    if (e.altKey) {\n\t      newValue = this['findWordBoundary' + direction](this[prop]);\n\t    }\n\t    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n\t      newValue = this['findLineBoundary' + direction](this[prop]);\n\t    }\n\t    else {\n\t      this[prop] += direction === 'Left' ? -1 : 1;\n\t      return true;\n\t    }\n\t    if (typeof newValue !== undefined && this[prop] !== newValue) {\n\t      this[prop] = newValue;\n\t      return true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveLeft: function(e, prop) {\n\t    return this._move(e, prop, 'Left');\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveRight: function(e, prop) {\n\t    return this._move(e, prop, 'Right');\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left without keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithoutShift: function(e) {\n\t    var change = true;\n\t    this._selectionDirection = 'left';\n\t\n\t    // only move cursor when there is no selection,\n\t    // otherwise we discard it, and leave cursor on same place\n\t    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n\t      change = this._moveLeft(e, 'selectionStart');\n\t\n\t    }\n\t    this.selectionEnd = this.selectionStart;\n\t    return change;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithShift: function(e) {\n\t    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n\t      return this._moveLeft(e, 'selectionEnd');\n\t    }\n\t    else if (this.selectionStart !== 0){\n\t      this._selectionDirection = 'left';\n\t      return this._moveLeft(e, 'selectionStart');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRight: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t    this._moveCursorLeftOrRight('Right', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right or Left, fires event\n\t   * @param {String} direction 'Left', 'Right'\n\t   * @param {Event} e Event object\n\t   */\n\t  _moveCursorLeftOrRight: function(direction, e) {\n\t    var actionName = 'moveCursor' + direction + 'With';\n\t    this._currentCursorOpacity = 1;\n\t\n\t    if (e.shiftKey) {\n\t      actionName += 'Shift';\n\t    }\n\t    else {\n\t      actionName += 'outShift';\n\t    }\n\t    if (this[actionName](e)) {\n\t      this.abortCursorAnimation();\n\t      this.initDelayedCursor();\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorRightWithShift: function(e) {\n\t    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n\t      return this._moveRight(e, 'selectionStart');\n\t    }\n\t    else if (this.selectionEnd !== this.text.length) {\n\t      this._selectionDirection = 'right';\n\t      return this._moveRight(e, 'selectionEnd');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right without keeping selection\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRightWithoutShift: function(e) {\n\t    var changed = true;\n\t    this._selectionDirection = 'right';\n\t\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      changed = this._moveRight(e, 'selectionStart');\n\t      this.selectionEnd = this.selectionStart;\n\t    }\n\t    else {\n\t      this.selectionStart = this.selectionEnd;\n\t    }\n\t    return changed;\n\t  },\n\t\n\t  /**\n\t   * Removes characters selected by selection\n\t   * @param {Event} e Event object\n\t   */\n\t  removeChars: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this._removeCharsNearCursor(e);\n\t    }\n\t    else {\n\t      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t    }\n\t\n\t    this.set('dirty', true);\n\t    this.setSelectionEnd(this.selectionStart);\n\t\n\t    this._removeExtraneousStyles();\n\t\n\t    this.canvas && this.canvas.renderAll();\n\t\n\t    this.setCoords();\n\t    this.fire('changed');\n\t    this.canvas && this.canvas.fire('text:changed', { target: this });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   */\n\t  _removeCharsNearCursor: function(e) {\n\t    if (this.selectionStart === 0) {\n\t      return;\n\t    }\n\t    if (e.metaKey) {\n\t      // remove all till the start of current line\n\t      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftLineBoundary);\n\t    }\n\t    else if (e.altKey) {\n\t      // remove all till the start of current word\n\t      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftWordBoundary);\n\t    }\n\t    else {\n\t      this._removeSingleCharAndStyle(this.selectionStart);\n\t      this.setSelectionStart(this.selectionStart - 1);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t  var toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        fabric.Text.prototype._setSVGTextLineText.call(this,\n\t          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n\t      }\n\t      else {\n\t        this._setSVGTextLineChars(\n\t          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\t\n\t      var chars = this._textLines[lineIndex],\n\t          charOffset = 0,\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n\t          lineOffset = this._getSVGLineTopOffset(lineIndex),\n\t          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t      for (var i = 0, len = chars.length; i < len; i++) {\n\t        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\t\n\t        textSpans.push(\n\t          this._createTextCharSpan(\n\t            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\t\n\t        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\t\n\t        if (styleDecl.textBackgroundColor) {\n\t          textBgRects.push(\n\t            this._createTextCharBg(\n\t              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n\t        }\n\t\n\t        charOffset += charWidth;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLineTopOffset: function(lineIndex) {\n\t      var lineTopOffset = 0, lastHeight = 0;\n\t      for (var j = 0; j < lineIndex; j++) {\n\t        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n\t      }\n\t      lastHeight = this._getHeightOfLine(this.ctx, j);\n\t      return {\n\t        lineTop: lineTopOffset,\n\t        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n\t      return [\n\t        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n\t        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n\t        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n\t        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n\t        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n'\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\t\n\t      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n\t        visible: true,\n\t        fill: this.fill,\n\t        stroke: this.stroke,\n\t        type: 'text',\n\t        getSvgFilter: fabric.Object.prototype.getSvgFilter\n\t      }, styleDecl));\n\t\n\t      return [\n\t        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n\t        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n\t          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n\t          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n\t          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n\t          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n\t          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n\t        'style=\"', fillStyles, '\">',\n\t        fabric.util.string.escapeXml(_char),\n\t        '</tspan>\\n'\n\t      ].join('');\n\t    },\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = {});\n\t\n\t  /**\n\t   * Textbox class, based on IText, allows the user to resize the text rectangle\n\t   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n\t   * user can only change width. Height is adjusted automatically based on the\n\t   * wrapping of lines.\n\t   * @class fabric.Textbox\n\t   * @extends fabric.IText\n\t   * @mixes fabric.Observable\n\t   * @return {fabric.Textbox} thisArg\n\t   * @see {@link fabric.Textbox#initialize} for constructor definition\n\t   */\n\t  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'textbox',\n\t\n\t    /**\n\t     * Minimum width of textbox, in pixels.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minWidth: 20,\n\t\n\t    /**\n\t     * Minimum calculated width of a textbox, in pixels.\n\t     * fixed to 2 so that an empty textbox cannot go to 0\n\t     * and is still selectable without text.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    dynamicMinWidth: 2,\n\t\n\t    /**\n\t     * Cached array of text wrapping.\n\t     * @type Array\n\t     */\n\t    __cachedLines: null,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingY: true,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingFlip: true,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     * Textbox needs this on false\n\t     */\n\t    noScaleCache: false,\n\t\n\t    /**\n\t     * Properties which when set cause object to change dimensions\n\t     * @type Object\n\t     * @private\n\t     */\n\t    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\t\n\t    /**\n\t     * Constructor. Some scaling related property values are forced. Visibility\n\t     * of controls is also fixed; only the rotation and width controls are\n\t     * made available.\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Textbox} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t\n\t      this.callSuper('initialize', text, options);\n\t      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t      this.ctx = this.objectCaching ? this._cacheContext : fabric.util.createCanvasElement().getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * Unlike superclass's version of this function, Textbox does not update\n\t     * its width.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @private\n\t     * @override\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t        this.clearContextTop();\n\t      }\n\t\n\t      // clear dynamicMinWidth as it will be different after we re-wrap line\n\t      this.dynamicMinWidth = 0;\n\t\n\t      // wrap lines\n\t      this._textLines = this._splitTextIntoLines(ctx);\n\t      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\t      if (this.dynamicMinWidth > this.width) {\n\t        this._set('width', this.dynamicMinWidth);\n\t      }\n\t\n\t      // clear cache and re-calculate height\n\t      this._clearCache();\n\t      this.height = this._getTextHeight(ctx);\n\t      this.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Generate an object that translates the style object so that it is\n\t     * broken up by visual lines (new lines and automatic wrapping).\n\t     * The original text styles object is broken up by actual lines (new lines only),\n\t     * which is only sufficient for Text / IText\n\t     * @private\n\t     */\n\t    _generateStyleMap: function() {\n\t      var realLineCount     = 0,\n\t          realLineCharCount = 0,\n\t          charCount         = 0,\n\t          map               = {};\n\t\n\t      for (var i = 0; i < this._textLines.length; i++) {\n\t        if (this.text[charCount] === '\\n' && i > 0) {\n\t          realLineCharCount = 0;\n\t          charCount++;\n\t          realLineCount++;\n\t        }\n\t        else if (this.text[charCount] === ' ' && i > 0) {\n\t          // this case deals with space's that are removed from end of lines when wrapping\n\t          realLineCharCount++;\n\t          charCount++;\n\t        }\n\t\n\t        map[i] = { line: realLineCount, offset: realLineCharCount };\n\t\n\t        charCount += this._textLines[i].length;\n\t        realLineCharCount += this._textLines[i].length;\n\t      }\n\t\n\t      return map;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (this._styleMap) {\n\t        var map = this._styleMap[lineIndex];\n\t        if (!map) {\n\t          return returnCloneOrEmpty ? { } : null;\n\t        }\n\t        lineIndex = map.line;\n\t        charIndex = map.offset + charIndex;\n\t      }\n\t      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      return this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      this.styles[map.line] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      delete this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * Wraps text using the 'width' property of Textbox. First this function\n\t     * splits text on newlines, so we preserve newlines entered by the user.\n\t     * Then it wraps each line using the width of the Textbox by calling\n\t     * _wrapLine().\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text that is split into lines\n\t     * @returns {Array} Array of lines\n\t     */\n\t    _wrapText: function(ctx, text) {\n\t      var lines = text.split(this._reNewline), wrapped = [], i;\n\t\n\t      for (i = 0; i < lines.length; i++) {\n\t        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n\t      }\n\t\n\t      return wrapped;\n\t    },\n\t\n\t    /**\n\t     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {String} text\n\t     * @param {number} lineIndex\n\t     * @param {number} charOffset\n\t     * @returns {number}\n\t     * @private\n\t     */\n\t    _measureText: function(ctx, text, lineIndex, charOffset) {\n\t      var width = 0;\n\t      charOffset = charOffset || 0;\n\t      for (var i = 0, len = text.length; i < len; i++) {\n\t        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * Wraps a line of text using the width of the Textbox and a context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text to split into lines\n\t     * @param {Number} lineIndex\n\t     * @returns {Array} Array of line(s) into which the given text is wrapped\n\t     * to.\n\t     */\n\t    _wrapLine: function(ctx, text, lineIndex) {\n\t      var lineWidth        = 0,\n\t          lines            = [],\n\t          line             = '',\n\t          words            = text.split(' '),\n\t          word             = '',\n\t          offset           = 0,\n\t          infix            = ' ',\n\t          wordWidth        = 0,\n\t          infixWidth       = 0,\n\t          largestWordWidth = 0,\n\t          lineJustStarted = true,\n\t          additionalSpace = this._getWidthOfCharSpacing();\n\t\n\t      for (var i = 0; i < words.length; i++) {\n\t        word = words[i];\n\t        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\t\n\t        offset += word.length;\n\t\n\t        lineWidth += infixWidth + wordWidth - additionalSpace;\n\t\n\t        if (lineWidth >= this.width && !lineJustStarted) {\n\t          lines.push(line);\n\t          line = '';\n\t          lineWidth = wordWidth;\n\t          lineJustStarted = true;\n\t        }\n\t        else {\n\t          lineWidth += additionalSpace;\n\t        }\n\t\n\t        if (!lineJustStarted) {\n\t          line += infix;\n\t        }\n\t        line += word;\n\t\n\t        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n\t        offset++;\n\t        lineJustStarted = false;\n\t        // keep track of largest word\n\t        if (wordWidth > largestWordWidth) {\n\t          largestWordWidth = wordWidth;\n\t        }\n\t      }\n\t\n\t      i && lines.push(line);\n\t\n\t      if (largestWordWidth > this.dynamicMinWidth) {\n\t        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n\t      }\n\t\n\t      return lines;\n\t    },\n\t    /**\n\t     * Gets lines of text to render in the Textbox. This function calculates\n\t     * text wrapping on the fly everytime it is called.\n\t     * @returns {Array} Array of lines in the Textbox.\n\t     * @override\n\t     */\n\t    _splitTextIntoLines: function(ctx) {\n\t      ctx = ctx || this.ctx;\n\t      var originalAlign = this.textAlign;\n\t      this._styleMap = null;\n\t      ctx.save();\n\t      this._setTextStyles(ctx);\n\t      this.textAlign = 'left';\n\t      var lines = this._wrapText(ctx, this.text);\n\t      this.textAlign = originalAlign;\n\t      ctx.restore();\n\t      this._textLines = lines;\n\t      this._styleMap = this._generateStyleMap();\n\t      return lines;\n\t    },\n\t\n\t    /**\n\t     * When part of a group, we don't want the Textbox's scale to increase if\n\t     * the group's increases. That's why we reduce the scale of the Textbox by\n\t     * the amount that the group's increases. This is to maintain the effective\n\t     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n\t     * the same font-size value would result in different actual size depending\n\t     * on the value of the scale.\n\t     * @param {String} key\n\t     * @param {*} value\n\t     */\n\t    setOnGroup: function(key, value) {\n\t      if (key === 'scaleX') {\n\t        this.set('scaleX', Math.abs(1 / value));\n\t        this.set('width', (this.get('width') * value) /\n\t          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n\t        this.__oldScaleX = value;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n\t     * Overrides the superclass function to take into account text wrapping.\n\t     *\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t\n\t      var numLines = this._textLines.length,\n\t          removed  = 0;\n\t\n\t      for (var i = 0; i < numLines; i++) {\n\t        var line    = this._textLines[i],\n\t            lineLen = line.length;\n\t\n\t        if (selectionStart <= removed + lineLen) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart - removed\n\t          };\n\t        }\n\t\n\t        removed += lineLen;\n\t\n\t        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n\t          removed++;\n\t        }\n\t      }\n\t\n\t      return {\n\t        lineIndex: numLines - 1,\n\t        charIndex: this._textLines[numLines - 1].length\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Overrides superclass function and uses text wrapping data to get cursor\n\t     * boundary offsets instead of the array of chars.\n\t     * @param {Array} chars Unused\n\t     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n\t     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      var topOffset      = 0,\n\t          leftOffset     = 0,\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\t\n\t      for (var i = 0; i < cursorLocation.charIndex; i++) {\n\t        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n\t      }\n\t\n\t      for (i = 0; i < cursorLocation.lineIndex; i++) {\n\t        topOffset += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n\t          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n\t          * (1 - this._fontSizeFraction);\n\t      }\n\t\n\t      return {\n\t        top: topOffset,\n\t        left: leftOffset,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t    },\n\t\n\t    getMinWidth: function() {\n\t      return Math.max(this.minWidth, this.dynamicMinWidth);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.Textbox instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Textbox\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Textbox} instance of fabric.Textbox\n\t   */\n\t  fabric.Textbox.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Textbox', object, callback, forceAsync, 'text');\n\t  };\n\t\n\t  /**\n\t   * Returns the default controls visibility required for Textboxes.\n\t   * @returns {Object}\n\t   */\n\t  fabric.Textbox.getTextboxControlVisibility = function() {\n\t    return {\n\t      tl: false,\n\t      tr: false,\n\t      br: false,\n\t      bl: false,\n\t      ml: true,\n\t      mt: false,\n\t      mr: true,\n\t      mb: false,\n\t      mtr: true\n\t    };\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n\t   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n\t   */\n\t  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\t\n\t  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n\t                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t\n\t    var t = transform.target;\n\t    if (t instanceof fabric.Textbox) {\n\t      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n\t      if (w >= t.getMinWidth()) {\n\t        t.set('width', w);\n\t        return true;\n\t      }\n\t    }\n\t    else {\n\t      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n\t        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets controls of this group to the Textbox's special configuration if\n\t   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n\t   * it gets initialized to default value at runtime.\n\t   */\n\t  fabric.Group.prototype._refreshControlsVisibility = function() {\n\t    if (typeof fabric.Textbox === 'undefined') {\n\t      return;\n\t    }\n\t    for (var i = this._objects.length; i--;) {\n\t      if (this._objects[i] instanceof fabric.Textbox) {\n\t        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t        return;\n\t      }\n\t    }\n\t  };\n\t\n\t  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this._styleMap) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[this._styleMap[prop].line];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down. This function is slightly different than the one in\n\t     * itext_behaviour as it takes into account the styleMap.\n\t     *\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var map = this._styleMap[lineIndex];\n\t      // adjust line index\n\t      lineIndex = map.line;\n\t      fabric.IText.prototype.shiftLineStyles.call(this, lineIndex, offset);\n\t    },\n\t\n\t    /**\n\t     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n\t     *\n\t     * @param {Number} lIndex\n\t     * @returns {String}\n\t     * @private\n\t     */\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      var textOnPreviousLine = this._textLines[lIndex - 1];\n\t\n\t      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n\t        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\t\n\t        lIndex--;\n\t      }\n\t\n\t      return textOnPreviousLine;\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          map            = this._styleMap[cursorLocation.lineIndex],\n\t          lineIndex      = map.line,\n\t          charIndex      = map.offset + cursorLocation.charIndex;\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n\t  /**\n\t   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n\t   *\n\t   * @param {Number} mouseOffset\n\t   * @param {Number} prevWidth\n\t   * @param {Number} width\n\t   * @param {Number} index\n\t   * @param {Number} jlen\n\t   * @returns {Number}\n\t   */\n\t  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n\t    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\t\n\t    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n\t    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n\t    var tmp     = 0,\n\t        removed = 0;\n\t\n\t    // account for removed characters\n\t    for (var i = 0; i < this._textLines.length; i++) {\n\t      tmp += this._textLines[i].length;\n\t\n\t      if (tmp + removed >= index) {\n\t        break;\n\t      }\n\t\n\t      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n\t        removed++;\n\t      }\n\t    }\n\t\n\t    return index - i + removed;\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t    return;\n\t  }\n\t\n\t  var DOMParser = __webpack_require__(/*! xmldom */ 15).DOMParser,\n\t      URL = __webpack_require__(/*! url */ 16),\n\t      HTTP = __webpack_require__(/*! http */ 23),\n\t      HTTPS = __webpack_require__(/*! https */ 50),\n\t\n\t      Canvas = __webpack_require__(/*! canvas */ 14),\n\t      Image = __webpack_require__(/*! canvas */ 14).Image;\n\t\n\t  /** @private */\n\t  function request(url, encoding, callback) {\n\t    var oURL = URL.parse(url);\n\t\n\t    // detect if http or https is used\n\t    if ( !oURL.port ) {\n\t      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n\t    }\n\t\n\t    // assign request handler based on protocol\n\t    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n\t        req = reqHandler.request({\n\t          hostname: oURL.hostname,\n\t          port: oURL.port,\n\t          path: oURL.path,\n\t          method: 'GET'\n\t        }, function(response) {\n\t          var body = '';\n\t          if (encoding) {\n\t            response.setEncoding(encoding);\n\t          }\n\t          response.on('end', function () {\n\t            callback(body);\n\t          });\n\t          response.on('data', function (chunk) {\n\t            if (response.statusCode === 200) {\n\t              body += chunk;\n\t            }\n\t          });\n\t        });\n\t\n\t    req.on('error', function(err) {\n\t      if (err.errno === process.ECONNREFUSED) {\n\t        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n\t      }\n\t      else {\n\t        fabric.log(err.message);\n\t      }\n\t      callback(null);\n\t    });\n\t\n\t    req.end();\n\t  }\n\t\n\t  /** @private */\n\t  function requestFs(path, callback) {\n\t    var fs = __webpack_require__(/*! fs */ 51);\n\t    fs.readFile(path, function (err, data) {\n\t      if (err) {\n\t        fabric.log(err);\n\t        throw err;\n\t      }\n\t      else {\n\t        callback(data);\n\t      }\n\t    });\n\t  }\n\t\n\t  fabric.util.loadImage = function(url, callback, context) {\n\t    function createImageAndCallBack(data) {\n\t      if (data) {\n\t        img.src = new Buffer(data, 'binary');\n\t        // preserving original url, which seems to be lost in node-canvas\n\t        img._src = url;\n\t        callback && callback.call(context, img);\n\t      }\n\t      else {\n\t        img = null;\n\t        callback && callback.call(context, null, true);\n\t      }\n\t    }\n\t    var img = new Image();\n\t    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n\t      img.src = img._src = url;\n\t      callback && callback.call(context, img);\n\t    }\n\t    else if (url && url.indexOf('http') !== 0) {\n\t      requestFs(url, createImageAndCallBack);\n\t    }\n\t    else if (url) {\n\t      request(url, 'binary', createImageAndCallBack);\n\t    }\n\t    else {\n\t      callback && callback.call(context, url);\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromURL = function(url, callback, reviver) {\n\t    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n\t    if (url.indexOf('http') !== 0) {\n\t      requestFs(url, function(body) {\n\t        fabric.loadSVGFromString(body.toString(), callback, reviver);\n\t      });\n\t    }\n\t    else {\n\t      request(url, '', function(body) {\n\t        fabric.loadSVGFromString(body, callback, reviver);\n\t      });\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromString = function(string, callback, reviver) {\n\t    var doc = new DOMParser().parseFromString(string);\n\t    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n\t      callback && callback(results, options);\n\t    }, reviver);\n\t  };\n\t\n\t  fabric.util.getScript = function(url, callback) {\n\t    request(url, '', function(body) {\n\t      // eslint-disable-next-line no-eval\n\t      eval(body);\n\t      callback && callback();\n\t    });\n\t  };\n\t\n\t  // fabric.util.createCanvasElement = function(_, width, height) {\n\t  //   return new Canvas(width, height);\n\t  // }\n\t\n\t  /**\n\t   * Only available when running fabric on node.js\n\t   * @param {Number} width Canvas width\n\t   * @param {Number} height Canvas height\n\t   * @param {Object} [options] Options to pass to FabricCanvas.\n\t   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n\t   * @return {Object} wrapped canvas instance\n\t   */\n\t  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n\t    nodeCanvasOptions = nodeCanvasOptions || options;\n\t\n\t    var canvasEl = fabric.document.createElement('canvas'),\n\t        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n\t        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\t\n\t    // jsdom doesn't create style on canvas element, so here be temp. workaround\n\t    canvasEl.style = { };\n\t\n\t    canvasEl.width = nodeCanvas.width;\n\t    canvasEl.height = nodeCanvas.height;\n\t    options = options || { };\n\t    options.nodeCanvas = nodeCanvas;\n\t    options.nodeCacheCanvas = nodeCacheCanvas;\n\t    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n\t        fabricCanvas = new FabricCanvas(canvasEl, options);\n\t    fabricCanvas.nodeCanvas = nodeCanvas;\n\t    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n\t    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n\t    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n\t    fabricCanvas.Font = Canvas.Font;\n\t    return fabricCanvas;\n\t  };\n\t\n\t  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n\t  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n\t    el = el || fabric.document.createElement('canvas');\n\t    this.nodeCanvas = new Canvas(el.width, el.height);\n\t    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n\t    originaInitStatic.call(this, el, options);\n\t    this.contextContainer = this.nodeCanvas.getContext('2d');\n\t    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n\t    this.Font = Canvas.Font;\n\t  };\n\t\n\t  /** @ignore */\n\t  fabric.StaticCanvas.prototype.createPNGStream = function() {\n\t    return this.nodeCanvas.createPNGStream();\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n\t    return this.nodeCanvas.createJPEGStream(opts);\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n\t    if (!this._isRetinaScaling()) {\n\t      return;\n\t    }\n\t\n\t    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n\t    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n\t    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n\t  }\n\t\n\t  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n\t  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n\t    origSetBackstoreDimension.call(this, prop, value);\n\t    this.nodeCanvas[prop] = value;\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n\t  }\n\t\n\t})();\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../buffer/index.js */ 8).Buffer, __webpack_require__(/*! ./../../process/browser.js */ 12)))\n\n/***/ }),\n/* 8 */\n/*!***************************!*\\\n  !*** ./~/buffer/index.js ***!\n  \\***************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(/*! base64-js */ 9)\n\tvar ieee754 = __webpack_require__(/*! ieee754 */ 10)\n\tvar isArray = __webpack_require__(/*! isarray */ 11)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 9 */\n/*!******************************!*\\\n  !*** ./~/base64-js/index.js ***!\n  \\******************************/\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\t// Support decoding URL-safe base64 strings, as Node.js does.\n\t// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction getLens (b64) {\n\t  var len = b64.length\n\t\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // Trim off extra bytes after placeholder bytes are found\n\t  // See: https://github.com/beatgammit/base64-js/issues/42\n\t  var validLen = b64.indexOf('=')\n\t  if (validLen === -1) validLen = len\n\t\n\t  var placeHoldersLen = validLen === len\n\t    ? 0\n\t    : 4 - (validLen % 4)\n\t\n\t  return [validLen, placeHoldersLen]\n\t}\n\t\n\t// base64 is 4/3 + up to two characters of the original data\n\tfunction byteLength (b64) {\n\t  var lens = getLens(b64)\n\t  var validLen = lens[0]\n\t  var placeHoldersLen = lens[1]\n\t  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n\t}\n\t\n\tfunction _byteLength (b64, validLen, placeHoldersLen) {\n\t  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var tmp\n\t  var lens = getLens(b64)\n\t  var validLen = lens[0]\n\t  var placeHoldersLen = lens[1]\n\t\n\t  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\t\n\t  var curByte = 0\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  var len = placeHoldersLen > 0\n\t    ? validLen - 4\n\t    : validLen\n\t\n\t  for (var i = 0; i < len; i += 4) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 18) |\n\t      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n\t      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n\t      revLookup[b64.charCodeAt(i + 3)]\n\t    arr[curByte++] = (tmp >> 16) & 0xFF\n\t    arr[curByte++] = (tmp >> 8) & 0xFF\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHoldersLen === 2) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 2) |\n\t      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHoldersLen === 1) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 10) |\n\t      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n\t      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[curByte++] = (tmp >> 8) & 0xFF\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] +\n\t    lookup[num >> 12 & 0x3F] +\n\t    lookup[num >> 6 & 0x3F] +\n\t    lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp =\n\t      ((uint8[i] << 16) & 0xFF0000) +\n\t      ((uint8[i + 1] << 8) & 0xFF00) +\n\t      (uint8[i + 2] & 0xFF)\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(\n\t      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n\t    ))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    parts.push(\n\t      lookup[tmp >> 2] +\n\t      lookup[(tmp << 4) & 0x3F] +\n\t      '=='\n\t    )\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n\t    parts.push(\n\t      lookup[tmp >> 10] +\n\t      lookup[(tmp >> 4) & 0x3F] +\n\t      lookup[(tmp << 2) & 0x3F] +\n\t      '='\n\t    )\n\t  }\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ }),\n/* 10 */\n/*!****************************!*\\\n  !*** ./~/ieee754/index.js ***!\n  \\****************************/\n/***/ (function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = ((value * c) - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ }),\n/* 11 */\n/*!****************************!*\\\n  !*** ./~/isarray/index.js ***!\n  \\****************************/\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }),\n/* 12 */\n/*!******************************!*\\\n  !*** ./~/process/browser.js ***!\n  \\******************************/\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 13 */\n/*!***********************!*\\\n  !*** jsdom (ignored) ***!\n  \\***********************/\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 14 */\n/*!************************!*\\\n  !*** canvas (ignored) ***!\n  \\************************/\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 15 */\n/*!************************!*\\\n  !*** xmldom (ignored) ***!\n  \\************************/\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 16 */\n/*!**********************!*\\\n  !*** ./~/url/url.js ***!\n  \\**********************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar punycode = __webpack_require__(/*! punycode */ 17);\n\tvar util = __webpack_require__(/*! ./util */ 19);\n\t\n\texports.parse = urlParse;\n\texports.resolve = urlResolve;\n\texports.resolveObject = urlResolveObject;\n\texports.format = urlFormat;\n\t\n\texports.Url = Url;\n\t\n\tfunction Url() {\n\t  this.protocol = null;\n\t  this.slashes = null;\n\t  this.auth = null;\n\t  this.host = null;\n\t  this.port = null;\n\t  this.hostname = null;\n\t  this.hash = null;\n\t  this.search = null;\n\t  this.query = null;\n\t  this.pathname = null;\n\t  this.path = null;\n\t  this.href = null;\n\t}\n\t\n\t// Reference: RFC 3986, RFC 1808, RFC 2396\n\t\n\t// define these here so at least they only have to be\n\t// compiled once on the first module load.\n\tvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n\t    portPattern = /:[0-9]*$/,\n\t\n\t    // Special case for a simple path URL\n\t    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\t\n\t    // RFC 2396: characters reserved for delimiting URLs.\n\t    // We actually just auto-escape these.\n\t    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\t\n\t    // RFC 2396: characters not allowed for various reasons.\n\t    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\t\n\t    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n\t    autoEscape = ['\\''].concat(unwise),\n\t    // Characters that are never ever allowed in a hostname.\n\t    // Note that any invalid chars are also handled, but these\n\t    // are the ones that are *expected* to be seen, so we fast-path\n\t    // them.\n\t    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n\t    hostEndingChars = ['/', '?', '#'],\n\t    hostnameMaxLen = 255,\n\t    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n\t    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n\t    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\t    unsafeProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that never have a hostname.\n\t    hostlessProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that always contain a // bit.\n\t    slashedProtocol = {\n\t      'http': true,\n\t      'https': true,\n\t      'ftp': true,\n\t      'gopher': true,\n\t      'file': true,\n\t      'http:': true,\n\t      'https:': true,\n\t      'ftp:': true,\n\t      'gopher:': true,\n\t      'file:': true\n\t    },\n\t    querystring = __webpack_require__(/*! querystring */ 20);\n\t\n\tfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n\t  if (url && util.isObject(url) && url instanceof Url) return url;\n\t\n\t  var u = new Url;\n\t  u.parse(url, parseQueryString, slashesDenoteHost);\n\t  return u;\n\t}\n\t\n\tUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n\t  if (!util.isString(url)) {\n\t    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n\t  }\n\t\n\t  // Copy chrome, IE, opera backslash-handling behavior.\n\t  // Back slashes before the query string get converted to forward slashes\n\t  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n\t  var queryIndex = url.indexOf('?'),\n\t      splitter =\n\t          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n\t      uSplit = url.split(splitter),\n\t      slashRegex = /\\\\/g;\n\t  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n\t  url = uSplit.join(splitter);\n\t\n\t  var rest = url;\n\t\n\t  // trim before proceeding.\n\t  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\t  rest = rest.trim();\n\t\n\t  if (!slashesDenoteHost && url.split('#').length === 1) {\n\t    // Try fast path regexp\n\t    var simplePath = simplePathPattern.exec(rest);\n\t    if (simplePath) {\n\t      this.path = rest;\n\t      this.href = rest;\n\t      this.pathname = simplePath[1];\n\t      if (simplePath[2]) {\n\t        this.search = simplePath[2];\n\t        if (parseQueryString) {\n\t          this.query = querystring.parse(this.search.substr(1));\n\t        } else {\n\t          this.query = this.search.substr(1);\n\t        }\n\t      } else if (parseQueryString) {\n\t        this.search = '';\n\t        this.query = {};\n\t      }\n\t      return this;\n\t    }\n\t  }\n\t\n\t  var proto = protocolPattern.exec(rest);\n\t  if (proto) {\n\t    proto = proto[0];\n\t    var lowerProto = proto.toLowerCase();\n\t    this.protocol = lowerProto;\n\t    rest = rest.substr(proto.length);\n\t  }\n\t\n\t  // figure out if it's got a host\n\t  // user@server is *always* interpreted as a hostname, and url\n\t  // resolution will treat //foo/bar as host=foo,path=bar because that's\n\t  // how the browser resolves relative URLs.\n\t  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n\t    var slashes = rest.substr(0, 2) === '//';\n\t    if (slashes && !(proto && hostlessProtocol[proto])) {\n\t      rest = rest.substr(2);\n\t      this.slashes = true;\n\t    }\n\t  }\n\t\n\t  if (!hostlessProtocol[proto] &&\n\t      (slashes || (proto && !slashedProtocol[proto]))) {\n\t\n\t    // there's a hostname.\n\t    // the first instance of /, ?, ;, or # ends the host.\n\t    //\n\t    // If there is an @ in the hostname, then non-host chars *are* allowed\n\t    // to the left of the last @ sign, unless some host-ending character\n\t    // comes *before* the @-sign.\n\t    // URLs are obnoxious.\n\t    //\n\t    // ex:\n\t    // http://a@b@c/ => user:a@b host:c\n\t    // http://a@b?@c => user:a host:c path:/?@c\n\t\n\t    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n\t    // Review our test case against browsers more comprehensively.\n\t\n\t    // find the first instance of any hostEndingChars\n\t    var hostEnd = -1;\n\t    for (var i = 0; i < hostEndingChars.length; i++) {\n\t      var hec = rest.indexOf(hostEndingChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t\n\t    // at this point, either we have an explicit point where the\n\t    // auth portion cannot go past, or the last @ char is the decider.\n\t    var auth, atSign;\n\t    if (hostEnd === -1) {\n\t      // atSign can be anywhere.\n\t      atSign = rest.lastIndexOf('@');\n\t    } else {\n\t      // atSign must be in auth portion.\n\t      // http://a@b/c@d => host:b auth:a path:/c@d\n\t      atSign = rest.lastIndexOf('@', hostEnd);\n\t    }\n\t\n\t    // Now we have a portion which is definitely the auth.\n\t    // Pull that off.\n\t    if (atSign !== -1) {\n\t      auth = rest.slice(0, atSign);\n\t      rest = rest.slice(atSign + 1);\n\t      this.auth = decodeURIComponent(auth);\n\t    }\n\t\n\t    // the host is the remaining to the left of the first non-host char\n\t    hostEnd = -1;\n\t    for (var i = 0; i < nonHostChars.length; i++) {\n\t      var hec = rest.indexOf(nonHostChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t    // if we still have not hit it, then the entire thing is a host.\n\t    if (hostEnd === -1)\n\t      hostEnd = rest.length;\n\t\n\t    this.host = rest.slice(0, hostEnd);\n\t    rest = rest.slice(hostEnd);\n\t\n\t    // pull out port.\n\t    this.parseHost();\n\t\n\t    // we've indicated that there is a hostname,\n\t    // so even if it's empty, it has to be present.\n\t    this.hostname = this.hostname || '';\n\t\n\t    // if hostname begins with [ and ends with ]\n\t    // assume that it's an IPv6 address.\n\t    var ipv6Hostname = this.hostname[0] === '[' &&\n\t        this.hostname[this.hostname.length - 1] === ']';\n\t\n\t    // validate a little.\n\t    if (!ipv6Hostname) {\n\t      var hostparts = this.hostname.split(/\\./);\n\t      for (var i = 0, l = hostparts.length; i < l; i++) {\n\t        var part = hostparts[i];\n\t        if (!part) continue;\n\t        if (!part.match(hostnamePartPattern)) {\n\t          var newpart = '';\n\t          for (var j = 0, k = part.length; j < k; j++) {\n\t            if (part.charCodeAt(j) > 127) {\n\t              // we replace non-ASCII char with a temporary placeholder\n\t              // we need this to make sure size of hostname is not\n\t              // broken by replacing non-ASCII by nothing\n\t              newpart += 'x';\n\t            } else {\n\t              newpart += part[j];\n\t            }\n\t          }\n\t          // we test again with ASCII char only\n\t          if (!newpart.match(hostnamePartPattern)) {\n\t            var validParts = hostparts.slice(0, i);\n\t            var notHost = hostparts.slice(i + 1);\n\t            var bit = part.match(hostnamePartStart);\n\t            if (bit) {\n\t              validParts.push(bit[1]);\n\t              notHost.unshift(bit[2]);\n\t            }\n\t            if (notHost.length) {\n\t              rest = '/' + notHost.join('.') + rest;\n\t            }\n\t            this.hostname = validParts.join('.');\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this.hostname.length > hostnameMaxLen) {\n\t      this.hostname = '';\n\t    } else {\n\t      // hostnames are always lower case.\n\t      this.hostname = this.hostname.toLowerCase();\n\t    }\n\t\n\t    if (!ipv6Hostname) {\n\t      // IDNA Support: Returns a punycoded representation of \"domain\".\n\t      // It only converts parts of the domain name that\n\t      // have non-ASCII characters, i.e. it doesn't matter if\n\t      // you call it with a domain that already is ASCII-only.\n\t      this.hostname = punycode.toASCII(this.hostname);\n\t    }\n\t\n\t    var p = this.port ? ':' + this.port : '';\n\t    var h = this.hostname || '';\n\t    this.host = h + p;\n\t    this.href += this.host;\n\t\n\t    // strip [ and ] from the hostname\n\t    // the host field still retains them, though\n\t    if (ipv6Hostname) {\n\t      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\t      if (rest[0] !== '/') {\n\t        rest = '/' + rest;\n\t      }\n\t    }\n\t  }\n\t\n\t  // now rest is set to the post-host stuff.\n\t  // chop off any delim chars.\n\t  if (!unsafeProtocol[lowerProto]) {\n\t\n\t    // First, make 100% sure that any \"autoEscape\" chars get\n\t    // escaped, even if encodeURIComponent doesn't think they\n\t    // need to be.\n\t    for (var i = 0, l = autoEscape.length; i < l; i++) {\n\t      var ae = autoEscape[i];\n\t      if (rest.indexOf(ae) === -1)\n\t        continue;\n\t      var esc = encodeURIComponent(ae);\n\t      if (esc === ae) {\n\t        esc = escape(ae);\n\t      }\n\t      rest = rest.split(ae).join(esc);\n\t    }\n\t  }\n\t\n\t\n\t  // chop off from the tail first.\n\t  var hash = rest.indexOf('#');\n\t  if (hash !== -1) {\n\t    // got a fragment string.\n\t    this.hash = rest.substr(hash);\n\t    rest = rest.slice(0, hash);\n\t  }\n\t  var qm = rest.indexOf('?');\n\t  if (qm !== -1) {\n\t    this.search = rest.substr(qm);\n\t    this.query = rest.substr(qm + 1);\n\t    if (parseQueryString) {\n\t      this.query = querystring.parse(this.query);\n\t    }\n\t    rest = rest.slice(0, qm);\n\t  } else if (parseQueryString) {\n\t    // no query string, but parseQueryString still requested\n\t    this.search = '';\n\t    this.query = {};\n\t  }\n\t  if (rest) this.pathname = rest;\n\t  if (slashedProtocol[lowerProto] &&\n\t      this.hostname && !this.pathname) {\n\t    this.pathname = '/';\n\t  }\n\t\n\t  //to support http.request\n\t  if (this.pathname || this.search) {\n\t    var p = this.pathname || '';\n\t    var s = this.search || '';\n\t    this.path = p + s;\n\t  }\n\t\n\t  // finally, reconstruct the href based on what has been validated.\n\t  this.href = this.format();\n\t  return this;\n\t};\n\t\n\t// format a parsed object into a url string\n\tfunction urlFormat(obj) {\n\t  // ensure it's an object, and not a string url.\n\t  // If it's an obj, this is a no-op.\n\t  // this way, you can call url_format() on strings\n\t  // to clean up potentially wonky urls.\n\t  if (util.isString(obj)) obj = urlParse(obj);\n\t  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n\t  return obj.format();\n\t}\n\t\n\tUrl.prototype.format = function() {\n\t  var auth = this.auth || '';\n\t  if (auth) {\n\t    auth = encodeURIComponent(auth);\n\t    auth = auth.replace(/%3A/i, ':');\n\t    auth += '@';\n\t  }\n\t\n\t  var protocol = this.protocol || '',\n\t      pathname = this.pathname || '',\n\t      hash = this.hash || '',\n\t      host = false,\n\t      query = '';\n\t\n\t  if (this.host) {\n\t    host = auth + this.host;\n\t  } else if (this.hostname) {\n\t    host = auth + (this.hostname.indexOf(':') === -1 ?\n\t        this.hostname :\n\t        '[' + this.hostname + ']');\n\t    if (this.port) {\n\t      host += ':' + this.port;\n\t    }\n\t  }\n\t\n\t  if (this.query &&\n\t      util.isObject(this.query) &&\n\t      Object.keys(this.query).length) {\n\t    query = querystring.stringify(this.query);\n\t  }\n\t\n\t  var search = this.search || (query && ('?' + query)) || '';\n\t\n\t  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\t\n\t  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n\t  // unless they had them to begin with.\n\t  if (this.slashes ||\n\t      (!protocol || slashedProtocol[protocol]) && host !== false) {\n\t    host = '//' + (host || '');\n\t    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n\t  } else if (!host) {\n\t    host = '';\n\t  }\n\t\n\t  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n\t  if (search && search.charAt(0) !== '?') search = '?' + search;\n\t\n\t  pathname = pathname.replace(/[?#]/g, function(match) {\n\t    return encodeURIComponent(match);\n\t  });\n\t  search = search.replace('#', '%23');\n\t\n\t  return protocol + host + pathname + search + hash;\n\t};\n\t\n\tfunction urlResolve(source, relative) {\n\t  return urlParse(source, false, true).resolve(relative);\n\t}\n\t\n\tUrl.prototype.resolve = function(relative) {\n\t  return this.resolveObject(urlParse(relative, false, true)).format();\n\t};\n\t\n\tfunction urlResolveObject(source, relative) {\n\t  if (!source) return relative;\n\t  return urlParse(source, false, true).resolveObject(relative);\n\t}\n\t\n\tUrl.prototype.resolveObject = function(relative) {\n\t  if (util.isString(relative)) {\n\t    var rel = new Url();\n\t    rel.parse(relative, false, true);\n\t    relative = rel;\n\t  }\n\t\n\t  var result = new Url();\n\t  var tkeys = Object.keys(this);\n\t  for (var tk = 0; tk < tkeys.length; tk++) {\n\t    var tkey = tkeys[tk];\n\t    result[tkey] = this[tkey];\n\t  }\n\t\n\t  // hash is always overridden, no matter what.\n\t  // even href=\"\" will remove it.\n\t  result.hash = relative.hash;\n\t\n\t  // if the relative url is empty, then there's nothing left to do here.\n\t  if (relative.href === '') {\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // hrefs like //foo/bar always cut to the protocol.\n\t  if (relative.slashes && !relative.protocol) {\n\t    // take everything except the protocol from relative\n\t    var rkeys = Object.keys(relative);\n\t    for (var rk = 0; rk < rkeys.length; rk++) {\n\t      var rkey = rkeys[rk];\n\t      if (rkey !== 'protocol')\n\t        result[rkey] = relative[rkey];\n\t    }\n\t\n\t    //urlParse appends trailing / to urls like http://www.example.com\n\t    if (slashedProtocol[result.protocol] &&\n\t        result.hostname && !result.pathname) {\n\t      result.path = result.pathname = '/';\n\t    }\n\t\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (relative.protocol && relative.protocol !== result.protocol) {\n\t    // if it's a known url protocol, then changing\n\t    // the protocol does weird things\n\t    // first, if it's not file:, then we MUST have a host,\n\t    // and if there was a path\n\t    // to begin with, then we MUST have a path.\n\t    // if it is file:, then the host is dropped,\n\t    // because that's known to be hostless.\n\t    // anything else is assumed to be absolute.\n\t    if (!slashedProtocol[relative.protocol]) {\n\t      var keys = Object.keys(relative);\n\t      for (var v = 0; v < keys.length; v++) {\n\t        var k = keys[v];\n\t        result[k] = relative[k];\n\t      }\n\t      result.href = result.format();\n\t      return result;\n\t    }\n\t\n\t    result.protocol = relative.protocol;\n\t    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n\t      var relPath = (relative.pathname || '').split('/');\n\t      while (relPath.length && !(relative.host = relPath.shift()));\n\t      if (!relative.host) relative.host = '';\n\t      if (!relative.hostname) relative.hostname = '';\n\t      if (relPath[0] !== '') relPath.unshift('');\n\t      if (relPath.length < 2) relPath.unshift('');\n\t      result.pathname = relPath.join('/');\n\t    } else {\n\t      result.pathname = relative.pathname;\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    result.host = relative.host || '';\n\t    result.auth = relative.auth;\n\t    result.hostname = relative.hostname || relative.host;\n\t    result.port = relative.port;\n\t    // to support http.request\n\t    if (result.pathname || result.search) {\n\t      var p = result.pathname || '';\n\t      var s = result.search || '';\n\t      result.path = p + s;\n\t    }\n\t    result.slashes = result.slashes || relative.slashes;\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n\t      isRelAbs = (\n\t          relative.host ||\n\t          relative.pathname && relative.pathname.charAt(0) === '/'\n\t      ),\n\t      mustEndAbs = (isRelAbs || isSourceAbs ||\n\t                    (result.host && relative.pathname)),\n\t      removeAllDots = mustEndAbs,\n\t      srcPath = result.pathname && result.pathname.split('/') || [],\n\t      relPath = relative.pathname && relative.pathname.split('/') || [],\n\t      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\t\n\t  // if the url is a non-slashed url, then relative\n\t  // links like ../.. should be able\n\t  // to crawl up to the hostname, as well.  This is strange.\n\t  // result.protocol has already been set by now.\n\t  // Later on, put the first path part into the host field.\n\t  if (psychotic) {\n\t    result.hostname = '';\n\t    result.port = null;\n\t    if (result.host) {\n\t      if (srcPath[0] === '') srcPath[0] = result.host;\n\t      else srcPath.unshift(result.host);\n\t    }\n\t    result.host = '';\n\t    if (relative.protocol) {\n\t      relative.hostname = null;\n\t      relative.port = null;\n\t      if (relative.host) {\n\t        if (relPath[0] === '') relPath[0] = relative.host;\n\t        else relPath.unshift(relative.host);\n\t      }\n\t      relative.host = null;\n\t    }\n\t    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n\t  }\n\t\n\t  if (isRelAbs) {\n\t    // it's absolute.\n\t    result.host = (relative.host || relative.host === '') ?\n\t                  relative.host : result.host;\n\t    result.hostname = (relative.hostname || relative.hostname === '') ?\n\t                      relative.hostname : result.hostname;\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    srcPath = relPath;\n\t    // fall through to the dot-handling below.\n\t  } else if (relPath.length) {\n\t    // it's relative\n\t    // throw away the existing file, and take the new path instead.\n\t    if (!srcPath) srcPath = [];\n\t    srcPath.pop();\n\t    srcPath = srcPath.concat(relPath);\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t  } else if (!util.isNullOrUndefined(relative.search)) {\n\t    // just pull out the search.\n\t    // like href='?foo'.\n\t    // Put this after the other two cases because it simplifies the booleans\n\t    if (psychotic) {\n\t      result.hostname = result.host = srcPath.shift();\n\t      //occationaly the auth can get stuck only in host\n\t      //this especially happens in cases like\n\t      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                       result.host.split('@') : false;\n\t      if (authInHost) {\n\t        result.auth = authInHost.shift();\n\t        result.host = result.hostname = authInHost.shift();\n\t      }\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    //to support http.request\n\t    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n\t      result.path = (result.pathname ? result.pathname : '') +\n\t                    (result.search ? result.search : '');\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    // no path at all.  easy.\n\t    // we've already handled the other stuff above.\n\t    result.pathname = null;\n\t    //to support http.request\n\t    if (result.search) {\n\t      result.path = '/' + result.search;\n\t    } else {\n\t      result.path = null;\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // if a url ENDs in . or .., then it must get a trailing slash.\n\t  // however, if it ends in anything else non-slashy,\n\t  // then it must NOT get a trailing slash.\n\t  var last = srcPath.slice(-1)[0];\n\t  var hasTrailingSlash = (\n\t      (result.host || relative.host || srcPath.length > 1) &&\n\t      (last === '.' || last === '..') || last === '');\n\t\n\t  // strip single dots, resolve double dots to parent dir\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = srcPath.length; i >= 0; i--) {\n\t    last = srcPath[i];\n\t    if (last === '.') {\n\t      srcPath.splice(i, 1);\n\t    } else if (last === '..') {\n\t      srcPath.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      srcPath.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (!mustEndAbs && !removeAllDots) {\n\t    for (; up--; up) {\n\t      srcPath.unshift('..');\n\t    }\n\t  }\n\t\n\t  if (mustEndAbs && srcPath[0] !== '' &&\n\t      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n\t    srcPath.push('');\n\t  }\n\t\n\t  var isAbsolute = srcPath[0] === '' ||\n\t      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\t\n\t  // put the host back\n\t  if (psychotic) {\n\t    result.hostname = result.host = isAbsolute ? '' :\n\t                                    srcPath.length ? srcPath.shift() : '';\n\t    //occationaly the auth can get stuck only in host\n\t    //this especially happens in cases like\n\t    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                     result.host.split('@') : false;\n\t    if (authInHost) {\n\t      result.auth = authInHost.shift();\n\t      result.host = result.hostname = authInHost.shift();\n\t    }\n\t  }\n\t\n\t  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\t\n\t  if (mustEndAbs && !isAbsolute) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    result.pathname = null;\n\t    result.path = null;\n\t  } else {\n\t    result.pathname = srcPath.join('/');\n\t  }\n\t\n\t  //to support request.http\n\t  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n\t    result.path = (result.pathname ? result.pathname : '') +\n\t                  (result.search ? result.search : '');\n\t  }\n\t  result.auth = relative.auth || result.auth;\n\t  result.slashes = result.slashes || relative.slashes;\n\t  result.href = result.format();\n\t  return result;\n\t};\n\t\n\tUrl.prototype.parseHost = function() {\n\t  var host = this.host;\n\t  var port = portPattern.exec(host);\n\t  if (port) {\n\t    port = port[0];\n\t    if (port !== ':') {\n\t      this.port = port.substr(1);\n\t    }\n\t    host = host.substr(0, host.length - port.length);\n\t  }\n\t  if (host) this.hostname = host;\n\t};\n\n\n/***/ }),\n/* 17 */\n/*!**************************************!*\\\n  !*** ./~/url/~/punycode/punycode.js ***!\n  \\**************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */\n\t;(function(root) {\n\t\n\t\t/** Detect free variables */\n\t\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t\t!exports.nodeType && exports;\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\t!module.nodeType && module;\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (\n\t\t\tfreeGlobal.global === freeGlobal ||\n\t\t\tfreeGlobal.window === freeGlobal ||\n\t\t\tfreeGlobal.self === freeGlobal\n\t\t) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/**\n\t\t * The `punycode` object.\n\t\t * @name punycode\n\t\t * @type Object\n\t\t */\n\t\tvar punycode,\n\t\n\t\t/** Highest positive signed 32-bit float value */\n\t\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\t\n\t\t/** Bootstring parameters */\n\t\tbase = 36,\n\t\ttMin = 1,\n\t\ttMax = 26,\n\t\tskew = 38,\n\t\tdamp = 700,\n\t\tinitialBias = 72,\n\t\tinitialN = 128, // 0x80\n\t\tdelimiter = '-', // '\\x2D'\n\t\n\t\t/** Regular expressions */\n\t\tregexPunycode = /^xn--/,\n\t\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\t\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\t\n\t\t/** Error messages */\n\t\terrors = {\n\t\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t\t'invalid-input': 'Invalid input'\n\t\t},\n\t\n\t\t/** Convenience shortcuts */\n\t\tbaseMinusTMin = base - tMin,\n\t\tfloor = Math.floor,\n\t\tstringFromCharCode = String.fromCharCode,\n\t\n\t\t/** Temporary variable */\n\t\tkey;\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/**\n\t\t * A generic error utility function.\n\t\t * @private\n\t\t * @param {String} type The error type.\n\t\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t\t */\n\t\tfunction error(type) {\n\t\t\tthrow RangeError(errors[type]);\n\t\t}\n\t\n\t\t/**\n\t\t * A generic `Array#map` utility function.\n\t\t * @private\n\t\t * @param {Array} array The array to iterate over.\n\t\t * @param {Function} callback The function that gets called for every array\n\t\t * item.\n\t\t * @returns {Array} A new array of values returned by the callback function.\n\t\t */\n\t\tfunction map(array, fn) {\n\t\t\tvar length = array.length;\n\t\t\tvar result = [];\n\t\t\twhile (length--) {\n\t\t\t\tresult[length] = fn(array[length]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\t/**\n\t\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t\t * addresses.\n\t\t * @private\n\t\t * @param {String} domain The domain name or email address.\n\t\t * @param {Function} callback The function that gets called for every\n\t\t * character.\n\t\t * @returns {Array} A new string of characters returned by the callback\n\t\t * function.\n\t\t */\n\t\tfunction mapDomain(string, fn) {\n\t\t\tvar parts = string.split('@');\n\t\t\tvar result = '';\n\t\t\tif (parts.length > 1) {\n\t\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\t\tresult = parts[0] + '@';\n\t\t\t\tstring = parts[1];\n\t\t\t}\n\t\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\t\tvar labels = string.split('.');\n\t\t\tvar encoded = map(labels, fn).join('.');\n\t\t\treturn result + encoded;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates an array containing the numeric code points of each Unicode\n\t\t * character in the string. While JavaScript uses UCS-2 internally,\n\t\t * this function will convert a pair of surrogate halves (each of which\n\t\t * UCS-2 exposes as separate characters) into a single code point,\n\t\t * matching UTF-16.\n\t\t * @see `punycode.ucs2.encode`\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode.ucs2\n\t\t * @name decode\n\t\t * @param {String} string The Unicode input string (UCS-2).\n\t\t * @returns {Array} The new array of code points.\n\t\t */\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [],\n\t\t\t    counter = 0,\n\t\t\t    length = string.length,\n\t\t\t    value,\n\t\t\t    extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates a string based on an array of numeric code points.\n\t\t * @see `punycode.ucs2.decode`\n\t\t * @memberOf punycode.ucs2\n\t\t * @name encode\n\t\t * @param {Array} codePoints The array of numeric code points.\n\t\t * @returns {String} The new Unicode string (UCS-2).\n\t\t */\n\t\tfunction ucs2encode(array) {\n\t\t\treturn map(array, function(value) {\n\t\t\t\tvar output = '';\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t\treturn output;\n\t\t\t}).join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a basic code point into a digit/integer.\n\t\t * @see `digitToBasic()`\n\t\t * @private\n\t\t * @param {Number} codePoint The basic numeric code point value.\n\t\t * @returns {Number} The numeric value of a basic code point (for use in\n\t\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t\t * the code point does not represent a value.\n\t\t */\n\t\tfunction basicToDigit(codePoint) {\n\t\t\tif (codePoint - 48 < 10) {\n\t\t\t\treturn codePoint - 22;\n\t\t\t}\n\t\t\tif (codePoint - 65 < 26) {\n\t\t\t\treturn codePoint - 65;\n\t\t\t}\n\t\t\tif (codePoint - 97 < 26) {\n\t\t\t\treturn codePoint - 97;\n\t\t\t}\n\t\t\treturn base;\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a digit/integer into a basic code point.\n\t\t * @see `basicToDigit()`\n\t\t * @private\n\t\t * @param {Number} digit The numeric value of a basic code point.\n\t\t * @returns {Number} The basic code point whose value (when used for\n\t\t * representing integers) is `digit`, which needs to be in the range\n\t\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t\t * used; else, the lowercase form is used. The behavior is undefined\n\t\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t\t */\n\t\tfunction digitToBasic(digit, flag) {\n\t\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t\t// 26..35 map to ASCII 0..9\n\t\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t\t}\n\t\n\t\t/**\n\t\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t\t * @private\n\t\t */\n\t\tfunction adapt(delta, numPoints, firstTime) {\n\t\t\tvar k = 0;\n\t\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\t\tdelta += floor(delta / numPoints);\n\t\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t\t}\n\t\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t\t * symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t\t * @returns {String} The resulting string of Unicode symbols.\n\t\t */\n\t\tfunction decode(input) {\n\t\t\t// Don't use UCS-2\n\t\t\tvar output = [],\n\t\t\t    inputLength = input.length,\n\t\t\t    out,\n\t\t\t    i = 0,\n\t\t\t    n = initialN,\n\t\t\t    bias = initialBias,\n\t\t\t    basic,\n\t\t\t    j,\n\t\t\t    index,\n\t\t\t    oldi,\n\t\t\t    w,\n\t\t\t    k,\n\t\t\t    digit,\n\t\t\t    t,\n\t\t\t    /** Cached calculation results */\n\t\t\t    baseMinusT;\n\t\n\t\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t\t// the first basic code points to the output.\n\t\n\t\t\tbasic = input.lastIndexOf(delimiter);\n\t\t\tif (basic < 0) {\n\t\t\t\tbasic = 0;\n\t\t\t}\n\t\n\t\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t\t// if it's not a basic code point\n\t\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\t\terror('not-basic');\n\t\t\t\t}\n\t\t\t\toutput.push(input.charCodeAt(j));\n\t\t\t}\n\t\n\t\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t\t// points were copied; start at the beginning otherwise.\n\t\n\t\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\t\n\t\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t\t// value at the end to obtain `delta`.\n\t\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\t\n\t\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\t\terror('invalid-input');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\t\n\t\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += digit * w;\n\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\n\t\t\t\t\tif (digit < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tw *= baseMinusT;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tout = output.length + 1;\n\t\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\t\n\t\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tn += floor(i / out);\n\t\t\t\ti %= out;\n\t\n\t\t\t\t// Insert `n` at position `i` of the output\n\t\t\t\toutput.splice(i++, 0, n);\n\t\n\t\t\t}\n\t\n\t\t\treturn ucs2encode(output);\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t\t * Punycode string of ASCII-only symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The string of Unicode symbols.\n\t\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t\t */\n\t\tfunction encode(input) {\n\t\t\tvar n,\n\t\t\t    delta,\n\t\t\t    handledCPCount,\n\t\t\t    basicLength,\n\t\t\t    bias,\n\t\t\t    j,\n\t\t\t    m,\n\t\t\t    q,\n\t\t\t    k,\n\t\t\t    t,\n\t\t\t    currentValue,\n\t\t\t    output = [],\n\t\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t\t    inputLength,\n\t\t\t    /** Cached calculation results */\n\t\t\t    handledCPCountPlusOne,\n\t\t\t    baseMinusT,\n\t\t\t    qMinusT;\n\t\n\t\t\t// Convert the input in UCS-2 to Unicode\n\t\t\tinput = ucs2decode(input);\n\t\n\t\t\t// Cache the length\n\t\t\tinputLength = input.length;\n\t\n\t\t\t// Initialize the state\n\t\t\tn = initialN;\n\t\t\tdelta = 0;\n\t\t\tbias = initialBias;\n\t\n\t\t\t// Handle the basic code points\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue < 0x80) {\n\t\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\thandledCPCount = basicLength = output.length;\n\t\n\t\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t\t// `basicLength` is the number of basic code points.\n\t\n\t\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\t\tif (basicLength) {\n\t\t\t\toutput.push(delimiter);\n\t\t\t}\n\t\n\t\t\t// Main encoding loop:\n\t\t\twhile (handledCPCount < inputLength) {\n\t\n\t\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t\t// larger one:\n\t\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\t\tm = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t\t// but guard against overflow\n\t\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\t\tn = m;\n\t\n\t\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\n\t\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\t\tdelta = 0;\n\t\t\t\t\t\t++handledCPCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t++delta;\n\t\t\t\t++n;\n\t\n\t\t\t}\n\t\t\treturn output.join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string representing a domain name or an email address\n\t\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t\t * it doesn't matter if you call it on a string that has already been\n\t\t * converted to Unicode.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycoded domain name or email address to\n\t\t * convert to Unicode.\n\t\t * @returns {String} The Unicode representation of the given Punycode\n\t\t * string.\n\t\t */\n\t\tfunction toUnicode(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexPunycode.test(string)\n\t\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Unicode string representing a domain name or an email address to\n\t\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t\t * ASCII.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The domain name or email address to convert, as a\n\t\t * Unicode string.\n\t\t * @returns {String} The Punycode representation of the given domain name or\n\t\t * email address.\n\t\t */\n\t\tfunction toASCII(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/** Define the public API */\n\t\tpunycode = {\n\t\t\t/**\n\t\t\t * A string representing the current Punycode.js version number.\n\t\t\t * @memberOf punycode\n\t\t\t * @type String\n\t\t\t */\n\t\t\t'version': '1.3.2',\n\t\t\t/**\n\t\t\t * An object of methods to convert from JavaScript's internal character\n\t\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t\t * @memberOf punycode\n\t\t\t * @type Object\n\t\t\t */\n\t\t\t'ucs2': {\n\t\t\t\t'decode': ucs2decode,\n\t\t\t\t'encode': ucs2encode\n\t\t\t},\n\t\t\t'decode': decode,\n\t\t\t'encode': encode,\n\t\t\t'toASCII': toASCII,\n\t\t\t'toUnicode': toUnicode\n\t\t};\n\t\n\t\t/** Expose `punycode` */\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn punycode;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (freeExports && freeModule) {\n\t\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = punycode;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (key in punycode) {\n\t\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.punycode = punycode;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ 18)(module), (function() { return this; }())))\n\n/***/ }),\n/* 18 */\n/*!***********************************!*\\\n  !*** (webpack)/buildin/module.js ***!\n  \\***********************************/\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n/* 19 */\n/*!***********************!*\\\n  !*** ./~/url/util.js ***!\n  \\***********************/\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  isString: function(arg) {\n\t    return typeof(arg) === 'string';\n\t  },\n\t  isObject: function(arg) {\n\t    return typeof(arg) === 'object' && arg !== null;\n\t  },\n\t  isNull: function(arg) {\n\t    return arg === null;\n\t  },\n\t  isNullOrUndefined: function(arg) {\n\t    return arg == null;\n\t  }\n\t};\n\n\n/***/ }),\n/* 20 */\n/*!********************************!*\\\n  !*** ./~/querystring/index.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.decode = exports.parse = __webpack_require__(/*! ./decode */ 21);\n\texports.encode = exports.stringify = __webpack_require__(/*! ./encode */ 22);\n\n\n/***/ }),\n/* 21 */\n/*!*********************************!*\\\n  !*** ./~/querystring/decode.js ***!\n  \\*********************************/\n/***/ (function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\t\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\t\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\t\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\t\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\t\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\t\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\t\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\t\n\t  return obj;\n\t};\n\n\n/***/ }),\n/* 22 */\n/*!*********************************!*\\\n  !*** ./~/querystring/encode.js ***!\n  \\*********************************/\n/***/ (function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\t\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\t\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\t\n\t    default:\n\t      return '';\n\t  }\n\t};\n\t\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\t\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\t\n\t  }\n\t\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ }),\n/* 23 */\n/*!********************************!*\\\n  !*** ./~/stream-http/index.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {var ClientRequest = __webpack_require__(/*! ./lib/request */ 24)\n\tvar response = __webpack_require__(/*! ./lib/response */ 27)\n\tvar extend = __webpack_require__(/*! xtend */ 48)\n\tvar statusCodes = __webpack_require__(/*! builtin-status-codes */ 49)\n\tvar url = __webpack_require__(/*! url */ 16)\n\t\n\tvar http = exports\n\t\n\thttp.request = function (opts, cb) {\n\t\tif (typeof opts === 'string')\n\t\t\topts = url.parse(opts)\n\t\telse\n\t\t\topts = extend(opts)\n\t\n\t\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t\t// the protocol is something else, like 'file:'\n\t\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\t\n\t\tvar protocol = opts.protocol || defaultProtocol\n\t\tvar host = opts.hostname || opts.host\n\t\tvar port = opts.port\n\t\tvar path = opts.path || '/'\n\t\n\t\t// Necessary for IPv6 addresses\n\t\tif (host && host.indexOf(':') !== -1)\n\t\t\thost = '[' + host + ']'\n\t\n\t\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\t\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\t\topts.method = (opts.method || 'GET').toUpperCase()\n\t\topts.headers = opts.headers || {}\n\t\n\t\t// Also valid opts.auth, opts.mode\n\t\n\t\tvar req = new ClientRequest(opts)\n\t\tif (cb)\n\t\t\treq.on('response', cb)\n\t\treturn req\n\t}\n\t\n\thttp.get = function get (opts, cb) {\n\t\tvar req = http.request(opts, cb)\n\t\treq.end()\n\t\treturn req\n\t}\n\t\n\thttp.ClientRequest = ClientRequest\n\thttp.IncomingMessage = response.IncomingMessage\n\t\n\thttp.Agent = function () {}\n\thttp.Agent.defaultMaxSockets = 4\n\t\n\thttp.globalAgent = new http.Agent()\n\t\n\thttp.STATUS_CODES = statusCodes\n\t\n\thttp.METHODS = [\n\t\t'CHECKOUT',\n\t\t'CONNECT',\n\t\t'COPY',\n\t\t'DELETE',\n\t\t'GET',\n\t\t'HEAD',\n\t\t'LOCK',\n\t\t'M-SEARCH',\n\t\t'MERGE',\n\t\t'MKACTIVITY',\n\t\t'MKCOL',\n\t\t'MOVE',\n\t\t'NOTIFY',\n\t\t'OPTIONS',\n\t\t'PATCH',\n\t\t'POST',\n\t\t'PROPFIND',\n\t\t'PROPPATCH',\n\t\t'PURGE',\n\t\t'PUT',\n\t\t'REPORT',\n\t\t'SEARCH',\n\t\t'SUBSCRIBE',\n\t\t'TRACE',\n\t\t'UNLOCK',\n\t\t'UNSUBSCRIBE'\n\t]\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 24 */\n/*!**************************************!*\\\n  !*** ./~/stream-http/lib/request.js ***!\n  \\**************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, global, process) {var capability = __webpack_require__(/*! ./capability */ 25)\n\tvar inherits = __webpack_require__(/*! inherits */ 26)\n\tvar response = __webpack_require__(/*! ./response */ 27)\n\tvar stream = __webpack_require__(/*! readable-stream */ 28)\n\tvar toArrayBuffer = __webpack_require__(/*! to-arraybuffer */ 47)\n\t\n\tvar IncomingMessage = response.IncomingMessage\n\tvar rStates = response.readyStates\n\t\n\tfunction decideMode (preferBinary, useFetch) {\n\t\tif (capability.fetch && useFetch) {\n\t\t\treturn 'fetch'\n\t\t} else if (capability.mozchunkedarraybuffer) {\n\t\t\treturn 'moz-chunked-arraybuffer'\n\t\t} else if (capability.msstream) {\n\t\t\treturn 'ms-stream'\n\t\t} else if (capability.arraybuffer && preferBinary) {\n\t\t\treturn 'arraybuffer'\n\t\t} else if (capability.vbArray && preferBinary) {\n\t\t\treturn 'text:vbarray'\n\t\t} else {\n\t\t\treturn 'text'\n\t\t}\n\t}\n\t\n\tvar ClientRequest = module.exports = function (opts) {\n\t\tvar self = this\n\t\tstream.Writable.call(self)\n\t\n\t\tself._opts = opts\n\t\tself._body = []\n\t\tself._headers = {}\n\t\tif (opts.auth)\n\t\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\t\tObject.keys(opts.headers).forEach(function (name) {\n\t\t\tself.setHeader(name, opts.headers[name])\n\t\t})\n\t\n\t\tvar preferBinary\n\t\tvar useFetch = true\n\t\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\t\tuseFetch = false\n\t\t\tpreferBinary = true\n\t\t} else if (opts.mode === 'prefer-streaming') {\n\t\t\t// If streaming is a high priority but binary compatibility and\n\t\t\t// the accuracy of the 'content-type' header aren't\n\t\t\tpreferBinary = false\n\t\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t\t// If streaming is more important than preserving the 'content-type' header\n\t\t\tpreferBinary = !capability.overrideMimeType\n\t\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\t\tpreferBinary = true\n\t\t} else {\n\t\t\tthrow new Error('Invalid value for opts.mode')\n\t\t}\n\t\tself._mode = decideMode(preferBinary, useFetch)\n\t\tself._fetchTimer = null\n\t\n\t\tself.on('finish', function () {\n\t\t\tself._onFinish()\n\t\t})\n\t}\n\t\n\tinherits(ClientRequest, stream.Writable)\n\t\n\tClientRequest.prototype.setHeader = function (name, value) {\n\t\tvar self = this\n\t\tvar lowerName = name.toLowerCase()\n\t\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t\t// http-browserify did it, so I will too.\n\t\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\t\treturn\n\t\n\t\tself._headers[lowerName] = {\n\t\t\tname: name,\n\t\t\tvalue: value\n\t\t}\n\t}\n\t\n\tClientRequest.prototype.getHeader = function (name) {\n\t\tvar header = this._headers[name.toLowerCase()]\n\t\tif (header)\n\t\t\treturn header.value\n\t\treturn null\n\t}\n\t\n\tClientRequest.prototype.removeHeader = function (name) {\n\t\tvar self = this\n\t\tdelete self._headers[name.toLowerCase()]\n\t}\n\t\n\tClientRequest.prototype._onFinish = function () {\n\t\tvar self = this\n\t\n\t\tif (self._destroyed)\n\t\t\treturn\n\t\tvar opts = self._opts\n\t\n\t\tvar headersObj = self._headers\n\t\tvar body = null\n\t\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\t\tif (capability.arraybuffer) {\n\t\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t\t} else if (capability.blobConstructor) {\n\t\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t\t}), {\n\t\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// get utf8 string\n\t\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t\t}\n\t\t}\n\t\n\t\t// create flattened list of headers\n\t\tvar headersList = []\n\t\tObject.keys(headersObj).forEach(function (keyName) {\n\t\t\tvar name = headersObj[keyName].name\n\t\t\tvar value = headersObj[keyName].value\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalue.forEach(function (v) {\n\t\t\t\t\theadersList.push([name, v])\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\theadersList.push([name, value])\n\t\t\t}\n\t\t})\n\t\n\t\tif (self._mode === 'fetch') {\n\t\t\tvar signal = null\n\t\t\tvar fetchTimer = null\n\t\t\tif (capability.abortController) {\n\t\t\t\tvar controller = new AbortController()\n\t\t\t\tsignal = controller.signal\n\t\t\t\tself._fetchAbortController = controller\n\t\n\t\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t\t}, opts.requestTimeout)\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tglobal.fetch(self._opts.url, {\n\t\t\t\tmethod: self._opts.method,\n\t\t\t\theaders: headersList,\n\t\t\t\tbody: body || undefined,\n\t\t\t\tmode: 'cors',\n\t\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\t\tsignal: signal\n\t\t\t}).then(function (response) {\n\t\t\t\tself._fetchResponse = response\n\t\t\t\tself._connect()\n\t\t\t}, function (reason) {\n\t\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', reason)\n\t\t\t})\n\t\t} else {\n\t\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\t\ttry {\n\t\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t\t} catch (err) {\n\t\t\t\tprocess.nextTick(function () {\n\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\n\t\t\t// Can't set responseType on really old browsers\n\t\t\tif ('responseType' in xhr)\n\t\t\t\txhr.responseType = self._mode.split(':')[0]\n\t\n\t\t\tif ('withCredentials' in xhr)\n\t\t\t\txhr.withCredentials = !!opts.withCredentials\n\t\n\t\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\t\n\t\t\tif ('requestTimeout' in opts) {\n\t\t\t\txhr.timeout = opts.requestTimeout\n\t\t\t\txhr.ontimeout = function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\theadersList.forEach(function (header) {\n\t\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t\t})\n\t\n\t\t\tself._response = null\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tswitch (xhr.readyState) {\n\t\t\t\t\tcase rStates.LOADING:\n\t\t\t\t\tcase rStates.DONE:\n\t\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\t\txhr.onprogress = function () {\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\txhr.onerror = function () {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tself.emit('error', new Error('XHR error'))\n\t\t\t}\n\t\n\t\t\ttry {\n\t\t\t\txhr.send(body)\n\t\t\t} catch (err) {\n\t\t\t\tprocess.nextTick(function () {\n\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Checks if xhr.status is readable and non-zero, indicating no error.\n\t * Even though the spec says it should be available in readyState 3,\n\t * accessing it throws an exception in IE8\n\t */\n\tfunction statusValid (xhr) {\n\t\ttry {\n\t\t\tvar status = xhr.status\n\t\t\treturn (status !== null && status !== 0)\n\t\t} catch (e) {\n\t\t\treturn false\n\t\t}\n\t}\n\t\n\tClientRequest.prototype._onXHRProgress = function () {\n\t\tvar self = this\n\t\n\t\tif (!statusValid(self._xhr) || self._destroyed)\n\t\t\treturn\n\t\n\t\tif (!self._response)\n\t\t\tself._connect()\n\t\n\t\tself._response._onXHRProgress()\n\t}\n\t\n\tClientRequest.prototype._connect = function () {\n\t\tvar self = this\n\t\n\t\tif (self._destroyed)\n\t\t\treturn\n\t\n\t\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\t\tself._response.on('error', function(err) {\n\t\t\tself.emit('error', err)\n\t\t})\n\t\n\t\tself.emit('response', self._response)\n\t}\n\t\n\tClientRequest.prototype._write = function (chunk, encoding, cb) {\n\t\tvar self = this\n\t\n\t\tself._body.push(chunk)\n\t\tcb()\n\t}\n\t\n\tClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\t\tvar self = this\n\t\tself._destroyed = true\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tif (self._response)\n\t\t\tself._response._destroyed = true\n\t\tif (self._xhr)\n\t\t\tself._xhr.abort()\n\t\telse if (self._fetchAbortController)\n\t\t\tself._fetchAbortController.abort()\n\t}\n\t\n\tClientRequest.prototype.end = function (data, encoding, cb) {\n\t\tvar self = this\n\t\tif (typeof data === 'function') {\n\t\t\tcb = data\n\t\t\tdata = undefined\n\t\t}\n\t\n\t\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n\t}\n\t\n\tClientRequest.prototype.flushHeaders = function () {}\n\tClientRequest.prototype.setTimeout = function () {}\n\tClientRequest.prototype.setNoDelay = function () {}\n\tClientRequest.prototype.setSocketKeepAlive = function () {}\n\t\n\t// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\n\tvar unsafeHeaders = [\n\t\t'accept-charset',\n\t\t'accept-encoding',\n\t\t'access-control-request-headers',\n\t\t'access-control-request-method',\n\t\t'connection',\n\t\t'content-length',\n\t\t'cookie',\n\t\t'cookie2',\n\t\t'date',\n\t\t'dnt',\n\t\t'expect',\n\t\t'host',\n\t\t'keep-alive',\n\t\t'origin',\n\t\t'referer',\n\t\t'te',\n\t\t'trailer',\n\t\t'transfer-encoding',\n\t\t'upgrade',\n\t\t'via'\n\t]\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../buffer/index.js */ 8).Buffer, (function() { return this; }()), __webpack_require__(/*! ./../../process/browser.js */ 12)))\n\n/***/ }),\n/* 25 */\n/*!*****************************************!*\\\n  !*** ./~/stream-http/lib/capability.js ***!\n  \\*****************************************/\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\t\n\texports.writableStream = isFunction(global.WritableStream)\n\t\n\texports.abortController = isFunction(global.AbortController)\n\t\n\texports.blobConstructor = false\n\ttry {\n\t\tnew Blob([new ArrayBuffer(1)])\n\t\texports.blobConstructor = true\n\t} catch (e) {}\n\t\n\t// The xhr request to example.com may violate some restrictive CSP configurations,\n\t// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n\t// and assume support for certain features below.\n\tvar xhr\n\tfunction getXHR () {\n\t\t// Cache the xhr value\n\t\tif (xhr !== undefined) return xhr\n\t\n\t\tif (global.XMLHttpRequest) {\n\t\t\txhr = new global.XMLHttpRequest()\n\t\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t\t// Note: this doesn't actually make an http request.\n\t\t\ttry {\n\t\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t\t} catch(e) {\n\t\t\t\txhr = null\n\t\t\t}\n\t\t} else {\n\t\t\t// Service workers don't have XHR\n\t\t\txhr = null\n\t\t}\n\t\treturn xhr\n\t}\n\t\n\tfunction checkTypeSupport (type) {\n\t\tvar xhr = getXHR()\n\t\tif (!xhr) return false\n\t\ttry {\n\t\t\txhr.responseType = type\n\t\t\treturn xhr.responseType === type\n\t\t} catch (e) {}\n\t\treturn false\n\t}\n\t\n\t// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n\t// Safari 7.1 appears to have fixed this bug.\n\tvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\n\tvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\t\n\t// If fetch is supported, then arraybuffer will be supported too. Skip calling\n\t// checkTypeSupport(), since that calls getXHR().\n\texports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\t\n\t// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n\t// be used if it's available, just return false for these to avoid the warnings.\n\texports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\n\texports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\t\tcheckTypeSupport('moz-chunked-arraybuffer')\n\t\n\t// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n\t// getXHR().\n\texports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\t\n\texports.vbArray = isFunction(global.VBArray)\n\t\n\tfunction isFunction (value) {\n\t\treturn typeof value === 'function'\n\t}\n\t\n\txhr = null // Help gc\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 26 */\n/*!****************************************!*\\\n  !*** ./~/inherits/inherits_browser.js ***!\n  \\****************************************/\n/***/ (function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ }),\n/* 27 */\n/*!***************************************!*\\\n  !*** ./~/stream-http/lib/response.js ***!\n  \\***************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, Buffer, global) {var capability = __webpack_require__(/*! ./capability */ 25)\n\tvar inherits = __webpack_require__(/*! inherits */ 26)\n\tvar stream = __webpack_require__(/*! readable-stream */ 28)\n\t\n\tvar rStates = exports.readyStates = {\n\t\tUNSENT: 0,\n\t\tOPENED: 1,\n\t\tHEADERS_RECEIVED: 2,\n\t\tLOADING: 3,\n\t\tDONE: 4\n\t}\n\t\n\tvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\t\tvar self = this\n\t\tstream.Readable.call(self)\n\t\n\t\tself._mode = mode\n\t\tself.headers = {}\n\t\tself.rawHeaders = []\n\t\tself.trailers = {}\n\t\tself.rawTrailers = []\n\t\n\t\t// Fake the 'close' event, but only once 'end' fires\n\t\tself.on('end', function () {\n\t\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('close')\n\t\t\t})\n\t\t})\n\t\n\t\tif (mode === 'fetch') {\n\t\t\tself._fetchResponse = response\n\t\n\t\t\tself.url = response.url\n\t\t\tself.statusCode = response.status\n\t\t\tself.statusMessage = response.statusText\n\t\t\t\n\t\t\tresponse.headers.forEach(function (header, key){\n\t\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\t\tself.rawHeaders.push(key, header)\n\t\t\t})\n\t\n\t\t\tif (capability.writableStream) {\n\t\t\t\tvar writable = new WritableStream({\n\t\t\t\t\twrite: function (chunk) {\n\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\tclose: function () {\n\t\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\t\tself.push(null)\n\t\t\t\t\t},\n\t\t\t\t\tabort: function (err) {\n\t\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\n\t\t\t\ttry {\n\t\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t\t}\n\t\t\t// fallback for when writableStream or pipeTo aren't available\n\t\t\tvar reader = response.body.getReader()\n\t\t\tfunction read () {\n\t\t\t\treader.read().then(function (result) {\n\t\t\t\t\tif (self._destroyed)\n\t\t\t\t\t\treturn\n\t\t\t\t\tif (result.done) {\n\t\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\t\tread()\n\t\t\t\t}).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t}\n\t\t\tread()\n\t\t} else {\n\t\t\tself._xhr = xhr\n\t\t\tself._pos = 0\n\t\n\t\t\tself.url = xhr.responseURL\n\t\t\tself.statusCode = xhr.status\n\t\t\tself.statusMessage = xhr.statusText\n\t\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\t\theaders.forEach(function (header) {\n\t\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\t\tif (matches) {\n\t\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t\t}\n\t\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t\t}\n\t\t\t})\n\t\n\t\t\tself._charset = 'x-user-defined'\n\t\t\tif (!capability.overrideMimeType) {\n\t\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\t\tif (mimeType) {\n\t\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\t\tif (charsetMatch) {\n\t\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!self._charset)\n\t\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t\t}\n\t\t}\n\t}\n\t\n\tinherits(IncomingMessage, stream.Readable)\n\t\n\tIncomingMessage.prototype._read = function () {\n\t\tvar self = this\n\t\n\t\tvar resolve = self._resumeFetch\n\t\tif (resolve) {\n\t\t\tself._resumeFetch = null\n\t\t\tresolve()\n\t\t}\n\t}\n\t\n\tIncomingMessage.prototype._onXHRProgress = function () {\n\t\tvar self = this\n\t\n\t\tvar xhr = self._xhr\n\t\n\t\tvar response = null\n\t\tswitch (self._mode) {\n\t\t\tcase 'text:vbarray': // For IE9\n\t\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\t\tbreak\n\t\t\t\ttry {\n\t\t\t\t\t// This fails in IE8\n\t\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t\t} catch (e) {}\n\t\t\t\tif (response !== null) {\n\t\t\t\t\tself.push(new Buffer(response))\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t// Falls through in IE8\t\n\t\t\tcase 'text':\n\t\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\t\tresponse = xhr.responseText\n\t\t\t\t} catch (e) {\n\t\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tif (response.length > self._pos) {\n\t\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\t\n\t\t\t\t\t\tself.push(buffer)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t\t}\n\t\t\t\t\tself._pos = response.length\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'arraybuffer':\n\t\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\t\tbreak\n\t\t\t\tresponse = xhr.response\n\t\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\t\tbreak\n\t\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\t\tresponse = xhr.response\n\t\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\t\tbreak\n\t\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\t\tbreak\n\t\t\tcase 'ms-stream':\n\t\t\t\tresponse = xhr.response\n\t\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\t\tbreak\n\t\t\t\tvar reader = new global.MSStreamReader()\n\t\t\t\treader.onprogress = function () {\n\t\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treader.onload = function () {\n\t\t\t\t\tself.push(null)\n\t\t\t\t}\n\t\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\t\treader.readAsArrayBuffer(response)\n\t\t\t\tbreak\n\t\t}\n\t\n\t\t// The ms-stream case handles end separately in reader.onload()\n\t\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\t\tself.push(null)\n\t\t}\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 12), __webpack_require__(/*! ./../../buffer/index.js */ 8).Buffer, (function() { return this; }())))\n\n/***/ }),\n/* 28 */\n/*!*************************************************************!*\\\n  !*** ./~/stream-http/~/readable-stream/readable-browser.js ***!\n  \\*************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ 29);\n\texports.Stream = exports;\n\texports.Readable = exports;\n\texports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ 40);\n\texports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ 39);\n\texports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ 45);\n\texports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ 46);\n\n\n/***/ }),\n/* 29 */\n/*!*****************************************************************!*\\\n  !*** ./~/stream-http/~/readable-stream/lib/_stream_readable.js ***!\n  \\*****************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar pna = __webpack_require__(/*! process-nextick-args */ 30);\n\t/*</replacement>*/\n\t\n\tmodule.exports = Readable;\n\t\n\t/*<replacement>*/\n\tvar isArray = __webpack_require__(/*! isarray */ 11);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Duplex;\n\t/*</replacement>*/\n\t\n\tReadable.ReadableState = ReadableState;\n\t\n\t/*<replacement>*/\n\tvar EE = __webpack_require__(/*! events */ 31).EventEmitter;\n\t\n\tvar EElistenerCount = function (emitter, type) {\n\t  return emitter.listeners(type).length;\n\t};\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Stream = __webpack_require__(/*! ./internal/streams/stream */ 32);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\t\n\tvar Buffer = __webpack_require__(/*! safe-buffer */ 33).Buffer;\n\tvar OurUint8Array = global.Uint8Array || function () {};\n\tfunction _uint8ArrayToBuffer(chunk) {\n\t  return Buffer.from(chunk);\n\t}\n\tfunction _isUint8Array(obj) {\n\t  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n\t}\n\t\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(/*! core-util-is */ 34);\n\tutil.inherits = __webpack_require__(/*! inherits */ 26);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar debugUtil = __webpack_require__(/*! util */ 35);\n\tvar debug = void 0;\n\tif (debugUtil && debugUtil.debuglog) {\n\t  debug = debugUtil.debuglog('stream');\n\t} else {\n\t  debug = function () {};\n\t}\n\t/*</replacement>*/\n\t\n\tvar BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ 36);\n\tvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ 38);\n\tvar StringDecoder;\n\t\n\tutil.inherits(Readable, Stream);\n\t\n\tvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\t\n\tfunction prependListener(emitter, event, fn) {\n\t  // Sadly this is not cacheable as some libraries bundle their own\n\t  // event emitter implementation with them.\n\t  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\t\n\t  // This is a hack to make sure that our error handler is attached before any\n\t  // userland ones.  NEVER DO THIS. This is here only because this code needs\n\t  // to continue to work with older versions of Node.js that do not include\n\t  // the prependListener() method. The goal is to eventually remove this hack.\n\t  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n\t}\n\t\n\tfunction ReadableState(options, stream) {\n\t  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ 39);\n\t\n\t  options = options || {};\n\t\n\t  // Duplex streams are both readable and writable, but share\n\t  // the same options object.\n\t  // However, some cases require setting options to different\n\t  // values for the readable and the writable sides of the duplex stream.\n\t  // These options can be provided separately as readableXXX and writableXXX.\n\t  var isDuplex = stream instanceof Duplex;\n\t\n\t  // object stream flag. Used to make read(n) ignore n and to\n\t  // make all the buffer merging and length checks go away\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\t\n\t  // the point at which it stops calling _read() to fill the buffer\n\t  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\t  var hwm = options.highWaterMark;\n\t  var readableHwm = options.readableHighWaterMark;\n\t  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\t\n\t  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = Math.floor(this.highWaterMark);\n\t\n\t  // A linked list is used to store data chunks instead of an array because the\n\t  // linked list can remove elements from the beginning faster than\n\t  // array.shift()\n\t  this.buffer = new BufferList();\n\t  this.length = 0;\n\t  this.pipes = null;\n\t  this.pipesCount = 0;\n\t  this.flowing = null;\n\t  this.ended = false;\n\t  this.endEmitted = false;\n\t  this.reading = false;\n\t\n\t  // a flag to be able to tell if the event 'readable'/'data' is emitted\n\t  // immediately, or on a later tick.  We set this to true at first, because\n\t  // any actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first read call.\n\t  this.sync = true;\n\t\n\t  // whenever we return null, then we set a flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\t  this.needReadable = false;\n\t  this.emittedReadable = false;\n\t  this.readableListening = false;\n\t  this.resumeScheduled = false;\n\t\n\t  // has it been destroyed\n\t  this.destroyed = false;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // the number of writers that are awaiting a drain event in .pipe()s\n\t  this.awaitDrain = 0;\n\t\n\t  // if true, a maybeReadMore has been scheduled\n\t  this.readingMore = false;\n\t\n\t  this.decoder = null;\n\t  this.encoding = null;\n\t  if (options.encoding) {\n\t    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ 44).StringDecoder;\n\t    this.decoder = new StringDecoder(options.encoding);\n\t    this.encoding = options.encoding;\n\t  }\n\t}\n\t\n\tfunction Readable(options) {\n\t  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ 39);\n\t\n\t  if (!(this instanceof Readable)) return new Readable(options);\n\t\n\t  this._readableState = new ReadableState(options, this);\n\t\n\t  // legacy\n\t  this.readable = true;\n\t\n\t  if (options) {\n\t    if (typeof options.read === 'function') this._read = options.read;\n\t\n\t    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\t  }\n\t\n\t  Stream.call(this);\n\t}\n\t\n\tObject.defineProperty(Readable.prototype, 'destroyed', {\n\t  get: function () {\n\t    if (this._readableState === undefined) {\n\t      return false;\n\t    }\n\t    return this._readableState.destroyed;\n\t  },\n\t  set: function (value) {\n\t    // we ignore the value if the stream\n\t    // has not been initialized yet\n\t    if (!this._readableState) {\n\t      return;\n\t    }\n\t\n\t    // backward compatibility, the user is explicitly\n\t    // managing destroyed\n\t    this._readableState.destroyed = value;\n\t  }\n\t});\n\t\n\tReadable.prototype.destroy = destroyImpl.destroy;\n\tReadable.prototype._undestroy = destroyImpl.undestroy;\n\tReadable.prototype._destroy = function (err, cb) {\n\t  this.push(null);\n\t  cb(err);\n\t};\n\t\n\t// Manually shove something into the read() buffer.\n\t// This returns true if the highWaterMark has not been hit yet,\n\t// similar to how Writable.write() returns true if you should\n\t// write() some more.\n\tReadable.prototype.push = function (chunk, encoding) {\n\t  var state = this._readableState;\n\t  var skipChunkCheck;\n\t\n\t  if (!state.objectMode) {\n\t    if (typeof chunk === 'string') {\n\t      encoding = encoding || state.defaultEncoding;\n\t      if (encoding !== state.encoding) {\n\t        chunk = Buffer.from(chunk, encoding);\n\t        encoding = '';\n\t      }\n\t      skipChunkCheck = true;\n\t    }\n\t  } else {\n\t    skipChunkCheck = true;\n\t  }\n\t\n\t  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n\t};\n\t\n\t// Unshift should *always* be something directly out of read()\n\tReadable.prototype.unshift = function (chunk) {\n\t  return readableAddChunk(this, chunk, null, true, false);\n\t};\n\t\n\tfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n\t  var state = stream._readableState;\n\t  if (chunk === null) {\n\t    state.reading = false;\n\t    onEofChunk(stream, state);\n\t  } else {\n\t    var er;\n\t    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\t    if (er) {\n\t      stream.emit('error', er);\n\t    } else if (state.objectMode || chunk && chunk.length > 0) {\n\t      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n\t        chunk = _uint8ArrayToBuffer(chunk);\n\t      }\n\t\n\t      if (addToFront) {\n\t        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n\t      } else if (state.ended) {\n\t        stream.emit('error', new Error('stream.push() after EOF'));\n\t      } else {\n\t        state.reading = false;\n\t        if (state.decoder && !encoding) {\n\t          chunk = state.decoder.write(chunk);\n\t          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n\t        } else {\n\t          addChunk(stream, state, chunk, false);\n\t        }\n\t      }\n\t    } else if (!addToFront) {\n\t      state.reading = false;\n\t    }\n\t  }\n\t\n\t  return needMoreData(state);\n\t}\n\t\n\tfunction addChunk(stream, state, chunk, addToFront) {\n\t  if (state.flowing && state.length === 0 && !state.sync) {\n\t    stream.emit('data', chunk);\n\t    stream.read(0);\n\t  } else {\n\t    // update the buffer info.\n\t    state.length += state.objectMode ? 1 : chunk.length;\n\t    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\t\n\t    if (state.needReadable) emitReadable(stream);\n\t  }\n\t  maybeReadMore(stream, state);\n\t}\n\t\n\tfunction chunkInvalid(state, chunk) {\n\t  var er;\n\t  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  return er;\n\t}\n\t\n\t// if it's past the high water mark, we can push in some more.\n\t// Also, if we have no data yet, we can stand some\n\t// more bytes.  This is to work around cases where hwm=0,\n\t// such as the repl.  Also, if the push() triggered a\n\t// readable event, and the user called read(largeNumber) such that\n\t// needReadable was set, then we ought to push more, so that another\n\t// 'readable' event will be triggered.\n\tfunction needMoreData(state) {\n\t  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n\t}\n\t\n\tReadable.prototype.isPaused = function () {\n\t  return this._readableState.flowing === false;\n\t};\n\t\n\t// backwards compatibility.\n\tReadable.prototype.setEncoding = function (enc) {\n\t  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ 44).StringDecoder;\n\t  this._readableState.decoder = new StringDecoder(enc);\n\t  this._readableState.encoding = enc;\n\t  return this;\n\t};\n\t\n\t// Don't raise the hwm > 8MB\n\tvar MAX_HWM = 0x800000;\n\tfunction computeNewHighWaterMark(n) {\n\t  if (n >= MAX_HWM) {\n\t    n = MAX_HWM;\n\t  } else {\n\t    // Get the next highest power of 2 to prevent increasing hwm excessively in\n\t    // tiny amounts\n\t    n--;\n\t    n |= n >>> 1;\n\t    n |= n >>> 2;\n\t    n |= n >>> 4;\n\t    n |= n >>> 8;\n\t    n |= n >>> 16;\n\t    n++;\n\t  }\n\t  return n;\n\t}\n\t\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction howMuchToRead(n, state) {\n\t  if (n <= 0 || state.length === 0 && state.ended) return 0;\n\t  if (state.objectMode) return 1;\n\t  if (n !== n) {\n\t    // Only flow one buffer at a time\n\t    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n\t  }\n\t  // If we're asking for more than the current hwm, then raise the hwm.\n\t  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n\t  if (n <= state.length) return n;\n\t  // Don't have enough\n\t  if (!state.ended) {\n\t    state.needReadable = true;\n\t    return 0;\n\t  }\n\t  return state.length;\n\t}\n\t\n\t// you can override either this method, or the async _read(n) below.\n\tReadable.prototype.read = function (n) {\n\t  debug('read', n);\n\t  n = parseInt(n, 10);\n\t  var state = this._readableState;\n\t  var nOrig = n;\n\t\n\t  if (n !== 0) state.emittedReadable = false;\n\t\n\t  // if we're doing read(0) to trigger a readable event, but we\n\t  // already have a bunch of data in the buffer, then just trigger\n\t  // the 'readable' event and move on.\n\t  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n\t    debug('read: emitReadable', state.length, state.ended);\n\t    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n\t    return null;\n\t  }\n\t\n\t  n = howMuchToRead(n, state);\n\t\n\t  // if we've ended, and we're now clear, then finish it up.\n\t  if (n === 0 && state.ended) {\n\t    if (state.length === 0) endReadable(this);\n\t    return null;\n\t  }\n\t\n\t  // All the actual chunk generation logic needs to be\n\t  // *below* the call to _read.  The reason is that in certain\n\t  // synthetic stream cases, such as passthrough streams, _read\n\t  // may be a completely synchronous operation which may change\n\t  // the state of the read buffer, providing enough data when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the steps are:\n\t  // 1. Figure out what the state of things will be after we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that resulting state will trigger a _read, then call _read.\n\t  // Note that this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply ugly to write APIs this way, but that still doesn't mean\n\t  // that the Readable class should behave improperly, as streams are\n\t  // designed to be sync/async agnostic.\n\t  // Take note if the _read call is sync or async (ie, if the read call\n\t  // has returned yet), so that we know whether or not it's safe to emit\n\t  // 'readable' etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the buffer and return.\n\t\n\t  // if we need a readable event, then we need to do some reading.\n\t  var doRead = state.needReadable;\n\t  debug('need readable', doRead);\n\t\n\t  // if we currently have less than the highWaterMark, then also read some\n\t  if (state.length === 0 || state.length - n < state.highWaterMark) {\n\t    doRead = true;\n\t    debug('length less than watermark', doRead);\n\t  }\n\t\n\t  // however, if we've ended, then there's no point, and if we're already\n\t  // reading, then it's unnecessary.\n\t  if (state.ended || state.reading) {\n\t    doRead = false;\n\t    debug('reading or ended', doRead);\n\t  } else if (doRead) {\n\t    debug('do read');\n\t    state.reading = true;\n\t    state.sync = true;\n\t    // if the length is currently zero, then we *need* a readable event.\n\t    if (state.length === 0) state.needReadable = true;\n\t    // call internal read method\n\t    this._read(state.highWaterMark);\n\t    state.sync = false;\n\t    // If _read pushed data synchronously, then `reading` will be false,\n\t    // and we need to re-evaluate how much data we can return to the user.\n\t    if (!state.reading) n = howMuchToRead(nOrig, state);\n\t  }\n\t\n\t  var ret;\n\t  if (n > 0) ret = fromList(n, state);else ret = null;\n\t\n\t  if (ret === null) {\n\t    state.needReadable = true;\n\t    n = 0;\n\t  } else {\n\t    state.length -= n;\n\t  }\n\t\n\t  if (state.length === 0) {\n\t    // If we have nothing in the buffer, then we want to know\n\t    // as soon as we *do* get something into the buffer.\n\t    if (!state.ended) state.needReadable = true;\n\t\n\t    // If we tried to read() past the EOF, then emit end on the next tick.\n\t    if (nOrig !== n && state.ended) endReadable(this);\n\t  }\n\t\n\t  if (ret !== null) this.emit('data', ret);\n\t\n\t  return ret;\n\t};\n\t\n\tfunction onEofChunk(stream, state) {\n\t  if (state.ended) return;\n\t  if (state.decoder) {\n\t    var chunk = state.decoder.end();\n\t    if (chunk && chunk.length) {\n\t      state.buffer.push(chunk);\n\t      state.length += state.objectMode ? 1 : chunk.length;\n\t    }\n\t  }\n\t  state.ended = true;\n\t\n\t  // emit 'readable' now to make sure it gets picked up.\n\t  emitReadable(stream);\n\t}\n\t\n\t// Don't emit readable right away in sync mode, because this can trigger\n\t// another read() call => stack overflow.  This way, it might trigger\n\t// a nextTick recursion warning, but that's not so bad.\n\tfunction emitReadable(stream) {\n\t  var state = stream._readableState;\n\t  state.needReadable = false;\n\t  if (!state.emittedReadable) {\n\t    debug('emitReadable', state.flowing);\n\t    state.emittedReadable = true;\n\t    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n\t  }\n\t}\n\t\n\tfunction emitReadable_(stream) {\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  flow(stream);\n\t}\n\t\n\t// at this point, the user has presumably seen the 'readable' event,\n\t// and called read() to consume some data.  that may have triggered\n\t// in turn another _read(n) call, in which case reading = true if\n\t// it's in progress.\n\t// However, if we're not ended, or reading, and the length < hwm,\n\t// then go ahead and try to read some more preemptively.\n\tfunction maybeReadMore(stream, state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore = true;\n\t    pna.nextTick(maybeReadMore_, stream, state);\n\t  }\n\t}\n\t\n\tfunction maybeReadMore_(stream, state) {\n\t  var len = state.length;\n\t  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n\t    debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len === state.length)\n\t      // didn't get any data, stop spinning.\n\t      break;else len = state.length;\n\t  }\n\t  state.readingMore = false;\n\t}\n\t\n\t// abstract method.  to be overridden in specific implementation classes.\n\t// call cb(er, data) where data is <= n in length.\n\t// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps not very meaningful.\n\tReadable.prototype._read = function (n) {\n\t  this.emit('error', new Error('_read() is not implemented'));\n\t};\n\t\n\tReadable.prototype.pipe = function (dest, pipeOpts) {\n\t  var src = this;\n\t  var state = this._readableState;\n\t\n\t  switch (state.pipesCount) {\n\t    case 0:\n\t      state.pipes = dest;\n\t      break;\n\t    case 1:\n\t      state.pipes = [state.pipes, dest];\n\t      break;\n\t    default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\t  state.pipesCount += 1;\n\t  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\t\n\t  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\t\n\t  var endFn = doEnd ? onend : unpipe;\n\t  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\t\n\t  dest.on('unpipe', onunpipe);\n\t  function onunpipe(readable, unpipeInfo) {\n\t    debug('onunpipe');\n\t    if (readable === src) {\n\t      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n\t        unpipeInfo.hasUnpiped = true;\n\t        cleanup();\n\t      }\n\t    }\n\t  }\n\t\n\t  function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  }\n\t\n\t  // when the dest drains, it reduces the awaitDrain counter\n\t  // on the source.  This would be more elegant with a .once()\n\t  // handler in flow(), but adding and removing repeatedly is\n\t  // too slow.\n\t  var ondrain = pipeOnDrain(src);\n\t  dest.on('drain', ondrain);\n\t\n\t  var cleanedUp = false;\n\t  function cleanup() {\n\t    debug('cleanup');\n\t    // cleanup event handlers once the pipe is broken\n\t    dest.removeListener('close', onclose);\n\t    dest.removeListener('finish', onfinish);\n\t    dest.removeListener('drain', ondrain);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('unpipe', onunpipe);\n\t    src.removeListener('end', onend);\n\t    src.removeListener('end', unpipe);\n\t    src.removeListener('data', ondata);\n\t\n\t    cleanedUp = true;\n\t\n\t    // if the reader is waiting for a drain event from this\n\t    // specific writer, then it would cause it to never start\n\t    // flowing again.\n\t    // So, if this is awaiting a drain, then we just call it now.\n\t    // If we don't know, then assume that we are waiting for one.\n\t    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n\t  }\n\t\n\t  // If the user pushes more data while we're writing to dest then we'll end up\n\t  // in ondata again. However, we only want to increase awaitDrain once because\n\t  // dest will only emit one 'drain' event for the multiple writes.\n\t  // => Introduce a guard on increasing awaitDrain.\n\t  var increasedAwaitDrain = false;\n\t  src.on('data', ondata);\n\t  function ondata(chunk) {\n\t    debug('ondata');\n\t    increasedAwaitDrain = false;\n\t    var ret = dest.write(chunk);\n\t    if (false === ret && !increasedAwaitDrain) {\n\t      // If the user unpiped during `dest.write()`, it is possible\n\t      // to get stuck in a permanently paused state if that write\n\t      // also returned false.\n\t      // => Check whether `dest` is still a piping destination.\n\t      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n\t        debug('false write response, pause', src._readableState.awaitDrain);\n\t        src._readableState.awaitDrain++;\n\t        increasedAwaitDrain = true;\n\t      }\n\t      src.pause();\n\t    }\n\t  }\n\t\n\t  // if the dest has an error, then stop piping into it.\n\t  // however, don't suppress the throwing behavior for this.\n\t  function onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    dest.removeListener('error', onerror);\n\t    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n\t  }\n\t\n\t  // Make sure our error handler is attached before userland ones.\n\t  prependListener(dest, 'error', onerror);\n\t\n\t  // Both close and finish should trigger unpipe, but only once.\n\t  function onclose() {\n\t    dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\t  dest.once('close', onclose);\n\t  function onfinish() {\n\t    debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    unpipe();\n\t  }\n\t  dest.once('finish', onfinish);\n\t\n\t  function unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  }\n\t\n\t  // tell the dest that it's being piped to\n\t  dest.emit('pipe', src);\n\t\n\t  // start the flow if it hasn't been started already.\n\t  if (!state.flowing) {\n\t    debug('pipe resume');\n\t    src.resume();\n\t  }\n\t\n\t  return dest;\n\t};\n\t\n\tfunction pipeOnDrain(src) {\n\t  return function () {\n\t    var state = src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t    if (state.awaitDrain) state.awaitDrain--;\n\t    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n\t      state.flowing = true;\n\t      flow(src);\n\t    }\n\t  };\n\t}\n\t\n\tReadable.prototype.unpipe = function (dest) {\n\t  var state = this._readableState;\n\t  var unpipeInfo = { hasUnpiped: false };\n\t\n\t  // if we're not piping anywhere, then do nothing.\n\t  if (state.pipesCount === 0) return this;\n\t\n\t  // just one destination.  most common case.\n\t  if (state.pipesCount === 1) {\n\t    // passed in one, but it's not the right one.\n\t    if (dest && dest !== state.pipes) return this;\n\t\n\t    if (!dest) dest = state.pipes;\n\t\n\t    // got a match.\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t    if (dest) dest.emit('unpipe', this, unpipeInfo);\n\t    return this;\n\t  }\n\t\n\t  // slow case. multiple pipe destinations.\n\t\n\t  if (!dest) {\n\t    // remove all.\n\t    var dests = state.pipes;\n\t    var len = state.pipesCount;\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t      dests[i].emit('unpipe', this, unpipeInfo);\n\t    }return this;\n\t  }\n\t\n\t  // try to find the right one.\n\t  var index = indexOf(state.pipes, dest);\n\t  if (index === -1) return this;\n\t\n\t  state.pipes.splice(index, 1);\n\t  state.pipesCount -= 1;\n\t  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\t\n\t  dest.emit('unpipe', this, unpipeInfo);\n\t\n\t  return this;\n\t};\n\t\n\t// set up data events if they are asked for\n\t// Ensure readable listeners eventually get something\n\tReadable.prototype.on = function (ev, fn) {\n\t  var res = Stream.prototype.on.call(this, ev, fn);\n\t\n\t  if (ev === 'data') {\n\t    // Start flowing on next tick if stream isn't explicitly paused\n\t    if (this._readableState.flowing !== false) this.resume();\n\t  } else if (ev === 'readable') {\n\t    var state = this._readableState;\n\t    if (!state.endEmitted && !state.readableListening) {\n\t      state.readableListening = state.needReadable = true;\n\t      state.emittedReadable = false;\n\t      if (!state.reading) {\n\t        pna.nextTick(nReadingNextTick, this);\n\t      } else if (state.length) {\n\t        emitReadable(this);\n\t      }\n\t    }\n\t  }\n\t\n\t  return res;\n\t};\n\tReadable.prototype.addListener = Readable.prototype.on;\n\t\n\tfunction nReadingNextTick(self) {\n\t  debug('readable nexttick read 0');\n\t  self.read(0);\n\t}\n\t\n\t// pause() and resume() are remnants of the legacy readable stream API\n\t// If the user uses them, then switch into old mode.\n\tReadable.prototype.resume = function () {\n\t  var state = this._readableState;\n\t  if (!state.flowing) {\n\t    debug('resume');\n\t    state.flowing = true;\n\t    resume(this, state);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction resume(stream, state) {\n\t  if (!state.resumeScheduled) {\n\t    state.resumeScheduled = true;\n\t    pna.nextTick(resume_, stream, state);\n\t  }\n\t}\n\t\n\tfunction resume_(stream, state) {\n\t  if (!state.reading) {\n\t    debug('resume read 0');\n\t    stream.read(0);\n\t  }\n\t\n\t  state.resumeScheduled = false;\n\t  state.awaitDrain = 0;\n\t  stream.emit('resume');\n\t  flow(stream);\n\t  if (state.flowing && !state.reading) stream.read(0);\n\t}\n\t\n\tReadable.prototype.pause = function () {\n\t  debug('call pause flowing=%j', this._readableState.flowing);\n\t  if (false !== this._readableState.flowing) {\n\t    debug('pause');\n\t    this._readableState.flowing = false;\n\t    this.emit('pause');\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction flow(stream) {\n\t  var state = stream._readableState;\n\t  debug('flow', state.flowing);\n\t  while (state.flowing && stream.read() !== null) {}\n\t}\n\t\n\t// wrap an old-style stream as the async data source.\n\t// This is *not* part of the readable stream interface.\n\t// It is an ugly unfortunate mess of history.\n\tReadable.prototype.wrap = function (stream) {\n\t  var _this = this;\n\t\n\t  var state = this._readableState;\n\t  var paused = false;\n\t\n\t  stream.on('end', function () {\n\t    debug('wrapped end');\n\t    if (state.decoder && !state.ended) {\n\t      var chunk = state.decoder.end();\n\t      if (chunk && chunk.length) _this.push(chunk);\n\t    }\n\t\n\t    _this.push(null);\n\t  });\n\t\n\t  stream.on('data', function (chunk) {\n\t    debug('wrapped data');\n\t    if (state.decoder) chunk = state.decoder.write(chunk);\n\t\n\t    // don't skip over falsy values in objectMode\n\t    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\t\n\t    var ret = _this.push(chunk);\n\t    if (!ret) {\n\t      paused = true;\n\t      stream.pause();\n\t    }\n\t  });\n\t\n\t  // proxy all the other methods.\n\t  // important when wrapping filters and duplexes.\n\t  for (var i in stream) {\n\t    if (this[i] === undefined && typeof stream[i] === 'function') {\n\t      this[i] = function (method) {\n\t        return function () {\n\t          return stream[method].apply(stream, arguments);\n\t        };\n\t      }(i);\n\t    }\n\t  }\n\t\n\t  // proxy certain important events.\n\t  for (var n = 0; n < kProxyEvents.length; n++) {\n\t    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n\t  }\n\t\n\t  // when we try to consume some more bytes, simply unpause the\n\t  // underlying stream.\n\t  this._read = function (n) {\n\t    debug('wrapped _read', n);\n\t    if (paused) {\n\t      paused = false;\n\t      stream.resume();\n\t    }\n\t  };\n\t\n\t  return this;\n\t};\n\t\n\tObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n\t  // making it explicit this property is not enumerable\n\t  // because otherwise some prototype manipulation in\n\t  // userland will fail\n\t  enumerable: false,\n\t  get: function () {\n\t    return this._readableState.highWaterMark;\n\t  }\n\t});\n\t\n\t// exposed for testing purposes only.\n\tReadable._fromList = fromList;\n\t\n\t// Pluck off n bytes from an array of buffers.\n\t// Length is the combined lengths of all the buffers in the list.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction fromList(n, state) {\n\t  // nothing buffered\n\t  if (state.length === 0) return null;\n\t\n\t  var ret;\n\t  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n\t    // read it all, truncate the list\n\t    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n\t    state.buffer.clear();\n\t  } else {\n\t    // read part of list\n\t    ret = fromListPartial(n, state.buffer, state.decoder);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\t// Extracts only enough buffered data to satisfy the amount requested.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction fromListPartial(n, list, hasStrings) {\n\t  var ret;\n\t  if (n < list.head.data.length) {\n\t    // slice is the same for buffers and strings\n\t    ret = list.head.data.slice(0, n);\n\t    list.head.data = list.head.data.slice(n);\n\t  } else if (n === list.head.data.length) {\n\t    // first chunk is a perfect match\n\t    ret = list.shift();\n\t  } else {\n\t    // result spans more than one buffer\n\t    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n\t  }\n\t  return ret;\n\t}\n\t\n\t// Copies a specified amount of characters from the list of buffered data\n\t// chunks.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction copyFromBufferString(n, list) {\n\t  var p = list.head;\n\t  var c = 1;\n\t  var ret = p.data;\n\t  n -= ret.length;\n\t  while (p = p.next) {\n\t    var str = p.data;\n\t    var nb = n > str.length ? str.length : n;\n\t    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n\t    n -= nb;\n\t    if (n === 0) {\n\t      if (nb === str.length) {\n\t        ++c;\n\t        if (p.next) list.head = p.next;else list.head = list.tail = null;\n\t      } else {\n\t        list.head = p;\n\t        p.data = str.slice(nb);\n\t      }\n\t      break;\n\t    }\n\t    ++c;\n\t  }\n\t  list.length -= c;\n\t  return ret;\n\t}\n\t\n\t// Copies a specified amount of bytes from the list of buffered data chunks.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\tfunction copyFromBuffer(n, list) {\n\t  var ret = Buffer.allocUnsafe(n);\n\t  var p = list.head;\n\t  var c = 1;\n\t  p.data.copy(ret);\n\t  n -= p.data.length;\n\t  while (p = p.next) {\n\t    var buf = p.data;\n\t    var nb = n > buf.length ? buf.length : n;\n\t    buf.copy(ret, ret.length - n, 0, nb);\n\t    n -= nb;\n\t    if (n === 0) {\n\t      if (nb === buf.length) {\n\t        ++c;\n\t        if (p.next) list.head = p.next;else list.head = list.tail = null;\n\t      } else {\n\t        list.head = p;\n\t        p.data = buf.slice(nb);\n\t      }\n\t      break;\n\t    }\n\t    ++c;\n\t  }\n\t  list.length -= c;\n\t  return ret;\n\t}\n\t\n\tfunction endReadable(stream) {\n\t  var state = stream._readableState;\n\t\n\t  // If we get here before consuming all the bytes, then that is a\n\t  // bug in node.  Should never happen.\n\t  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\t\n\t  if (!state.endEmitted) {\n\t    state.ended = true;\n\t    pna.nextTick(endReadableNT, state, stream);\n\t  }\n\t}\n\t\n\tfunction endReadableNT(state, stream) {\n\t  // Check that we didn't get one last unshift.\n\t  if (!state.endEmitted && state.length === 0) {\n\t    state.endEmitted = true;\n\t    stream.readable = false;\n\t    stream.emit('end');\n\t  }\n\t}\n\t\n\tfunction indexOf(xs, x) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    if (xs[i] === x) return i;\n\t  }\n\t  return -1;\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(/*! ./../../../../process/browser.js */ 12)))\n\n/***/ }),\n/* 30 */\n/*!*****************************************!*\\\n  !*** ./~/process-nextick-args/index.js ***!\n  \\*****************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tif (!process.version ||\n\t    process.version.indexOf('v0.') === 0 ||\n\t    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n\t  module.exports = { nextTick: nextTick };\n\t} else {\n\t  module.exports = process\n\t}\n\t\n\tfunction nextTick(fn, arg1, arg2, arg3) {\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('\"callback\" argument must be a function');\n\t  }\n\t  var len = arguments.length;\n\t  var args, i;\n\t  switch (len) {\n\t  case 0:\n\t  case 1:\n\t    return process.nextTick(fn);\n\t  case 2:\n\t    return process.nextTick(function afterTickOne() {\n\t      fn.call(null, arg1);\n\t    });\n\t  case 3:\n\t    return process.nextTick(function afterTickTwo() {\n\t      fn.call(null, arg1, arg2);\n\t    });\n\t  case 4:\n\t    return process.nextTick(function afterTickThree() {\n\t      fn.call(null, arg1, arg2, arg3);\n\t    });\n\t  default:\n\t    args = new Array(len - 1);\n\t    i = 0;\n\t    while (i < args.length) {\n\t      args[i++] = arguments[i];\n\t    }\n\t    return process.nextTick(function afterTick() {\n\t      fn.apply(null, args);\n\t    });\n\t  }\n\t}\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 12)))\n\n/***/ }),\n/* 31 */\n/*!****************************!*\\\n  !*** ./~/events/events.js ***!\n  \\****************************/\n/***/ (function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ }),\n/* 32 */\n/*!********************************************************************************!*\\\n  !*** ./~/stream-http/~/readable-stream/lib/internal/streams/stream-browser.js ***!\n  \\********************************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(/*! events */ 31).EventEmitter;\n\n\n/***/ }),\n/* 33 */\n/*!********************************!*\\\n  !*** ./~/safe-buffer/index.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* eslint-disable node/no-deprecated-api */\n\tvar buffer = __webpack_require__(/*! buffer */ 8)\n\tvar Buffer = buffer.Buffer\n\t\n\t// alternative to using Object.keys for old browsers\n\tfunction copyProps (src, dst) {\n\t  for (var key in src) {\n\t    dst[key] = src[key]\n\t  }\n\t}\n\tif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n\t  module.exports = buffer\n\t} else {\n\t  // Copy properties from require('buffer')\n\t  copyProps(buffer, exports)\n\t  exports.Buffer = SafeBuffer\n\t}\n\t\n\tfunction SafeBuffer (arg, encodingOrOffset, length) {\n\t  return Buffer(arg, encodingOrOffset, length)\n\t}\n\t\n\t// Copy static methods from Buffer\n\tcopyProps(Buffer, SafeBuffer)\n\t\n\tSafeBuffer.from = function (arg, encodingOrOffset, length) {\n\t  if (typeof arg === 'number') {\n\t    throw new TypeError('Argument must not be a number')\n\t  }\n\t  return Buffer(arg, encodingOrOffset, length)\n\t}\n\t\n\tSafeBuffer.alloc = function (size, fill, encoding) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('Argument must be a number')\n\t  }\n\t  var buf = Buffer(size)\n\t  if (fill !== undefined) {\n\t    if (typeof encoding === 'string') {\n\t      buf.fill(fill, encoding)\n\t    } else {\n\t      buf.fill(fill)\n\t    }\n\t  } else {\n\t    buf.fill(0)\n\t  }\n\t  return buf\n\t}\n\t\n\tSafeBuffer.allocUnsafe = function (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('Argument must be a number')\n\t  }\n\t  return Buffer(size)\n\t}\n\t\n\tSafeBuffer.allocUnsafeSlow = function (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('Argument must be a number')\n\t  }\n\t  return buffer.SlowBuffer(size)\n\t}\n\n\n/***/ }),\n/* 34 */\n/*!************************************!*\\\n  !*** ./~/core-util-is/lib/util.js ***!\n  \\************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\t\n\tfunction isArray(arg) {\n\t  if (Array.isArray) {\n\t    return Array.isArray(arg);\n\t  }\n\t  return objectToString(arg) === '[object Array]';\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = Buffer.isBuffer;\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../buffer/index.js */ 8).Buffer))\n\n/***/ }),\n/* 35 */\n/*!**********************!*\\\n  !*** util (ignored) ***!\n  \\**********************/\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 36 */\n/*!****************************************************************************!*\\\n  !*** ./~/stream-http/~/readable-stream/lib/internal/streams/BufferList.js ***!\n  \\****************************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Buffer = __webpack_require__(/*! safe-buffer */ 33).Buffer;\n\tvar util = __webpack_require__(/*! util */ 37);\n\t\n\tfunction copyBuffer(src, target, offset) {\n\t  src.copy(target, offset);\n\t}\n\t\n\tmodule.exports = function () {\n\t  function BufferList() {\n\t    _classCallCheck(this, BufferList);\n\t\n\t    this.head = null;\n\t    this.tail = null;\n\t    this.length = 0;\n\t  }\n\t\n\t  BufferList.prototype.push = function push(v) {\n\t    var entry = { data: v, next: null };\n\t    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n\t    this.tail = entry;\n\t    ++this.length;\n\t  };\n\t\n\t  BufferList.prototype.unshift = function unshift(v) {\n\t    var entry = { data: v, next: this.head };\n\t    if (this.length === 0) this.tail = entry;\n\t    this.head = entry;\n\t    ++this.length;\n\t  };\n\t\n\t  BufferList.prototype.shift = function shift() {\n\t    if (this.length === 0) return;\n\t    var ret = this.head.data;\n\t    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n\t    --this.length;\n\t    return ret;\n\t  };\n\t\n\t  BufferList.prototype.clear = function clear() {\n\t    this.head = this.tail = null;\n\t    this.length = 0;\n\t  };\n\t\n\t  BufferList.prototype.join = function join(s) {\n\t    if (this.length === 0) return '';\n\t    var p = this.head;\n\t    var ret = '' + p.data;\n\t    while (p = p.next) {\n\t      ret += s + p.data;\n\t    }return ret;\n\t  };\n\t\n\t  BufferList.prototype.concat = function concat(n) {\n\t    if (this.length === 0) return Buffer.alloc(0);\n\t    if (this.length === 1) return this.head.data;\n\t    var ret = Buffer.allocUnsafe(n >>> 0);\n\t    var p = this.head;\n\t    var i = 0;\n\t    while (p) {\n\t      copyBuffer(p.data, ret, i);\n\t      i += p.data.length;\n\t      p = p.next;\n\t    }\n\t    return ret;\n\t  };\n\t\n\t  return BufferList;\n\t}();\n\t\n\tif (util && util.inspect && util.inspect.custom) {\n\t  module.exports.prototype[util.inspect.custom] = function () {\n\t    var obj = util.inspect({ length: this.length });\n\t    return this.constructor.name + ' ' + obj;\n\t  };\n\t}\n\n/***/ }),\n/* 37 */\n/*!**********************!*\\\n  !*** util (ignored) ***!\n  \\**********************/\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 38 */\n/*!*************************************************************************!*\\\n  !*** ./~/stream-http/~/readable-stream/lib/internal/streams/destroy.js ***!\n  \\*************************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar pna = __webpack_require__(/*! process-nextick-args */ 30);\n\t/*</replacement>*/\n\t\n\t// undocumented cb() API, needed for core, not for public API\n\tfunction destroy(err, cb) {\n\t  var _this = this;\n\t\n\t  var readableDestroyed = this._readableState && this._readableState.destroyed;\n\t  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\t\n\t  if (readableDestroyed || writableDestroyed) {\n\t    if (cb) {\n\t      cb(err);\n\t    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n\t      pna.nextTick(emitErrorNT, this, err);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  // we set destroyed to true before firing error callbacks in order\n\t  // to make it re-entrance safe in case destroy() is called within callbacks\n\t\n\t  if (this._readableState) {\n\t    this._readableState.destroyed = true;\n\t  }\n\t\n\t  // if this is a duplex stream mark the writable part as destroyed as well\n\t  if (this._writableState) {\n\t    this._writableState.destroyed = true;\n\t  }\n\t\n\t  this._destroy(err || null, function (err) {\n\t    if (!cb && err) {\n\t      pna.nextTick(emitErrorNT, _this, err);\n\t      if (_this._writableState) {\n\t        _this._writableState.errorEmitted = true;\n\t      }\n\t    } else if (cb) {\n\t      cb(err);\n\t    }\n\t  });\n\t\n\t  return this;\n\t}\n\t\n\tfunction undestroy() {\n\t  if (this._readableState) {\n\t    this._readableState.destroyed = false;\n\t    this._readableState.reading = false;\n\t    this._readableState.ended = false;\n\t    this._readableState.endEmitted = false;\n\t  }\n\t\n\t  if (this._writableState) {\n\t    this._writableState.destroyed = false;\n\t    this._writableState.ended = false;\n\t    this._writableState.ending = false;\n\t    this._writableState.finished = false;\n\t    this._writableState.errorEmitted = false;\n\t  }\n\t}\n\t\n\tfunction emitErrorNT(self, err) {\n\t  self.emit('error', err);\n\t}\n\t\n\tmodule.exports = {\n\t  destroy: destroy,\n\t  undestroy: undestroy\n\t};\n\n/***/ }),\n/* 39 */\n/*!***************************************************************!*\\\n  !*** ./~/stream-http/~/readable-stream/lib/_stream_duplex.js ***!\n  \\***************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a duplex stream is just a stream that is both readable and writable.\n\t// Since JS doesn't have multiple prototypal inheritance, this class\n\t// prototypally inherits from Readable, and then parasitically from\n\t// Writable.\n\t\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar pna = __webpack_require__(/*! process-nextick-args */ 30);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) {\n\t    keys.push(key);\n\t  }return keys;\n\t};\n\t/*</replacement>*/\n\t\n\tmodule.exports = Duplex;\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(/*! core-util-is */ 34);\n\tutil.inherits = __webpack_require__(/*! inherits */ 26);\n\t/*</replacement>*/\n\t\n\tvar Readable = __webpack_require__(/*! ./_stream_readable */ 29);\n\tvar Writable = __webpack_require__(/*! ./_stream_writable */ 40);\n\t\n\tutil.inherits(Duplex, Readable);\n\t\n\t{\n\t  // avoid scope creep, the keys array can then be collected\n\t  var keys = objectKeys(Writable.prototype);\n\t  for (var v = 0; v < keys.length; v++) {\n\t    var method = keys[v];\n\t    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n\t  }\n\t}\n\t\n\tfunction Duplex(options) {\n\t  if (!(this instanceof Duplex)) return new Duplex(options);\n\t\n\t  Readable.call(this, options);\n\t  Writable.call(this, options);\n\t\n\t  if (options && options.readable === false) this.readable = false;\n\t\n\t  if (options && options.writable === false) this.writable = false;\n\t\n\t  this.allowHalfOpen = true;\n\t  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\t\n\t  this.once('end', onend);\n\t}\n\t\n\tObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n\t  // making it explicit this property is not enumerable\n\t  // because otherwise some prototype manipulation in\n\t  // userland will fail\n\t  enumerable: false,\n\t  get: function () {\n\t    return this._writableState.highWaterMark;\n\t  }\n\t});\n\t\n\t// the no-half-open enforcer\n\tfunction onend() {\n\t  // if we allow half-open state, or if the writable side ended,\n\t  // then we're ok.\n\t  if (this.allowHalfOpen || this._writableState.ended) return;\n\t\n\t  // no more data can be written.\n\t  // But allow more writes to happen in this tick.\n\t  pna.nextTick(onEndNT, this);\n\t}\n\t\n\tfunction onEndNT(self) {\n\t  self.end();\n\t}\n\t\n\tObject.defineProperty(Duplex.prototype, 'destroyed', {\n\t  get: function () {\n\t    if (this._readableState === undefined || this._writableState === undefined) {\n\t      return false;\n\t    }\n\t    return this._readableState.destroyed && this._writableState.destroyed;\n\t  },\n\t  set: function (value) {\n\t    // we ignore the value if the stream\n\t    // has not been initialized yet\n\t    if (this._readableState === undefined || this._writableState === undefined) {\n\t      return;\n\t    }\n\t\n\t    // backward compatibility, the user is explicitly\n\t    // managing destroyed\n\t    this._readableState.destroyed = value;\n\t    this._writableState.destroyed = value;\n\t  }\n\t});\n\t\n\tDuplex.prototype._destroy = function (err, cb) {\n\t  this.push(null);\n\t  this.end();\n\t\n\t  pna.nextTick(cb, err);\n\t};\n\n/***/ }),\n/* 40 */\n/*!*****************************************************************!*\\\n  !*** ./~/stream-http/~/readable-stream/lib/_stream_writable.js ***!\n  \\*****************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// A bit simpler than readable streams.\n\t// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n\t// the drain event emission and buffering.\n\t\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar pna = __webpack_require__(/*! process-nextick-args */ 30);\n\t/*</replacement>*/\n\t\n\tmodule.exports = Writable;\n\t\n\t/* <replacement> */\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk = chunk;\n\t  this.encoding = encoding;\n\t  this.callback = cb;\n\t  this.next = null;\n\t}\n\t\n\t// It seems a linked list but it is not\n\t// there will be only 2 of these for each stream\n\tfunction CorkedRequest(state) {\n\t  var _this = this;\n\t\n\t  this.next = null;\n\t  this.entry = null;\n\t  this.finish = function () {\n\t    onCorkedFinish(_this, state);\n\t  };\n\t}\n\t/* </replacement> */\n\t\n\t/*<replacement>*/\n\tvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Duplex;\n\t/*</replacement>*/\n\t\n\tWritable.WritableState = WritableState;\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(/*! core-util-is */ 34);\n\tutil.inherits = __webpack_require__(/*! inherits */ 26);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar internalUtil = {\n\t  deprecate: __webpack_require__(/*! util-deprecate */ 43)\n\t};\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\tvar Stream = __webpack_require__(/*! ./internal/streams/stream */ 32);\n\t/*</replacement>*/\n\t\n\t/*<replacement>*/\n\t\n\tvar Buffer = __webpack_require__(/*! safe-buffer */ 33).Buffer;\n\tvar OurUint8Array = global.Uint8Array || function () {};\n\tfunction _uint8ArrayToBuffer(chunk) {\n\t  return Buffer.from(chunk);\n\t}\n\tfunction _isUint8Array(obj) {\n\t  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n\t}\n\t\n\t/*</replacement>*/\n\t\n\tvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ 38);\n\t\n\tutil.inherits(Writable, Stream);\n\t\n\tfunction nop() {}\n\t\n\tfunction WritableState(options, stream) {\n\t  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ 39);\n\t\n\t  options = options || {};\n\t\n\t  // Duplex streams are both readable and writable, but share\n\t  // the same options object.\n\t  // However, some cases require setting options to different\n\t  // values for the readable and the writable sides of the duplex stream.\n\t  // These options can be provided separately as readableXXX and writableXXX.\n\t  var isDuplex = stream instanceof Duplex;\n\t\n\t  // object stream flag to indicate whether or not this stream\n\t  // contains buffers or objects.\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\t\n\t  // the point at which write() starts returning false\n\t  // Note: 0 is a valid value, means that we always return false if\n\t  // the entire buffer is not flushed immediately on write()\n\t  var hwm = options.highWaterMark;\n\t  var writableHwm = options.writableHighWaterMark;\n\t  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\t\n\t  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = Math.floor(this.highWaterMark);\n\t\n\t  // if _final has been called\n\t  this.finalCalled = false;\n\t\n\t  // drain event flag.\n\t  this.needDrain = false;\n\t  // at the start of calling end()\n\t  this.ending = false;\n\t  // when end() has been called, and returned\n\t  this.ended = false;\n\t  // when 'finish' is emitted\n\t  this.finished = false;\n\t\n\t  // has it been destroyed\n\t  this.destroyed = false;\n\t\n\t  // should we decode strings into buffers before passing to _write?\n\t  // this is here so that some node-core streams can optimize string\n\t  // handling at a lower level.\n\t  var noDecode = options.decodeStrings === false;\n\t  this.decodeStrings = !noDecode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // not an actual buffer we keep track of, but a measurement\n\t  // of how much we're waiting to get pushed to some underlying\n\t  // socket or file.\n\t  this.length = 0;\n\t\n\t  // a flag to see when we're in the middle of a write.\n\t  this.writing = false;\n\t\n\t  // when true all writes will be buffered until .uncork() call\n\t  this.corked = 0;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // a flag to know if we're processing previously buffered items, which\n\t  // may call the _write() callback in the same tick, so that we don't\n\t  // end up in an overlapped onwrite situation.\n\t  this.bufferProcessing = false;\n\t\n\t  // the callback that's passed to _write(chunk,cb)\n\t  this.onwrite = function (er) {\n\t    onwrite(stream, er);\n\t  };\n\t\n\t  // the callback that the user supplies to write(chunk,encoding,cb)\n\t  this.writecb = null;\n\t\n\t  // the amount that is being written when _write is called.\n\t  this.writelen = 0;\n\t\n\t  this.bufferedRequest = null;\n\t  this.lastBufferedRequest = null;\n\t\n\t  // number of pending user-supplied write callbacks\n\t  // this must be 0 before 'finish' can be emitted\n\t  this.pendingcb = 0;\n\t\n\t  // emit prefinish if the only thing we're waiting for is _write cbs\n\t  // This is relevant for synchronous Transform streams\n\t  this.prefinished = false;\n\t\n\t  // True if the error was already emitted and should not be thrown again\n\t  this.errorEmitted = false;\n\t\n\t  // count buffered requests\n\t  this.bufferedRequestCount = 0;\n\t\n\t  // allocate the first CorkedRequest, there is always\n\t  // one allocated and free to use, and we maintain at most two\n\t  this.corkedRequestsFree = new CorkedRequest(this);\n\t}\n\t\n\tWritableState.prototype.getBuffer = function getBuffer() {\n\t  var current = this.bufferedRequest;\n\t  var out = [];\n\t  while (current) {\n\t    out.push(current);\n\t    current = current.next;\n\t  }\n\t  return out;\n\t};\n\t\n\t(function () {\n\t  try {\n\t    Object.defineProperty(WritableState.prototype, 'buffer', {\n\t      get: internalUtil.deprecate(function () {\n\t        return this.getBuffer();\n\t      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n\t    });\n\t  } catch (_) {}\n\t})();\n\t\n\t// Test _writableState for inheritance to account for Duplex streams,\n\t// whose prototype chain only points to Readable.\n\tvar realHasInstance;\n\tif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n\t  realHasInstance = Function.prototype[Symbol.hasInstance];\n\t  Object.defineProperty(Writable, Symbol.hasInstance, {\n\t    value: function (object) {\n\t      if (realHasInstance.call(this, object)) return true;\n\t      if (this !== Writable) return false;\n\t\n\t      return object && object._writableState instanceof WritableState;\n\t    }\n\t  });\n\t} else {\n\t  realHasInstance = function (object) {\n\t    return object instanceof this;\n\t  };\n\t}\n\t\n\tfunction Writable(options) {\n\t  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ 39);\n\t\n\t  // Writable ctor is applied to Duplexes, too.\n\t  // `realHasInstance` is necessary because using plain `instanceof`\n\t  // would return false, as no `_writableState` property is attached.\n\t\n\t  // Trying to use the custom `instanceof` for Writable here will also break the\n\t  // Node.js LazyTransform implementation, which has a non-trivial getter for\n\t  // `_writableState` that would lead to infinite recursion.\n\t  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n\t    return new Writable(options);\n\t  }\n\t\n\t  this._writableState = new WritableState(options, this);\n\t\n\t  // legacy.\n\t  this.writable = true;\n\t\n\t  if (options) {\n\t    if (typeof options.write === 'function') this._write = options.write;\n\t\n\t    if (typeof options.writev === 'function') this._writev = options.writev;\n\t\n\t    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\t\n\t    if (typeof options.final === 'function') this._final = options.final;\n\t  }\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Otherwise people can pipe Writable streams, which is just wrong.\n\tWritable.prototype.pipe = function () {\n\t  this.emit('error', new Error('Cannot pipe, not readable'));\n\t};\n\t\n\tfunction writeAfterEnd(stream, cb) {\n\t  var er = new Error('write after end');\n\t  // TODO: defer error events consistently everywhere, not just the cb\n\t  stream.emit('error', er);\n\t  pna.nextTick(cb, er);\n\t}\n\t\n\t// Checks that a user-supplied chunk is valid, especially for the particular\n\t// mode the stream is in. Currently this means that `null` is never accepted\n\t// and undefined/non-string values are only allowed in object mode.\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var valid = true;\n\t  var er = false;\n\t\n\t  if (chunk === null) {\n\t    er = new TypeError('May not write null values to stream');\n\t  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  if (er) {\n\t    stream.emit('error', er);\n\t    pna.nextTick(cb, er);\n\t    valid = false;\n\t  }\n\t  return valid;\n\t}\n\t\n\tWritable.prototype.write = function (chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t  var ret = false;\n\t  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\t\n\t  if (isBuf && !Buffer.isBuffer(chunk)) {\n\t    chunk = _uint8ArrayToBuffer(chunk);\n\t  }\n\t\n\t  if (typeof encoding === 'function') {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\t\n\t  if (typeof cb !== 'function') cb = nop;\n\t\n\t  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t};\n\t\n\tWritable.prototype.cork = function () {\n\t  var state = this._writableState;\n\t\n\t  state.corked++;\n\t};\n\t\n\tWritable.prototype.uncork = function () {\n\t  var state = this._writableState;\n\t\n\t  if (state.corked) {\n\t    state.corked--;\n\t\n\t    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n\t  }\n\t};\n\t\n\tWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n\t  // node::ParseEncoding() requires lower case.\n\t  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n\t  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n\t  this._writableState.defaultEncoding = encoding;\n\t  return this;\n\t};\n\t\n\tfunction decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n\t    chunk = Buffer.from(chunk, encoding);\n\t  }\n\t  return chunk;\n\t}\n\t\n\tObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n\t  // making it explicit this property is not enumerable\n\t  // because otherwise some prototype manipulation in\n\t  // userland will fail\n\t  enumerable: false,\n\t  get: function () {\n\t    return this._writableState.highWaterMark;\n\t  }\n\t});\n\t\n\t// if we're already writing something, then just put this\n\t// in the queue, and wait our turn.  Otherwise, call _write\n\t// If we return false, then we need a drain event, so set that flag.\n\tfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n\t  if (!isBuf) {\n\t    var newChunk = decodeChunk(state, chunk, encoding);\n\t    if (chunk !== newChunk) {\n\t      isBuf = true;\n\t      encoding = 'buffer';\n\t      chunk = newChunk;\n\t    }\n\t  }\n\t  var len = state.objectMode ? 1 : chunk.length;\n\t\n\t  state.length += len;\n\t\n\t  var ret = state.length < state.highWaterMark;\n\t  // we must ensure that previous needDrain will not be reset to false.\n\t  if (!ret) state.needDrain = true;\n\t\n\t  if (state.writing || state.corked) {\n\t    var last = state.lastBufferedRequest;\n\t    state.lastBufferedRequest = {\n\t      chunk: chunk,\n\t      encoding: encoding,\n\t      isBuf: isBuf,\n\t      callback: cb,\n\t      next: null\n\t    };\n\t    if (last) {\n\t      last.next = state.lastBufferedRequest;\n\t    } else {\n\t      state.bufferedRequest = state.lastBufferedRequest;\n\t    }\n\t    state.bufferedRequestCount += 1;\n\t  } else {\n\t    doWrite(stream, state, false, len, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n\t  state.writelen = len;\n\t  state.writecb = cb;\n\t  state.writing = true;\n\t  state.sync = true;\n\t  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n\t  state.sync = false;\n\t}\n\t\n\tfunction onwriteError(stream, state, sync, er, cb) {\n\t  --state.pendingcb;\n\t\n\t  if (sync) {\n\t    // defer the callback if we are being called synchronously\n\t    // to avoid piling up things on the stack\n\t    pna.nextTick(cb, er);\n\t    // this can emit finish, and it will always happen\n\t    // after error\n\t    pna.nextTick(finishMaybe, stream, state);\n\t    stream._writableState.errorEmitted = true;\n\t    stream.emit('error', er);\n\t  } else {\n\t    // the caller expect this to happen before if\n\t    // it is async\n\t    cb(er);\n\t    stream._writableState.errorEmitted = true;\n\t    stream.emit('error', er);\n\t    // this can emit finish, but finish must\n\t    // always follow error\n\t    finishMaybe(stream, state);\n\t  }\n\t}\n\t\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing = false;\n\t  state.writecb = null;\n\t  state.length -= state.writelen;\n\t  state.writelen = 0;\n\t}\n\t\n\tfunction onwrite(stream, er) {\n\t  var state = stream._writableState;\n\t  var sync = state.sync;\n\t  var cb = state.writecb;\n\t\n\t  onwriteStateUpdate(state);\n\t\n\t  if (er) onwriteError(stream, state, sync, er, cb);else {\n\t    // Check if we're actually ready to finish, but don't emit yet\n\t    var finished = needFinish(state);\n\t\n\t    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n\t      clearBuffer(stream, state);\n\t    }\n\t\n\t    if (sync) {\n\t      /*<replacement>*/\n\t      asyncWrite(afterWrite, stream, state, finished, cb);\n\t      /*</replacement>*/\n\t    } else {\n\t      afterWrite(stream, state, finished, cb);\n\t    }\n\t  }\n\t}\n\t\n\tfunction afterWrite(stream, state, finished, cb) {\n\t  if (!finished) onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  finishMaybe(stream, state);\n\t}\n\t\n\t// Must force callback to be called on nextTick, so that we don't\n\t// emit 'drain' before the write() consumer gets the 'false' return\n\t// value, and has a chance to attach a 'drain' listener.\n\tfunction onwriteDrain(stream, state) {\n\t  if (state.length === 0 && state.needDrain) {\n\t    state.needDrain = false;\n\t    stream.emit('drain');\n\t  }\n\t}\n\t\n\t// if there's something in the buffer waiting, then process it\n\tfunction clearBuffer(stream, state) {\n\t  state.bufferProcessing = true;\n\t  var entry = state.bufferedRequest;\n\t\n\t  if (stream._writev && entry && entry.next) {\n\t    // Fast case, write everything using _writev()\n\t    var l = state.bufferedRequestCount;\n\t    var buffer = new Array(l);\n\t    var holder = state.corkedRequestsFree;\n\t    holder.entry = entry;\n\t\n\t    var count = 0;\n\t    var allBuffers = true;\n\t    while (entry) {\n\t      buffer[count] = entry;\n\t      if (!entry.isBuf) allBuffers = false;\n\t      entry = entry.next;\n\t      count += 1;\n\t    }\n\t    buffer.allBuffers = allBuffers;\n\t\n\t    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\t\n\t    // doWrite is almost always async, defer these to save a bit of time\n\t    // as the hot path ends with doWrite\n\t    state.pendingcb++;\n\t    state.lastBufferedRequest = null;\n\t    if (holder.next) {\n\t      state.corkedRequestsFree = holder.next;\n\t      holder.next = null;\n\t    } else {\n\t      state.corkedRequestsFree = new CorkedRequest(state);\n\t    }\n\t    state.bufferedRequestCount = 0;\n\t  } else {\n\t    // Slow case, write chunks one-by-one\n\t    while (entry) {\n\t      var chunk = entry.chunk;\n\t      var encoding = entry.encoding;\n\t      var cb = entry.callback;\n\t      var len = state.objectMode ? 1 : chunk.length;\n\t\n\t      doWrite(stream, state, false, len, chunk, encoding, cb);\n\t      entry = entry.next;\n\t      state.bufferedRequestCount--;\n\t      // if we didn't call the onwrite immediately, then\n\t      // it means that we need to wait until it does.\n\t      // also, that means that the chunk and cb are currently\n\t      // being processed, so move the buffer counter past them.\n\t      if (state.writing) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (entry === null) state.lastBufferedRequest = null;\n\t  }\n\t\n\t  state.bufferedRequest = entry;\n\t  state.bufferProcessing = false;\n\t}\n\t\n\tWritable.prototype._write = function (chunk, encoding, cb) {\n\t  cb(new Error('_write() is not implemented'));\n\t};\n\t\n\tWritable.prototype._writev = null;\n\t\n\tWritable.prototype.end = function (chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t\n\t  if (typeof chunk === 'function') {\n\t    cb = chunk;\n\t    chunk = null;\n\t    encoding = null;\n\t  } else if (typeof encoding === 'function') {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\t\n\t  // .end() fully uncorks\n\t  if (state.corked) {\n\t    state.corked = 1;\n\t    this.uncork();\n\t  }\n\t\n\t  // ignore unnecessary end() calls.\n\t  if (!state.ending && !state.finished) endWritable(this, state, cb);\n\t};\n\t\n\tfunction needFinish(state) {\n\t  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n\t}\n\tfunction callFinal(stream, state) {\n\t  stream._final(function (err) {\n\t    state.pendingcb--;\n\t    if (err) {\n\t      stream.emit('error', err);\n\t    }\n\t    state.prefinished = true;\n\t    stream.emit('prefinish');\n\t    finishMaybe(stream, state);\n\t  });\n\t}\n\tfunction prefinish(stream, state) {\n\t  if (!state.prefinished && !state.finalCalled) {\n\t    if (typeof stream._final === 'function') {\n\t      state.pendingcb++;\n\t      state.finalCalled = true;\n\t      pna.nextTick(callFinal, stream, state);\n\t    } else {\n\t      state.prefinished = true;\n\t      stream.emit('prefinish');\n\t    }\n\t  }\n\t}\n\t\n\tfunction finishMaybe(stream, state) {\n\t  var need = needFinish(state);\n\t  if (need) {\n\t    prefinish(stream, state);\n\t    if (state.pendingcb === 0) {\n\t      state.finished = true;\n\t      stream.emit('finish');\n\t    }\n\t  }\n\t  return need;\n\t}\n\t\n\tfunction endWritable(stream, state, cb) {\n\t  state.ending = true;\n\t  finishMaybe(stream, state);\n\t  if (cb) {\n\t    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n\t  }\n\t  state.ended = true;\n\t  stream.writable = false;\n\t}\n\t\n\tfunction onCorkedFinish(corkReq, state, err) {\n\t  var entry = corkReq.entry;\n\t  corkReq.entry = null;\n\t  while (entry) {\n\t    var cb = entry.callback;\n\t    state.pendingcb--;\n\t    cb(err);\n\t    entry = entry.next;\n\t  }\n\t  if (state.corkedRequestsFree) {\n\t    state.corkedRequestsFree.next = corkReq;\n\t  } else {\n\t    state.corkedRequestsFree = corkReq;\n\t  }\n\t}\n\t\n\tObject.defineProperty(Writable.prototype, 'destroyed', {\n\t  get: function () {\n\t    if (this._writableState === undefined) {\n\t      return false;\n\t    }\n\t    return this._writableState.destroyed;\n\t  },\n\t  set: function (value) {\n\t    // we ignore the value if the stream\n\t    // has not been initialized yet\n\t    if (!this._writableState) {\n\t      return;\n\t    }\n\t\n\t    // backward compatibility, the user is explicitly\n\t    // managing destroyed\n\t    this._writableState.destroyed = value;\n\t  }\n\t});\n\t\n\tWritable.prototype.destroy = destroyImpl.destroy;\n\tWritable.prototype._undestroy = destroyImpl.undestroy;\n\tWritable.prototype._destroy = function (err, cb) {\n\t  this.end();\n\t  cb(err);\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../process/browser.js */ 12), __webpack_require__(/*! ./../../../../timers-browserify/main.js */ 41).setImmediate, (function() { return this; }())))\n\n/***/ }),\n/* 41 */\n/*!*************************************!*\\\n  !*** ./~/timers-browserify/main.js ***!\n  \\*************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n\t            (typeof self !== \"undefined\" && self) ||\n\t            window;\n\tvar apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(scope, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(/*! setimmediate */ 42);\n\t// On some exotic environments, it's not clear which object `setimmediate` was\n\t// able to install onto.  Search each possibility in the same order as the\n\t// `setimmediate` library.\n\texports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n\t                       (typeof global !== \"undefined\" && global.setImmediate) ||\n\t                       (this && this.setImmediate);\n\texports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n\t                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n\t                         (this && this.clearImmediate);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 42 */\n/*!****************************************!*\\\n  !*** ./~/setimmediate/setImmediate.js ***!\n  \\****************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t      // Callback can either be a function or a string\n\t      if (typeof callback !== \"function\") {\n\t        callback = new Function(\"\" + callback);\n\t      }\n\t      // Copy function arguments\n\t      var args = new Array(arguments.length - 1);\n\t      for (var i = 0; i < args.length; i++) {\n\t          args[i] = arguments[i + 1];\n\t      }\n\t      // Store and register the task\n\t      var task = { callback: callback, args: args };\n\t      tasksByHandle[nextHandle] = task;\n\t      registerImmediate(nextHandle);\n\t      return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t        case 0:\n\t            callback();\n\t            break;\n\t        case 1:\n\t            callback(args[0]);\n\t            break;\n\t        case 2:\n\t            callback(args[0], args[1]);\n\t            break;\n\t        case 3:\n\t            callback(args[0], args[1], args[2]);\n\t            break;\n\t        default:\n\t            callback.apply(undefined, args);\n\t            break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function(handle) {\n\t            process.nextTick(function () { runIfPresent(handle); });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function() {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function(event) {\n\t            if (event.source === global &&\n\t                typeof event.data === \"string\" &&\n\t                event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function(event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(/*! ./../process/browser.js */ 12)))\n\n/***/ }),\n/* 43 */\n/*!*************************************!*\\\n  !*** ./~/util-deprecate/browser.js ***!\n  \\*************************************/\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = deprecate;\n\t\n\t/**\n\t * Mark that a method should not be used.\n\t * Returns a modified function which warns once by default.\n\t *\n\t * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n\t *\n\t * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n\t * will throw an Error when invoked.\n\t *\n\t * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n\t * will invoke `console.trace()` instead of `console.error()`.\n\t *\n\t * @param {Function} fn - the function to deprecate\n\t * @param {String} msg - the string to print to the console when `fn` is invoked\n\t * @returns {Function} a new \"deprecated\" version of `fn`\n\t * @api public\n\t */\n\t\n\tfunction deprecate (fn, msg) {\n\t  if (config('noDeprecation')) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (config('throwDeprecation')) {\n\t        throw new Error(msg);\n\t      } else if (config('traceDeprecation')) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.warn(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t}\n\t\n\t/**\n\t * Checks `localStorage` for boolean values for the given `name`.\n\t *\n\t * @param {String} name\n\t * @returns {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction config (name) {\n\t  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n\t  try {\n\t    if (!global.localStorage) return false;\n\t  } catch (_) {\n\t    return false;\n\t  }\n\t  var val = global.localStorage[name];\n\t  if (null == val) return false;\n\t  return String(val).toLowerCase() === 'true';\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 44 */\n/*!**************************************************************!*\\\n  !*** ./~/stream-http/~/string_decoder/lib/string_decoder.js ***!\n  \\**************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t/*<replacement>*/\n\t\n\tvar Buffer = __webpack_require__(/*! safe-buffer */ 33).Buffer;\n\t/*</replacement>*/\n\t\n\tvar isEncoding = Buffer.isEncoding || function (encoding) {\n\t  encoding = '' + encoding;\n\t  switch (encoding && encoding.toLowerCase()) {\n\t    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t};\n\t\n\tfunction _normalizeEncoding(enc) {\n\t  if (!enc) return 'utf8';\n\t  var retried;\n\t  while (true) {\n\t    switch (enc) {\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return 'utf8';\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return 'utf16le';\n\t      case 'latin1':\n\t      case 'binary':\n\t        return 'latin1';\n\t      case 'base64':\n\t      case 'ascii':\n\t      case 'hex':\n\t        return enc;\n\t      default:\n\t        if (retried) return; // undefined\n\t        enc = ('' + enc).toLowerCase();\n\t        retried = true;\n\t    }\n\t  }\n\t};\n\t\n\t// Do not cache `Buffer.isEncoding` when checking encoding names as some\n\t// modules monkey-patch it to support additional encodings\n\tfunction normalizeEncoding(enc) {\n\t  var nenc = _normalizeEncoding(enc);\n\t  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n\t  return nenc || enc;\n\t}\n\t\n\t// StringDecoder provides an interface for efficiently splitting a series of\n\t// buffers into a series of JS strings without breaking apart multi-byte\n\t// characters.\n\texports.StringDecoder = StringDecoder;\n\tfunction StringDecoder(encoding) {\n\t  this.encoding = normalizeEncoding(encoding);\n\t  var nb;\n\t  switch (this.encoding) {\n\t    case 'utf16le':\n\t      this.text = utf16Text;\n\t      this.end = utf16End;\n\t      nb = 4;\n\t      break;\n\t    case 'utf8':\n\t      this.fillLast = utf8FillLast;\n\t      nb = 4;\n\t      break;\n\t    case 'base64':\n\t      this.text = base64Text;\n\t      this.end = base64End;\n\t      nb = 3;\n\t      break;\n\t    default:\n\t      this.write = simpleWrite;\n\t      this.end = simpleEnd;\n\t      return;\n\t  }\n\t  this.lastNeed = 0;\n\t  this.lastTotal = 0;\n\t  this.lastChar = Buffer.allocUnsafe(nb);\n\t}\n\t\n\tStringDecoder.prototype.write = function (buf) {\n\t  if (buf.length === 0) return '';\n\t  var r;\n\t  var i;\n\t  if (this.lastNeed) {\n\t    r = this.fillLast(buf);\n\t    if (r === undefined) return '';\n\t    i = this.lastNeed;\n\t    this.lastNeed = 0;\n\t  } else {\n\t    i = 0;\n\t  }\n\t  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n\t  return r || '';\n\t};\n\t\n\tStringDecoder.prototype.end = utf8End;\n\t\n\t// Returns only complete characters in a Buffer\n\tStringDecoder.prototype.text = utf8Text;\n\t\n\t// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\n\tStringDecoder.prototype.fillLast = function (buf) {\n\t  if (this.lastNeed <= buf.length) {\n\t    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n\t    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n\t  }\n\t  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n\t  this.lastNeed -= buf.length;\n\t};\n\t\n\t// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n\t// continuation byte. If an invalid byte is detected, -2 is returned.\n\tfunction utf8CheckByte(byte) {\n\t  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n\t  return byte >> 6 === 0x02 ? -1 : -2;\n\t}\n\t\n\t// Checks at most 3 bytes at the end of a Buffer in order to detect an\n\t// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n\t// needed to complete the UTF-8 character (if applicable) are returned.\n\tfunction utf8CheckIncomplete(self, buf, i) {\n\t  var j = buf.length - 1;\n\t  if (j < i) return 0;\n\t  var nb = utf8CheckByte(buf[j]);\n\t  if (nb >= 0) {\n\t    if (nb > 0) self.lastNeed = nb - 1;\n\t    return nb;\n\t  }\n\t  if (--j < i || nb === -2) return 0;\n\t  nb = utf8CheckByte(buf[j]);\n\t  if (nb >= 0) {\n\t    if (nb > 0) self.lastNeed = nb - 2;\n\t    return nb;\n\t  }\n\t  if (--j < i || nb === -2) return 0;\n\t  nb = utf8CheckByte(buf[j]);\n\t  if (nb >= 0) {\n\t    if (nb > 0) {\n\t      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n\t    }\n\t    return nb;\n\t  }\n\t  return 0;\n\t}\n\t\n\t// Validates as many continuation bytes for a multi-byte UTF-8 character as\n\t// needed or are available. If we see a non-continuation byte where we expect\n\t// one, we \"replace\" the validated continuation bytes we've seen so far with\n\t// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n\t// behavior. The continuation byte check is included three times in the case\n\t// where all of the continuation bytes for a character exist in the same buffer.\n\t// It is also done this way as a slight performance increase instead of using a\n\t// loop.\n\tfunction utf8CheckExtraBytes(self, buf, p) {\n\t  if ((buf[0] & 0xC0) !== 0x80) {\n\t    self.lastNeed = 0;\n\t    return '\\ufffd';\n\t  }\n\t  if (self.lastNeed > 1 && buf.length > 1) {\n\t    if ((buf[1] & 0xC0) !== 0x80) {\n\t      self.lastNeed = 1;\n\t      return '\\ufffd';\n\t    }\n\t    if (self.lastNeed > 2 && buf.length > 2) {\n\t      if ((buf[2] & 0xC0) !== 0x80) {\n\t        self.lastNeed = 2;\n\t        return '\\ufffd';\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\n\tfunction utf8FillLast(buf) {\n\t  var p = this.lastTotal - this.lastNeed;\n\t  var r = utf8CheckExtraBytes(this, buf, p);\n\t  if (r !== undefined) return r;\n\t  if (this.lastNeed <= buf.length) {\n\t    buf.copy(this.lastChar, p, 0, this.lastNeed);\n\t    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n\t  }\n\t  buf.copy(this.lastChar, p, 0, buf.length);\n\t  this.lastNeed -= buf.length;\n\t}\n\t\n\t// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n\t// partial character, the character's bytes are buffered until the required\n\t// number of bytes are available.\n\tfunction utf8Text(buf, i) {\n\t  var total = utf8CheckIncomplete(this, buf, i);\n\t  if (!this.lastNeed) return buf.toString('utf8', i);\n\t  this.lastTotal = total;\n\t  var end = buf.length - (total - this.lastNeed);\n\t  buf.copy(this.lastChar, 0, end);\n\t  return buf.toString('utf8', i, end);\n\t}\n\t\n\t// For UTF-8, a replacement character is added when ending on a partial\n\t// character.\n\tfunction utf8End(buf) {\n\t  var r = buf && buf.length ? this.write(buf) : '';\n\t  if (this.lastNeed) return r + '\\ufffd';\n\t  return r;\n\t}\n\t\n\t// UTF-16LE typically needs two bytes per character, but even if we have an even\n\t// number of bytes available, we need to check if we end on a leading/high\n\t// surrogate. In that case, we need to wait for the next two bytes in order to\n\t// decode the last character properly.\n\tfunction utf16Text(buf, i) {\n\t  if ((buf.length - i) % 2 === 0) {\n\t    var r = buf.toString('utf16le', i);\n\t    if (r) {\n\t      var c = r.charCodeAt(r.length - 1);\n\t      if (c >= 0xD800 && c <= 0xDBFF) {\n\t        this.lastNeed = 2;\n\t        this.lastTotal = 4;\n\t        this.lastChar[0] = buf[buf.length - 2];\n\t        this.lastChar[1] = buf[buf.length - 1];\n\t        return r.slice(0, -1);\n\t      }\n\t    }\n\t    return r;\n\t  }\n\t  this.lastNeed = 1;\n\t  this.lastTotal = 2;\n\t  this.lastChar[0] = buf[buf.length - 1];\n\t  return buf.toString('utf16le', i, buf.length - 1);\n\t}\n\t\n\t// For UTF-16LE we do not explicitly append special replacement characters if we\n\t// end on a partial character, we simply let v8 handle that.\n\tfunction utf16End(buf) {\n\t  var r = buf && buf.length ? this.write(buf) : '';\n\t  if (this.lastNeed) {\n\t    var end = this.lastTotal - this.lastNeed;\n\t    return r + this.lastChar.toString('utf16le', 0, end);\n\t  }\n\t  return r;\n\t}\n\t\n\tfunction base64Text(buf, i) {\n\t  var n = (buf.length - i) % 3;\n\t  if (n === 0) return buf.toString('base64', i);\n\t  this.lastNeed = 3 - n;\n\t  this.lastTotal = 3;\n\t  if (n === 1) {\n\t    this.lastChar[0] = buf[buf.length - 1];\n\t  } else {\n\t    this.lastChar[0] = buf[buf.length - 2];\n\t    this.lastChar[1] = buf[buf.length - 1];\n\t  }\n\t  return buf.toString('base64', i, buf.length - n);\n\t}\n\t\n\tfunction base64End(buf) {\n\t  var r = buf && buf.length ? this.write(buf) : '';\n\t  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n\t  return r;\n\t}\n\t\n\t// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\n\tfunction simpleWrite(buf) {\n\t  return buf.toString(this.encoding);\n\t}\n\t\n\tfunction simpleEnd(buf) {\n\t  return buf && buf.length ? this.write(buf) : '';\n\t}\n\n/***/ }),\n/* 45 */\n/*!******************************************************************!*\\\n  !*** ./~/stream-http/~/readable-stream/lib/_stream_transform.js ***!\n  \\******************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a transform stream is a readable/writable stream where you do\n\t// something with the data.  Sometimes it's called a \"filter\",\n\t// but that's not a great name for it, since that implies a thing where\n\t// some bits pass through, and others are simply ignored.  (That would\n\t// be a valid example of a transform, of course.)\n\t//\n\t// While the output is causally related to the input, it's not a\n\t// necessarily symmetric or synchronous transformation.  For example,\n\t// a zlib stream might take multiple plain-text writes(), and then\n\t// emit a single compressed chunk some time in the future.\n\t//\n\t// Here's how this works:\n\t//\n\t// The Transform stream has all the aspects of the readable and writable\n\t// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n\t// internally, and returns false if there's a lot of pending writes\n\t// buffered up.  When you call read(), that calls _read(n) until\n\t// there's enough pending readable data buffered up.\n\t//\n\t// In a transform stream, the written data is placed in a buffer.  When\n\t// _read(n) is called, it transforms the queued up data, calling the\n\t// buffered _write cb's as it consumes chunks.  If consuming a single\n\t// written chunk would result in multiple output chunks, then the first\n\t// outputted bit calls the readcb, and subsequent chunks just go into\n\t// the read buffer, and will cause it to emit 'readable' if necessary.\n\t//\n\t// This way, back-pressure is actually determined by the reading side,\n\t// since _read has to be called to start processing a new chunk.  However,\n\t// a pathological inflate type of transform can cause excessive buffering\n\t// here.  For example, imagine a stream where every byte of input is\n\t// interpreted as an integer from 0-255, and then results in that many\n\t// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n\t// 1kb of data being output.  In this case, you could write a very small\n\t// amount of input, and end up with a very large amount of output.  In\n\t// such a pathological inflating mechanism, there'd be no way to tell\n\t// the system to stop doing the transform.  A single 4MB write could\n\t// cause the system to run out of memory.\n\t//\n\t// However, even in such a pathological case, only a single written chunk\n\t// would be consumed, and then the rest would wait (un-transformed) until\n\t// the results of the previous transformed chunk were consumed.\n\t\n\t'use strict';\n\t\n\tmodule.exports = Transform;\n\t\n\tvar Duplex = __webpack_require__(/*! ./_stream_duplex */ 39);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(/*! core-util-is */ 34);\n\tutil.inherits = __webpack_require__(/*! inherits */ 26);\n\t/*</replacement>*/\n\t\n\tutil.inherits(Transform, Duplex);\n\t\n\tfunction afterTransform(er, data) {\n\t  var ts = this._transformState;\n\t  ts.transforming = false;\n\t\n\t  var cb = ts.writecb;\n\t\n\t  if (!cb) {\n\t    return this.emit('error', new Error('write callback called multiple times'));\n\t  }\n\t\n\t  ts.writechunk = null;\n\t  ts.writecb = null;\n\t\n\t  if (data != null) // single equals check for both `null` and `undefined`\n\t    this.push(data);\n\t\n\t  cb(er);\n\t\n\t  var rs = this._readableState;\n\t  rs.reading = false;\n\t  if (rs.needReadable || rs.length < rs.highWaterMark) {\n\t    this._read(rs.highWaterMark);\n\t  }\n\t}\n\t\n\tfunction Transform(options) {\n\t  if (!(this instanceof Transform)) return new Transform(options);\n\t\n\t  Duplex.call(this, options);\n\t\n\t  this._transformState = {\n\t    afterTransform: afterTransform.bind(this),\n\t    needTransform: false,\n\t    transforming: false,\n\t    writecb: null,\n\t    writechunk: null,\n\t    writeencoding: null\n\t  };\n\t\n\t  // start out asking for a readable event once data is transformed.\n\t  this._readableState.needReadable = true;\n\t\n\t  // we have implemented the _read method, and done the other things\n\t  // that Readable wants before the first _read call, so unset the\n\t  // sync guard flag.\n\t  this._readableState.sync = false;\n\t\n\t  if (options) {\n\t    if (typeof options.transform === 'function') this._transform = options.transform;\n\t\n\t    if (typeof options.flush === 'function') this._flush = options.flush;\n\t  }\n\t\n\t  // When the writable side finishes, then flush out anything remaining.\n\t  this.on('prefinish', prefinish);\n\t}\n\t\n\tfunction prefinish() {\n\t  var _this = this;\n\t\n\t  if (typeof this._flush === 'function') {\n\t    this._flush(function (er, data) {\n\t      done(_this, er, data);\n\t    });\n\t  } else {\n\t    done(this, null, null);\n\t  }\n\t}\n\t\n\tTransform.prototype.push = function (chunk, encoding) {\n\t  this._transformState.needTransform = false;\n\t  return Duplex.prototype.push.call(this, chunk, encoding);\n\t};\n\t\n\t// This is the part where you do stuff!\n\t// override this function in implementation classes.\n\t// 'chunk' is an input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed output\n\t// to the readable side.  You may call 'push' zero or more times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If you pass\n\t// an error, then that'll put the hurt on the whole operation.  If you\n\t// never call cb(), then you'll never get another chunk.\n\tTransform.prototype._transform = function (chunk, encoding, cb) {\n\t  throw new Error('_transform() is not implemented');\n\t};\n\t\n\tTransform.prototype._write = function (chunk, encoding, cb) {\n\t  var ts = this._transformState;\n\t  ts.writecb = cb;\n\t  ts.writechunk = chunk;\n\t  ts.writeencoding = encoding;\n\t  if (!ts.transforming) {\n\t    var rs = this._readableState;\n\t    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n\t  }\n\t};\n\t\n\t// Doesn't matter what the args are here.\n\t// _transform does all the work.\n\t// That we got here means that the readable side wants more data.\n\tTransform.prototype._read = function (n) {\n\t  var ts = this._transformState;\n\t\n\t  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n\t    ts.transforming = true;\n\t    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n\t  } else {\n\t    // mark that we need a transform, so that any data that comes in\n\t    // will get processed, now that we've asked for it.\n\t    ts.needTransform = true;\n\t  }\n\t};\n\t\n\tTransform.prototype._destroy = function (err, cb) {\n\t  var _this2 = this;\n\t\n\t  Duplex.prototype._destroy.call(this, err, function (err2) {\n\t    cb(err2);\n\t    _this2.emit('close');\n\t  });\n\t};\n\t\n\tfunction done(stream, er, data) {\n\t  if (er) return stream.emit('error', er);\n\t\n\t  if (data != null) // single equals check for both `null` and `undefined`\n\t    stream.push(data);\n\t\n\t  // if there's nothing in the write buffer, then that means\n\t  // that nothing more will ever be provided\n\t  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\t\n\t  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\t\n\t  return stream.push(null);\n\t}\n\n/***/ }),\n/* 46 */\n/*!********************************************************************!*\\\n  !*** ./~/stream-http/~/readable-stream/lib/_stream_passthrough.js ***!\n  \\********************************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a passthrough stream.\n\t// basically just the most minimal sort of Transform stream.\n\t// Every written chunk gets output as-is.\n\t\n\t'use strict';\n\t\n\tmodule.exports = PassThrough;\n\t\n\tvar Transform = __webpack_require__(/*! ./_stream_transform */ 45);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(/*! core-util-is */ 34);\n\tutil.inherits = __webpack_require__(/*! inherits */ 26);\n\t/*</replacement>*/\n\t\n\tutil.inherits(PassThrough, Transform);\n\t\n\tfunction PassThrough(options) {\n\t  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\t\n\t  Transform.call(this, options);\n\t}\n\t\n\tPassThrough.prototype._transform = function (chunk, encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n/***/ }),\n/* 47 */\n/*!***********************************!*\\\n  !*** ./~/to-arraybuffer/index.js ***!\n  \\***********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Buffer = __webpack_require__(/*! buffer */ 8).Buffer\n\t\n\tmodule.exports = function (buf) {\n\t\t// If the buffer is backed by a Uint8Array, a faster version will work\n\t\tif (buf instanceof Uint8Array) {\n\t\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\t\treturn buf.buffer\n\t\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t\t// Otherwise we need to get a proper copy\n\t\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t\t}\n\t\t}\n\t\n\t\tif (Buffer.isBuffer(buf)) {\n\t\t\t// This is the slow version that will work with any Buffer\n\t\t\t// implementation (even in old browsers)\n\t\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\t\tvar len = buf.length\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tarrayCopy[i] = buf[i]\n\t\t\t}\n\t\t\treturn arrayCopy.buffer\n\t\t} else {\n\t\t\tthrow new Error('Argument must be a Buffer')\n\t\t}\n\t}\n\n\n/***/ }),\n/* 48 */\n/*!******************************!*\\\n  !*** ./~/xtend/immutable.js ***!\n  \\******************************/\n/***/ (function(module, exports) {\n\n\tmodule.exports = extend\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tfunction extend() {\n\t    var target = {}\n\t\n\t    for (var i = 0; i < arguments.length; i++) {\n\t        var source = arguments[i]\n\t\n\t        for (var key in source) {\n\t            if (hasOwnProperty.call(source, key)) {\n\t                target[key] = source[key]\n\t            }\n\t        }\n\t    }\n\t\n\t    return target\n\t}\n\n\n/***/ }),\n/* 49 */\n/*!*******************************************!*\\\n  !*** ./~/builtin-status-codes/browser.js ***!\n  \\*******************************************/\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t  \"100\": \"Continue\",\n\t  \"101\": \"Switching Protocols\",\n\t  \"102\": \"Processing\",\n\t  \"200\": \"OK\",\n\t  \"201\": \"Created\",\n\t  \"202\": \"Accepted\",\n\t  \"203\": \"Non-Authoritative Information\",\n\t  \"204\": \"No Content\",\n\t  \"205\": \"Reset Content\",\n\t  \"206\": \"Partial Content\",\n\t  \"207\": \"Multi-Status\",\n\t  \"208\": \"Already Reported\",\n\t  \"226\": \"IM Used\",\n\t  \"300\": \"Multiple Choices\",\n\t  \"301\": \"Moved Permanently\",\n\t  \"302\": \"Found\",\n\t  \"303\": \"See Other\",\n\t  \"304\": \"Not Modified\",\n\t  \"305\": \"Use Proxy\",\n\t  \"307\": \"Temporary Redirect\",\n\t  \"308\": \"Permanent Redirect\",\n\t  \"400\": \"Bad Request\",\n\t  \"401\": \"Unauthorized\",\n\t  \"402\": \"Payment Required\",\n\t  \"403\": \"Forbidden\",\n\t  \"404\": \"Not Found\",\n\t  \"405\": \"Method Not Allowed\",\n\t  \"406\": \"Not Acceptable\",\n\t  \"407\": \"Proxy Authentication Required\",\n\t  \"408\": \"Request Timeout\",\n\t  \"409\": \"Conflict\",\n\t  \"410\": \"Gone\",\n\t  \"411\": \"Length Required\",\n\t  \"412\": \"Precondition Failed\",\n\t  \"413\": \"Payload Too Large\",\n\t  \"414\": \"URI Too Long\",\n\t  \"415\": \"Unsupported Media Type\",\n\t  \"416\": \"Range Not Satisfiable\",\n\t  \"417\": \"Expectation Failed\",\n\t  \"418\": \"I'm a teapot\",\n\t  \"421\": \"Misdirected Request\",\n\t  \"422\": \"Unprocessable Entity\",\n\t  \"423\": \"Locked\",\n\t  \"424\": \"Failed Dependency\",\n\t  \"425\": \"Unordered Collection\",\n\t  \"426\": \"Upgrade Required\",\n\t  \"428\": \"Precondition Required\",\n\t  \"429\": \"Too Many Requests\",\n\t  \"431\": \"Request Header Fields Too Large\",\n\t  \"451\": \"Unavailable For Legal Reasons\",\n\t  \"500\": \"Internal Server Error\",\n\t  \"501\": \"Not Implemented\",\n\t  \"502\": \"Bad Gateway\",\n\t  \"503\": \"Service Unavailable\",\n\t  \"504\": \"Gateway Timeout\",\n\t  \"505\": \"HTTP Version Not Supported\",\n\t  \"506\": \"Variant Also Negotiates\",\n\t  \"507\": \"Insufficient Storage\",\n\t  \"508\": \"Loop Detected\",\n\t  \"509\": \"Bandwidth Limit Exceeded\",\n\t  \"510\": \"Not Extended\",\n\t  \"511\": \"Network Authentication Required\"\n\t}\n\n\n/***/ }),\n/* 50 */\n/*!*************************************!*\\\n  !*** ./~/https-browserify/index.js ***!\n  \\*************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar http = __webpack_require__(/*! http */ 23);\n\t\n\tvar https = module.exports;\n\t\n\tfor (var key in http) {\n\t    if (http.hasOwnProperty(key)) https[key] = http[key];\n\t};\n\t\n\thttps.request = function (params, cb) {\n\t    if (!params) params = {};\n\t    params.scheme = 'https';\n\t    params.protocol = 'https:';\n\t    return http.request.call(this, params, cb);\n\t}\n\n\n/***/ }),\n/* 51 */\n/*!********************!*\\\n  !*** fs (ignored) ***!\n  \\********************/\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 52 */\n/*!*************************!*\\\n  !*** ./src/Asteroid.js ***!\n  \\*************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _fabric = __webpack_require__(/*! fabric */ 7);\n\t\n\tvar _shapes = __webpack_require__(/*! ./shapes */ 53);\n\t\n\tvar shapes = _interopRequireWildcard(_shapes);\n\t\n\tvar _utils = __webpack_require__(/*! ./utils */ 54);\n\t\n\tvar utils = _interopRequireWildcard(_utils);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Asteroid = function () {\n\t    function Asteroid(_ref, canvas) {\n\t        var id = _ref.id,\n\t            x = _ref.x,\n\t            y = _ref.y,\n\t            r = _ref.r;\n\t\n\t        _classCallCheck(this, Asteroid);\n\t\n\t        this.roid = new _fabric.fabric.Polygon(shapes.asteroid(r), {\n\t            left: x,\n\t            top: y,\n\t            fill: 'black',\n\t            stroke: 'white',\n\t            selectable: false,\n\t            originX: 'center',\n\t            originY: 'center'\n\t        });\n\t\n\t        this.id = id;\n\t        this.canvas = canvas;\n\t        this.canvas.add(this.roid);\n\t    }\n\t\n\t    _createClass(Asteroid, [{\n\t        key: 'update',\n\t        value: function update(_ref2, duration) {\n\t            var x = _ref2.x,\n\t                y = _ref2.y;\n\t\n\t            var animation = {\n\t                left: x,\n\t                top: y,\n\t                angle: '+=' + duration / 20\n\t\n\t                //let textAnimation = { left: this.roid.left - 15, top: this.roid.top - 25 }\n\t            };var animationSettings = { duration: duration, easing: utils.easing.linear };\n\t\n\t            if (Math.abs(this.roid.left - x) > 100) {\n\t                this.roid.set('left', x);\n\t                //this.text.set('left', x)\n\t            }\n\t            if (Math.abs(this.top - y) > 100) {\n\t                this.roid.set('top', y);\n\t                //this.text.set('top', y)\n\t            }\n\t            this.roid.animate(animation, animationSettings);\n\t        }\n\t    }, {\n\t        key: 'remove',\n\t        value: function remove() {\n\t            this.canvas.remove(this.roid);\n\t            //this.canvas.remove(this.text)\n\t        }\n\t    }]);\n\t\n\t    return Asteroid;\n\t}();\n\t\n\texports.default = Asteroid;\n\n/***/ }),\n/* 53 */\n/*!***********************!*\\\n  !*** ./src/shapes.js ***!\n  \\***********************/\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar scale = function scale(value, radius) {\n\t    return value / 10 * radius;\n\t};\n\t\n\tvar asteroid = exports.asteroid = function asteroid(radius) {\n\t    return [{ x: scale(-10, radius), y: scale(0, radius) }, { x: scale(-5, radius), y: scale(7, radius) }, { x: scale(-3, radius), y: scale(4, radius) }, { x: scale(1, radius), y: scale(10, radius) }, { x: scale(5, radius), y: scale(4, radius) }, { x: scale(10, radius), y: scale(0, radius) }, { x: scale(5, radius), y: scale(-6, radius) }, { x: scale(2, radius), y: scale(-10, radius) }, { x: scale(-4, radius), y: scale(-10, radius) }, { x: scale(-4, radius), y: scale(-5, radius) }];\n\t};\n\t\n\tvar ship = exports.ship = function ship(radius) {\n\t    return [{ x: scale(-5, radius), y: scale(4, radius) }, { x: scale(0, radius), y: scale(-12, radius) }, { x: scale(5, radius), y: scale(4, radius) }];\n\t};\n\n/***/ }),\n/* 54 */\n/*!**********************!*\\\n  !*** ./src/utils.js ***!\n  \\**********************/\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar easing = exports.easing = {\n\t    linear: function linear(t, b, c, d) {\n\t        return c * t / d + b;\n\t    }\n\t};\n\n/***/ }),\n/* 55 */\n/*!*********************!*\\\n  !*** ./src/Ship.js ***!\n  \\*********************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _fabric = __webpack_require__(/*! fabric */ 7);\n\t\n\tvar _shapes = __webpack_require__(/*! ./shapes */ 53);\n\t\n\tvar shapes = _interopRequireWildcard(_shapes);\n\t\n\tvar _utils = __webpack_require__(/*! ./utils */ 54);\n\t\n\tvar utils = _interopRequireWildcard(_utils);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Ship = function () {\n\t    function Ship(_ref, canvas) {\n\t        var id = _ref.id,\n\t            x = _ref.x,\n\t            y = _ref.y,\n\t            r = _ref.r,\n\t            colour = _ref.colour;\n\t\n\t        _classCallCheck(this, Ship);\n\t\n\t        this.ship = new _fabric.fabric.Polygon(shapes.ship(r), {\n\t            left: x,\n\t            top: y,\n\t            fill: 'transparent',\n\t            stroke: _fabric.fabric.Color.fromHex(colour).toRgb(),\n\t            selectable: false,\n\t            originX: 'center',\n\t            originY: 'center'\n\t        });\n\t\n\t        this.text = new _fabric.fabric.Text(id + '', {\n\t            fontFamily: 'Source Code Pro,Courier New',\n\t            left: x,\n\t            top: y + r,\n\t            fontSize: 16,\n\t            fill: _fabric.fabric.Color.fromHex(colour).toRgb(),\n\t            originX: 'center',\n\t            originY: 'top'\n\t        });\n\t\n\t        this.id = id;\n\t\n\t        canvas.add(this.ship);\n\t        canvas.add(this.text);\n\t    }\n\t\n\t    _createClass(Ship, [{\n\t        key: 'update',\n\t        value: function update(_ref2, duration) {\n\t            var x = _ref2.x,\n\t                y = _ref2.y,\n\t                r = _ref2.r,\n\t                angle = _ref2.angle;\n\t\n\t            this.ship.set('angle', angle);\n\t            this.ship.set('left', x);\n\t            this.ship.set('top', y);\n\t            this.text.set('left', x);\n\t            this.text.set('top', y + r);\n\t            var animation = { angle: Math.abs(angle) };\n\t            var animationSettings = { duration: duration, easing: utils.easing.linear };\n\t\n\t            this.ship.animate(animation, animationSettings);\n\t        }\n\t    }]);\n\t\n\t    return Ship;\n\t}();\n\t\n\texports.default = Ship;\n\n/***/ }),\n/* 56 */\n/*!**************************!*\\\n  !*** ./src/Explosion.js ***!\n  \\**************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Explosion;\n\t\n\tvar _fabric = __webpack_require__(/*! fabric */ 7);\n\t\n\tvar _shapes = __webpack_require__(/*! ./shapes */ 53);\n\t\n\tvar shapes = _interopRequireWildcard(_shapes);\n\t\n\tvar _utils = __webpack_require__(/*! ./utils */ 54);\n\t\n\tvar utils = _interopRequireWildcard(_utils);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Explosion(_ref, canvas) {\n\t  var x = _ref.x,\n\t      y = _ref.y;\n\t\n\t  var lines = [];\n\t  for (var i = 0; i < 50; i++) {\n\t    // var x1 = Math.cos(rad)// * Math.random()\n\t    // var y1 = Math.sin(rad)// * Math.random()\n\t    var line = new _fabric.fabric.Line([-5, -5, 5, 5], {\n\t      left: x,\n\t      top: y,\n\t      fill: 'transparent',\n\t      stroke: 'yellow',\n\t      selectable: false,\n\t      originX: 'left',\n\t      originY: 'top',\n\t      angle: 360 * Math.random()\n\t    });\n\t    canvas.add(line);\n\t    lines.push(line);\n\t  }\n\t\n\t  lines.forEach(function (line) {\n\t    line.animate({\n\t      left: line.get('left') + 80 * Math.random() * Math.cos(line.get('angle') * Math.PI / 180),\n\t      top: line.get('top') + 80 * Math.random() * Math.sin(line.get('angle') * Math.PI / 180)\n\t      //angle: 720 * (Math.random() - 0.5)\n\t    }, {\n\t      duration: 500,\n\t      easing: utils.easing.linear,\n\t      onComplete: function onComplete() {\n\t        return canvas.remove(line);\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ }),\n/* 57 */\n/*!***********************!*\\\n  !*** ./src/Bullet.js ***!\n  \\***********************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _fabric = __webpack_require__(/*! fabric */ 7);\n\t\n\tvar _shapes = __webpack_require__(/*! ./shapes */ 53);\n\t\n\tvar shapes = _interopRequireWildcard(_shapes);\n\t\n\tvar _utils = __webpack_require__(/*! ./utils */ 54);\n\t\n\tvar utils = _interopRequireWildcard(_utils);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Bullet = function () {\n\t    function Bullet(_ref, canvas) {\n\t        var id = _ref.id,\n\t            x = _ref.x,\n\t            y = _ref.y;\n\t\n\t        _classCallCheck(this, Bullet);\n\t\n\t        var bullet = new _fabric.fabric.Circle({\n\t            radius: 1.2,\n\t            left: x,\n\t            top: y,\n\t            fill: '#7DF9FF',\n\t            stroke: '#FFFFFF',\n\t            selectable: false,\n\t            originX: 'left',\n\t            originY: 'top',\n\t            opacity: 0.9\n\t        });\n\t\n\t        canvas.add(bullet);\n\t        this.canvas = canvas;\n\t        this.id = id;\n\t        this.bullet = bullet;\n\t    }\n\t\n\t    _createClass(Bullet, [{\n\t        key: 'update',\n\t        value: function update(_ref2) {\n\t            var x = _ref2.x,\n\t                y = _ref2.y;\n\t            var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n\t\n\t            var animation = {\n\t                left: x,\n\t                top: y,\n\t                opacity: 0.1\n\t            };\n\t\n\t            var animationSettings = { duration: duration, easing: utils.easing.linear };\n\t\n\t            if (Math.abs(this.bullet.left - x) > 100) {\n\t                this.bullet.set('left', x);\n\t            }\n\t            if (Math.abs(this.bullet.top - y) > 100) {\n\t                this.bullet.set('top', y);\n\t            }\n\t            this.bullet.animate(animation, animationSettings);\n\t        }\n\t    }, {\n\t        key: 'remove',\n\t        value: function remove() {\n\t            var self = this;\n\t            setTimeout(function () {\n\t                self.canvas.remove(self.bullet);\n\t            }, 50);\n\t        }\n\t    }]);\n\t\n\t    return Bullet;\n\t}();\n\t\n\texports.default = Bullet;\n\n/***/ }),\n/* 58 */\n/*!***************************!*\\\n  !*** ./src/FpsCounter.js ***!\n  \\***************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _fabric = __webpack_require__(/*! fabric */ 7);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FpsCounter = function () {\n\t    function FpsCounter(canvas) {\n\t        _classCallCheck(this, FpsCounter);\n\t\n\t        this.text = new _fabric.fabric.Text('FPS: 0', {\n\t            fontFamily: 'Source Code Pro,Arial,Sans',\n\t            fontSize: 12,\n\t            fill: '#410000',\n\t            fontWeight: 'bold',\n\t            left: 5,\n\t            top: 5,\n\t            selectable: false\n\t        });\n\t\n\t        canvas.add(this.text);\n\t\n\t        this.frames = 0;\n\t        this.startTime = Date.now();\n\t        this.prevTime = this.startTime;\n\t    }\n\t\n\t    _createClass(FpsCounter, [{\n\t        key: 'update',\n\t        value: function update() {\n\t            var time = Date.now();\n\t            this.frames++;\n\t\n\t            if (time > this.prevTime + 1000) {\n\t                var fps = Math.round(this.frames * 1000 / (time - this.prevTime));\n\t                this.prevTime = time;\n\t                this.frames = 0;\n\t\n\t                if (fps < 50) {\n\t                    this.text.setText(\"FPS: \" + fps);\n\t                } else {\n\t                    this.text.setText(\"\");\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return FpsCounter;\n\t}();\n\t\n\texports.default = FpsCounter;\n\n/***/ }),\n/* 59 */\n/*!*******************************!*\\\n  !*** ./src/transformFrame.js ***!\n  \\*******************************/\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = transformFrame;\n\tfunction transformFrame(frame, ratio, serverDimmensions) {\n\t    var transformAsteroid = function transformAsteroid(_ref) {\n\t        var _ref2 = _slicedToArray(_ref, 4),\n\t            id = _ref2[0],\n\t            x = _ref2[1],\n\t            y = _ref2[2],\n\t            r = _ref2[3];\n\t\n\t        return {\n\t            id: id,\n\t            x: x / ratio.WIDTH,\n\t            y: (serverDimmensions.HEIGHT - y) / ratio.HEIGHT,\n\t            r: r / ratio.WIDTH\n\t        };\n\t    };\n\t\n\t    var transformShip = function transformShip(_ref3) {\n\t        var _ref4 = _slicedToArray(_ref3, 6),\n\t            id = _ref4[0],\n\t            x = _ref4[1],\n\t            y = _ref4[2],\n\t            r = _ref4[3],\n\t            angle = _ref4[4],\n\t            colour = _ref4[5];\n\t\n\t        return {\n\t            id: id,\n\t            x: x / ratio.WIDTH,\n\t            y: (serverDimmensions.HEIGHT - y) / ratio.HEIGHT,\n\t            r: r / ratio.WIDTH,\n\t            angle: 360 - angle * (180 / Math.PI) + 90, // server measures angles conuterclockwise starting from 12 o'clock\n\t            colour: colour\n\t        };\n\t    };\n\t\n\t    var transformExplosion = function transformExplosion(_ref5) {\n\t        var _ref6 = _slicedToArray(_ref5, 2),\n\t            x = _ref6[0],\n\t            y = _ref6[1];\n\t\n\t        return {\n\t            x: x / ratio.WIDTH,\n\t            y: (serverDimmensions.HEIGHT - y) / ratio.HEIGHT\n\t        };\n\t    };\n\t\n\t    var transformBullet = function transformBullet(_ref7) {\n\t        var _ref8 = _slicedToArray(_ref7, 3),\n\t            id = _ref8[0],\n\t            x = _ref8[1],\n\t            y = _ref8[2];\n\t\n\t        return {\n\t            id: id,\n\t            x: x / ratio.WIDTH,\n\t            y: (serverDimmensions.HEIGHT - y) / ratio.HEIGHT\n\t        };\n\t    };\n\t\n\t    return {\n\t        asteroids: frame.a.map(function (a) {\n\t            return transformAsteroid(a);\n\t        }),\n\t        ships: frame.s.map(function (s) {\n\t            return transformShip(s);\n\t        }),\n\t        explosions: frame.x.map(function (x) {\n\t            return transformExplosion(x);\n\t        }),\n\t        bullets: frame.b.map(function (b) {\n\t            return transformBullet(b);\n\t        })\n\t    };\n\t}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \tvar parentHotUpdateCallback = this[\"webpackHotUpdate\"];\n \tthis[\"webpackHotUpdate\"] = \r\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n \t\thotAddUpdateChunk(chunkId, moreModules);\r\n \t\tif(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\r\n \t}\r\n \t\r\n \tfunction hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars\r\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\r\n \t\tvar script = document.createElement(\"script\");\r\n \t\tscript.type = \"text/javascript\";\r\n \t\tscript.charset = \"utf-8\";\r\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\r\n \t\thead.appendChild(script);\r\n \t}\r\n \t\r\n \tfunction hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars\r\n \t\tif(typeof XMLHttpRequest === \"undefined\")\r\n \t\t\treturn callback(new Error(\"No browser support\"));\r\n \t\ttry {\r\n \t\t\tvar request = new XMLHttpRequest();\r\n \t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\r\n \t\t\trequest.open(\"GET\", requestPath, true);\r\n \t\t\trequest.timeout = 10000;\r\n \t\t\trequest.send(null);\r\n \t\t} catch(err) {\r\n \t\t\treturn callback(err);\r\n \t\t}\r\n \t\trequest.onreadystatechange = function() {\r\n \t\t\tif(request.readyState !== 4) return;\r\n \t\t\tif(request.status === 0) {\r\n \t\t\t\t// timeout\r\n \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" timed out.\"));\r\n \t\t\t} else if(request.status === 404) {\r\n \t\t\t\t// no update available\r\n \t\t\t\tcallback();\r\n \t\t\t} else if(request.status !== 200 && request.status !== 304) {\r\n \t\t\t\t// other failure\r\n \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\r\n \t\t\t} else {\r\n \t\t\t\t// success\r\n \t\t\t\ttry {\r\n \t\t\t\t\tvar update = JSON.parse(request.responseText);\r\n \t\t\t\t} catch(e) {\r\n \t\t\t\t\tcallback(e);\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n \t\t\t\tcallback(null, update);\r\n \t\t\t}\r\n \t\t};\r\n \t}\r\n\n \t\r\n \t\r\n \t// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js\r\n \tvar canDefineProperty = false;\r\n \ttry {\r\n \t\tObject.defineProperty({}, \"x\", {\r\n \t\t\tget: function() {}\r\n \t\t});\r\n \t\tcanDefineProperty = true;\r\n \t} catch(x) {\r\n \t\t// IE will fail on defineProperty\r\n \t}\r\n \t\r\n \tvar hotApplyOnUpdate = true;\r\n \tvar hotCurrentHash = \"65a9751e8ae7ff05771b\"; // eslint-disable-line no-unused-vars\r\n \tvar hotCurrentModuleData = {};\r\n \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\r\n \t\r\n \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar me = installedModules[moduleId];\r\n \t\tif(!me) return __webpack_require__;\r\n \t\tvar fn = function(request) {\r\n \t\t\tif(me.hot.active) {\r\n \t\t\t\tif(installedModules[request]) {\r\n \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\r\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\r\n \t\t\t\t\tif(me.children.indexOf(request) < 0)\r\n \t\t\t\t\t\tme.children.push(request);\r\n \t\t\t\t} else hotCurrentParents = [moduleId];\r\n \t\t\t} else {\r\n \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\r\n \t\t\t\thotCurrentParents = [];\r\n \t\t\t}\r\n \t\t\treturn __webpack_require__(request);\r\n \t\t};\r\n \t\tfor(var name in __webpack_require__) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {\r\n \t\t\t\tif(canDefineProperty) {\r\n \t\t\t\t\tObject.defineProperty(fn, name, (function(name) {\r\n \t\t\t\t\t\treturn {\r\n \t\t\t\t\t\t\tconfigurable: true,\r\n \t\t\t\t\t\t\tenumerable: true,\r\n \t\t\t\t\t\t\tget: function() {\r\n \t\t\t\t\t\t\t\treturn __webpack_require__[name];\r\n \t\t\t\t\t\t\t},\r\n \t\t\t\t\t\t\tset: function(value) {\r\n \t\t\t\t\t\t\t\t__webpack_require__[name] = value;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t};\r\n \t\t\t\t\t}(name)));\r\n \t\t\t\t} else {\r\n \t\t\t\t\tfn[name] = __webpack_require__[name];\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\tfunction ensure(chunkId, callback) {\r\n \t\t\tif(hotStatus === \"ready\")\r\n \t\t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotChunksLoading++;\r\n \t\t\t__webpack_require__.e(chunkId, function() {\r\n \t\t\t\ttry {\r\n \t\t\t\t\tcallback.call(null, fn);\r\n \t\t\t\t} finally {\r\n \t\t\t\t\tfinishChunkLoading();\r\n \t\t\t\t}\r\n \t\r\n \t\t\t\tfunction finishChunkLoading() {\r\n \t\t\t\t\thotChunksLoading--;\r\n \t\t\t\t\tif(hotStatus === \"prepare\") {\r\n \t\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\r\n \t\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\t\t\t\thotUpdateDownloaded();\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t});\r\n \t\t}\r\n \t\tif(canDefineProperty) {\r\n \t\t\tObject.defineProperty(fn, \"e\", {\r\n \t\t\t\tenumerable: true,\r\n \t\t\t\tvalue: ensure\r\n \t\t\t});\r\n \t\t} else {\r\n \t\t\tfn.e = ensure;\r\n \t\t}\r\n \t\treturn fn;\r\n \t}\r\n \t\r\n \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar hot = {\r\n \t\t\t// private stuff\r\n \t\t\t_acceptedDependencies: {},\r\n \t\t\t_declinedDependencies: {},\r\n \t\t\t_selfAccepted: false,\r\n \t\t\t_selfDeclined: false,\r\n \t\t\t_disposeHandlers: [],\r\n \t\r\n \t\t\t// Module API\r\n \t\t\tactive: true,\r\n \t\t\taccept: function(dep, callback) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfAccepted = true;\r\n \t\t\t\telse if(typeof dep === \"function\")\r\n \t\t\t\t\thot._selfAccepted = dep;\r\n \t\t\t\telse if(typeof dep === \"object\")\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback;\r\n \t\t\t\telse\r\n \t\t\t\t\thot._acceptedDependencies[dep] = callback;\r\n \t\t\t},\r\n \t\t\tdecline: function(dep) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfDeclined = true;\r\n \t\t\t\telse if(typeof dep === \"number\")\r\n \t\t\t\t\thot._declinedDependencies[dep] = true;\r\n \t\t\t\telse\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\r\n \t\t\t},\r\n \t\t\tdispose: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\taddDisposeHandler: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\tremoveDisposeHandler: function(callback) {\r\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\r\n \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t// Management API\r\n \t\t\tcheck: hotCheck,\r\n \t\t\tapply: hotApply,\r\n \t\t\tstatus: function(l) {\r\n \t\t\t\tif(!l) return hotStatus;\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\taddStatusHandler: function(l) {\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\tremoveStatusHandler: function(l) {\r\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\r\n \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t//inherit from previous dispose call\r\n \t\t\tdata: hotCurrentModuleData[moduleId]\r\n \t\t};\r\n \t\treturn hot;\r\n \t}\r\n \t\r\n \tvar hotStatusHandlers = [];\r\n \tvar hotStatus = \"idle\";\r\n \t\r\n \tfunction hotSetStatus(newStatus) {\r\n \t\thotStatus = newStatus;\r\n \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\r\n \t\t\thotStatusHandlers[i].call(null, newStatus);\r\n \t}\r\n \t\r\n \t// while downloading\r\n \tvar hotWaitingFiles = 0;\r\n \tvar hotChunksLoading = 0;\r\n \tvar hotWaitingFilesMap = {};\r\n \tvar hotRequestedFilesMap = {};\r\n \tvar hotAvailibleFilesMap = {};\r\n \tvar hotCallback;\r\n \t\r\n \t// The update info\r\n \tvar hotUpdate, hotUpdateNewHash;\r\n \t\r\n \tfunction toModuleId(id) {\r\n \t\tvar isNumber = (+id) + \"\" === id;\r\n \t\treturn isNumber ? +id : id;\r\n \t}\r\n \t\r\n \tfunction hotCheck(apply, callback) {\r\n \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\r\n \t\tif(typeof apply === \"function\") {\r\n \t\t\thotApplyOnUpdate = false;\r\n \t\t\tcallback = apply;\r\n \t\t} else {\r\n \t\t\thotApplyOnUpdate = apply;\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\thotSetStatus(\"check\");\r\n \t\thotDownloadManifest(function(err, update) {\r\n \t\t\tif(err) return callback(err);\r\n \t\t\tif(!update) {\r\n \t\t\t\thotSetStatus(\"idle\");\r\n \t\t\t\tcallback(null, null);\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n \t\r\n \t\t\thotRequestedFilesMap = {};\r\n \t\t\thotAvailibleFilesMap = {};\r\n \t\t\thotWaitingFilesMap = {};\r\n \t\t\tfor(var i = 0; i < update.c.length; i++)\r\n \t\t\t\thotAvailibleFilesMap[update.c[i]] = true;\r\n \t\t\thotUpdateNewHash = update.h;\r\n \t\r\n \t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotCallback = callback;\r\n \t\t\thotUpdate = {};\r\n \t\t\tvar chunkId = 0;\r\n \t\t\t{ // eslint-disable-line no-lone-blocks\r\n \t\t\t\t/*globals chunkId */\r\n \t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t}\r\n \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\thotUpdateDownloaded();\r\n \t\t\t}\r\n \t\t});\r\n \t}\r\n \t\r\n \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n \t\tif(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\r\n \t\t\treturn;\r\n \t\thotRequestedFilesMap[chunkId] = false;\r\n \t\tfor(var moduleId in moreModules) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\r\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\r\n \t\t\thotUpdateDownloaded();\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotEnsureUpdateChunk(chunkId) {\r\n \t\tif(!hotAvailibleFilesMap[chunkId]) {\r\n \t\t\thotWaitingFilesMap[chunkId] = true;\r\n \t\t} else {\r\n \t\t\thotRequestedFilesMap[chunkId] = true;\r\n \t\t\thotWaitingFiles++;\r\n \t\t\thotDownloadUpdateChunk(chunkId);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotUpdateDownloaded() {\r\n \t\thotSetStatus(\"ready\");\r\n \t\tvar callback = hotCallback;\r\n \t\thotCallback = null;\r\n \t\tif(!callback) return;\r\n \t\tif(hotApplyOnUpdate) {\r\n \t\t\thotApply(hotApplyOnUpdate, callback);\r\n \t\t} else {\r\n \t\t\tvar outdatedModules = [];\r\n \t\t\tfor(var id in hotUpdate) {\r\n \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tcallback(null, outdatedModules);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotApply(options, callback) {\r\n \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\r\n \t\tif(typeof options === \"function\") {\r\n \t\t\tcallback = options;\r\n \t\t\toptions = {};\r\n \t\t} else if(options && typeof options === \"object\") {\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t} else {\r\n \t\t\toptions = {};\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\r\n \t\tfunction getAffectedStuff(module) {\r\n \t\t\tvar outdatedModules = [module];\r\n \t\t\tvar outdatedDependencies = {};\r\n \t\r\n \t\t\tvar queue = outdatedModules.slice();\r\n \t\t\twhile(queue.length > 0) {\r\n \t\t\t\tvar moduleId = queue.pop();\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tif(!module || module.hot._selfAccepted)\r\n \t\t\t\t\tcontinue;\r\n \t\t\t\tif(module.hot._selfDeclined) {\r\n \t\t\t\t\treturn new Error(\"Aborted because of self decline: \" + moduleId);\r\n \t\t\t\t}\r\n \t\t\t\tif(moduleId === 0) {\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\r\n \t\t\t\t\tvar parentId = module.parents[i];\r\n \t\t\t\t\tvar parent = installedModules[parentId];\r\n \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\r\n \t\t\t\t\t\treturn new Error(\"Aborted because of declined dependency: \" + moduleId + \" in \" + parentId);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\r\n \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[parentId])\r\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tdelete outdatedDependencies[parentId];\r\n \t\t\t\t\toutdatedModules.push(parentId);\r\n \t\t\t\t\tqueue.push(parentId);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\r\n \t\t\treturn [outdatedModules, outdatedDependencies];\r\n \t\t}\r\n \t\r\n \t\tfunction addAllToSet(a, b) {\r\n \t\t\tfor(var i = 0; i < b.length; i++) {\r\n \t\t\t\tvar item = b[i];\r\n \t\t\t\tif(a.indexOf(item) < 0)\r\n \t\t\t\t\ta.push(item);\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// at begin all updates modules are outdated\r\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\r\n \t\tvar outdatedDependencies = {};\r\n \t\tvar outdatedModules = [];\r\n \t\tvar appliedUpdate = {};\r\n \t\tfor(var id in hotUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\tvar moduleId = toModuleId(id);\r\n \t\t\t\tvar result = getAffectedStuff(moduleId);\r\n \t\t\t\tif(!result) {\r\n \t\t\t\t\tif(options.ignoreUnaccepted)\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(new Error(\"Aborted because \" + moduleId + \" is not accepted\"));\r\n \t\t\t\t}\r\n \t\t\t\tif(result instanceof Error) {\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(result);\r\n \t\t\t\t}\r\n \t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\r\n \t\t\t\taddAllToSet(outdatedModules, result[0]);\r\n \t\t\t\tfor(var moduleId in result[1]) {\r\n \t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[moduleId])\r\n \t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Store self accepted outdated modules to require them later by the module system\r\n \t\tvar outdatedSelfAcceptedModules = [];\r\n \t\tfor(var i = 0; i < outdatedModules.length; i++) {\r\n \t\t\tvar moduleId = outdatedModules[i];\r\n \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\r\n \t\t\t\toutdatedSelfAcceptedModules.push({\r\n \t\t\t\t\tmodule: moduleId,\r\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\r\n \t\t\t\t});\r\n \t\t}\r\n \t\r\n \t\t// Now in \"dispose\" phase\r\n \t\thotSetStatus(\"dispose\");\r\n \t\tvar queue = outdatedModules.slice();\r\n \t\twhile(queue.length > 0) {\r\n \t\t\tvar moduleId = queue.pop();\r\n \t\t\tvar module = installedModules[moduleId];\r\n \t\t\tif(!module) continue;\r\n \t\r\n \t\t\tvar data = {};\r\n \t\r\n \t\t\t// Call dispose handlers\r\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\r\n \t\t\tfor(var j = 0; j < disposeHandlers.length; j++) {\r\n \t\t\t\tvar cb = disposeHandlers[j];\r\n \t\t\t\tcb(data);\r\n \t\t\t}\r\n \t\t\thotCurrentModuleData[moduleId] = data;\r\n \t\r\n \t\t\t// disable module (this disables requires from this module)\r\n \t\t\tmodule.hot.active = false;\r\n \t\r\n \t\t\t// remove module from cache\r\n \t\t\tdelete installedModules[moduleId];\r\n \t\r\n \t\t\t// remove \"parents\" references from all children\r\n \t\t\tfor(var j = 0; j < module.children.length; j++) {\r\n \t\t\t\tvar child = installedModules[module.children[j]];\r\n \t\t\t\tif(!child) continue;\r\n \t\t\t\tvar idx = child.parents.indexOf(moduleId);\r\n \t\t\t\tif(idx >= 0) {\r\n \t\t\t\t\tchild.parents.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// remove outdated dependency from module children\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tfor(var j = 0; j < moduleOutdatedDependencies.length; j++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\r\n \t\t\t\t\tvar idx = module.children.indexOf(dependency);\r\n \t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Not in \"apply\" phase\r\n \t\thotSetStatus(\"apply\");\r\n \t\r\n \t\thotCurrentHash = hotUpdateNewHash;\r\n \t\r\n \t\t// insert new code\r\n \t\tfor(var moduleId in appliedUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\r\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// call accept handlers\r\n \t\tvar error = null;\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tvar callbacks = [];\r\n \t\t\t\tfor(var i = 0; i < moduleOutdatedDependencies.length; i++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[i];\r\n \t\t\t\t\tvar cb = module.hot._acceptedDependencies[dependency];\r\n \t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\r\n \t\t\t\t\tcallbacks.push(cb);\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < callbacks.length; i++) {\r\n \t\t\t\t\tvar cb = callbacks[i];\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\tcb(outdatedDependencies);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Load self accepted modules\r\n \t\tfor(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {\r\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\r\n \t\t\tvar moduleId = item.module;\r\n \t\t\thotCurrentParents = [moduleId];\r\n \t\t\ttry {\r\n \t\t\t\t__webpack_require__(moduleId);\r\n \t\t\t} catch(err) {\r\n \t\t\t\tif(typeof item.errorHandler === \"function\") {\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\titem.errorHandler(err);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t} else if(!error)\r\n \t\t\t\t\terror = err;\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// handle errors in accept handlers and self accepted module load\r\n \t\tif(error) {\r\n \t\t\thotSetStatus(\"fail\");\r\n \t\t\treturn callback(error);\r\n \t\t}\r\n \t\r\n \t\thotSetStatus(\"idle\");\r\n \t\tcallback(null, outdatedModules);\r\n \t}\r\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false,\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: hotCurrentParents,\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 65a9751e8ae7ff05771b","require('file?name=[name].[ext]!./index.html')\r\nrequire('./app')\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __webpack_public_path__ + \"index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/file-loader?name=[name].[ext]!./src/index.html\n// module id = 2\n// module chunks = 0","import fakeServer from './fakeServer'\nimport Server from './Server'\nimport Renderer from './Renderer'\nimport transformFrame from './transformFrame'\n\nconst serverDimensions = {WIDTH: 4000, HEIGHT: 2250}\nconst clientDimensions = {WIDTH: 1920, HEIGHT: 1080}\n\n\nconst renderer = new Renderer({...clientDimensions, FRAME_RATE: 24})\n//const server = new fakeServer(serverDimensions)\nconst server = new Server()\n\nserver.on('frame', (frame) => renderer.update(transformFrame(frame, transformRatio, serverDimensions)))\n\nconst transformRatio = {\n    WIDTH: serverDimensions.WIDTH / clientDimensions.WIDTH,\n    HEIGHT: serverDimensions.HEIGHT / clientDimensions.HEIGHT\n}\n\n// window.onblur = () => {  renderer.pause(); }\n// window.onfocus = () => { renderer.resume(); }\n\nrenderer.start()\nserver.connect()\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","\r\n\r\nfunction getRandomIntBounded(max) {\r\n    return Math.floor(Math.random() * (max + 1));\r\n}\r\n\r\nexport default function fakeServer({WIDTH, HEIGHT}) {\r\n    var that = this;\r\n    this.subscribers = {};\r\n    this.FRAME_RATE = 10;\r\n    \r\n    const randomHexColour = () => Math.floor(Math.random()*16777215).toString(16) \r\n    \r\n    function generateAsteroid(id) {\r\n        return [id, getRandomIntBounded(WIDTH), getRandomIntBounded(HEIGHT), Math.random() * 50]\r\n    }\r\n    \r\n    function generateShip(id) {\r\n        return [id, getRandomIntBounded(WIDTH), getRandomIntBounded(HEIGHT), 20, 0, randomHexColour()]\r\n    }\r\n    \r\n    function generateExplosion() {\r\n        return [getRandomIntBounded(WIDTH), getRandomIntBounded(HEIGHT)]\r\n    }\r\n    \r\n    function moveAsteroid([id, x, y, r]) {\r\n        return [id, x > WIDTH ? 0 : x + 3, y > HEIGHT ? 0 : y + 3, r]\r\n    }\r\n    \r\n    function rotateShip([id, x, y, r, t, col]) {\r\n        return [id, x, y, r, t + Math.random() - 0.5, col]\r\n    }\r\n    \r\n    this.state = {\r\n        a: [\r\n            generateAsteroid(1),\r\n            generateAsteroid(2),\r\n            generateAsteroid(3),\r\n            generateAsteroid(4),\r\n            generateAsteroid(5),\r\n            generateAsteroid(6)\r\n        ],\r\n        s: [\r\n            generateShip('AAA'),\r\n            generateShip('BBB'),\r\n            generateShip('CCC'),\r\n            generateShip('DDD'),\r\n            generateShip('EEE'),\r\n            generateShip('FFF')\r\n        ],\r\n        x: []\r\n    };\r\n    \r\n    const stateReducer = (state) => {\r\n        return {\r\n            ...state,\r\n            a: state.a.map(moveAsteroid),\r\n            s: state.s.map(rotateShip),\r\n            x: [generateExplosion()]\r\n        }\r\n    }\r\n    \r\n    this.getNextFrame = function () {\r\n        this.state = stateReducer(this.state)\r\n        \r\n        //console.table(this.state);\r\n        return this.state\r\n    }\r\n    \r\n    this.on = function(event, callback) {\r\n        that.subscribers[event] = that.subscribers[event] || [];\r\n        that.subscribers[event].push(callback);\r\n    }\r\n    \r\n    this.connect = function() {\r\n        function render(frame) {\r\n            if(that.subscribers['frame']) {\r\n                that.subscribers.frame.forEach(callback => callback(frame))\r\n            }\r\n            \r\n            setTimeout(function() {\r\n                render(that.getNextFrame())\r\n            }, 1000 / that.FRAME_RATE)\r\n        }\r\n\r\n        render(that.getNextFrame())\r\n    }\r\n    \r\n    return this;\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/fakeServer.js","export default class Server {\n    \n    constructor() {\n        this.subscribers = {};\n    }\n    \n    connect(url = 'ws://localhost:8065/websocket') {        \n        const onOpen = (event) => console.log('WebSocket: Open')\n        const onClose = (event) => console.log('WebSocket: Closed') \n        \n        this.websocket = new WebSocket(url)\n        this.websocket.onopen = (event) => { onOpen(event) }\n        this.websocket.onclose = (event) => { onClose(event) }\n        this.websocket.onmessage = (event) => { this.onMessage(event) }\n    }\n    \n    onMessage(event) {\n        //console.log('WebSocket: Message', event.data)\n        let message = JSON.parse(event.data);\n        message.s = message.s || []\n        message.x = message.x || []\n        \n        if(this.subscribers['frame']) {\n            this.subscribers.frame.forEach(callback => callback(message))\n        }\n    }\n    \n    on(eventName, callback) {\n        this.subscribers[eventName] = this.subscribers[event] || [];\n        this.subscribers[eventName].push(callback);\n    }\n    \n    disconnect() {\n        this.websocket.close()\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Server.js","import { fabric } from 'fabric'\nimport Asteroid from './Asteroid'\nimport Ship from './Ship'\nimport Explosion from './Explosion'\nimport Bullet from './Bullet'\nimport FpsCounter from './FpsCounter'\n\nexport default class Renderer {\n  \n    constructor({FRAME_RATE, WIDTH, HEIGHT}) {\n        this.FRAME_RATE = FRAME_RATE\n        this.state = { asteroids: {}, ships: {}, bullets: {} }\n        this.canvas = new fabric.Canvas('c')\n        this.canvas.renderOnAddRemove = false\n        this.canvas.stateful = false\n        \n        this.canvas.setWidth(WIDTH)\n        this.canvas.setHeight(HEIGHT)\n        this.canvas.setBackgroundColor('000000')\n        this.canvas.calcOffset()\n        \n        document.addEventListener(\"keydown\", (e) => {\n            if (e.keyCode == 13) {\n                this.goFullscreen()\n            }\n        }, false);\n    }\n    \n    goFullscreen() {\n        var canvas = this.canvas.getSelectionElement().parentNode;\n        if(canvas.requestFullScreen) {\n            canvas.requestFullScreen();\n        }\n        else if(canvas.webkitRequestFullScreen) {\n            canvas.webkitRequestFullScreen();\n        }\n        else if(canvas.mozRequestFullScreen) {\n            canvas.mozRequestFullScreen();\n        }\n    }\n    \n    getOrAddAsteroid(roid) {\n        let theRoid = this.state.asteroids[roid.id] || new Asteroid(roid, this.canvas);\n        this.state.asteroids[theRoid.id] = theRoid;\n        return theRoid;\n    }\n    \n    getOrAddShip(ship) {\n        let theShip = this.state.ships[ship.id] || new Ship(ship, this.canvas);\n        this.state.ships[theShip.id] = theShip;\n        return theShip;\n    }\n    \n    getOrAddBullet(bullet) {\n        let theBullet = this.state.bullets[bullet.id] || new Bullet(bullet, this.canvas);\n        this.state.bullets[theBullet.id] = theBullet;\n        return theBullet;\n    }\n    \n    updateAsteroids(asteroids) {\n        let deadAsteroidIds = Object.keys(this.state.asteroids).filter((existingId) => {\n            return !asteroids.some(({id}) => id == existingId )\n        })\n        deadAsteroidIds.forEach(id => {\n            this.state.asteroids[id].remove()\n            delete this.state.asteroids[id]\n        })\n\n        asteroids.forEach((roid) => \n            this.getOrAddAsteroid(roid).update(roid, 1000 / this.FRAME_RATE)\n        )\n    }\n    \n    updateShips(ships) {\n        ships.forEach((ship) => \n            this.getOrAddShip(ship).update(ship, 1000 / this.FRAME_RATE)\n        )\n    }\n    \n    updateExplosions(explosions) {\n        explosions.forEach((splosion) => new Explosion(splosion, this.canvas))\n    }\n    \n    updateBullets(bullets) {\n        Object.keys(this.state.bullets).forEach(id => {\n            this.state.bullets[id].remove()\n            delete this.state.bullets[id]\n        })\n        bullets.forEach(bullet => this.getOrAddBullet(bullet).update(bullet))\n    }\n    \n    update(frame) {\n        if(!this.paused) {\n            //console.log(frame);\n            this.updateAsteroids(frame.asteroids)\n            this.updateShips(frame.ships)\n            this.updateExplosions(frame.explosions)\n            this.updateBullets(frame.bullets)\n        }\n    }\n        \n    start() {\n        let fpsCounter = new FpsCounter(this.canvas)\n        \n        const step = (timestamp) => {\n            fpsCounter.update()\n            \n            fabric.util.requestAnimFrame(step, this.canvas.getElement())\n            this.canvas.renderAll()\n        }\n\n        step()\n    }\n\n    pause() {\n        this.paused = true;\n    }\n\n    resume() {\n        this.paused = false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Renderer.js","/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: \"1.7.22\" };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require(\"jsdom\")\n    .jsdom(\n      decodeURIComponent(\"%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E\")\n    );\n\n  if (fabric.document.createWindow) {\n    fabric.window = fabric.document.createWindow();\n  } else {\n    fabric.window = fabric.document.parentWindow;\n  }\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\n\nfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = Math.abs(minX - maxX),\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = Math.abs(minY - maxY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      img.onload = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length,\n          forceAsync = true;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        }, forceAsync);\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.PathGroup}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n\n      object = new fabric.PathGroup(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Propertie names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element and initializes it via excanvas if necessary\n     * @static\n     * @memberOf fabric.util\n     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n     * when not given, element is created implicitly\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function(canvasEl) {\n      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n      /* eslint-disable camelcase */\n      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n        G_vmlCanvasManager.initElement(canvasEl);\n      }\n      /* eslint-enable camelcase */\n      return canvasEl;\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.isLikelyNode\n        ? new (require('canvas').Image)()\n        : fabric.document.createElement('img');\n    },\n\n    /**\n     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} klass \"Class\" to create accessors for\n     */\n    createAccessors: function(klass) {\n      var proto = klass.prototype, i, propName,\n          capitalizedPropName, setterName, getterName;\n\n      for (i = proto.stateProperties.length; i--; ) {\n\n        propName = proto.stateProperties[i];\n        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n        setterName = 'set' + capitalizedPropName;\n        getterName = 'get' + capitalizedPropName;\n\n        // using `new Function` for better introspection\n        if (!proto[getterName]) {\n          proto[getterName] = (function(property) {\n            return new Function('return this.get(\"' + property + '\")');\n          })(propName);\n        }\n        if (!proto[setterName]) {\n          proto[setterName] = (function(property) {\n            return new Function('value', 'return this.set(\"' + property + '\", value)');\n          })(propName);\n        }\n      }\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.setAngle(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @param {Number} maximumSide biggest side allowed\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /* _ES5_COMPAT_START_ */\n\n  if (!Array.prototype.indexOf) {\n    /**\n     * Finds index of an element in an array\n     * @param {*} searchElement\n     * @return {Number}\n     */\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      if (this === void 0 || this === null) {\n        throw new TypeError();\n      }\n      var t = Object(this), len = t.length >>> 0;\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 0) {\n        n = Number(arguments[1]);\n        if (n !== n) { // shortcut for verifying if it's NaN\n          n = 0;\n        }\n        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n        return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    };\n  }\n\n  if (!Array.prototype.forEach) {\n    /**\n     * Iterates an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.forEach = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          fn.call(context, this[i], i, this);\n        }\n      }\n    };\n  }\n\n  if (!Array.prototype.map) {\n    /**\n     * Returns a result of iterating over an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.map = function(fn, context) {\n      var result = [];\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          result[i] = fn.call(context, this[i], i, this);\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.every) {\n    /**\n     * Returns true if a callback returns truthy value for all elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.every = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && !fn.call(context, this[i], i, this)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  if (!Array.prototype.some) {\n    /**\n     * Returns true if a callback returns truthy value for at least one element in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.some = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && fn.call(context, this[i], i, this)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n\n  if (!Array.prototype.filter) {\n    /**\n     * Returns the result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.filter = function(fn, context) {\n      var result = [], val;\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          val = this[i]; // in case fn mutates this\n          if (fn.call(context, val, i, this)) {\n            result.push(val);\n          }\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.reduce) {\n    /**\n     * Returns \"folded\" (reduced) result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @return {*}\n     */\n    Array.prototype.reduce = function(fn /*, initial*/) {\n      var len = this.length >>> 0,\n          i = 0,\n          rv;\n\n      if (arguments.length > 1) {\n        rv = arguments[1];\n      }\n      else {\n        do {\n          if (i in this) {\n            rv = this[i++];\n            break;\n          }\n          // if array contains no values, no initial value to return\n          if (++i >= len) {\n            throw new TypeError();\n          }\n        }\n        while (true);\n      }\n      for (; i < len; i++) {\n        if (i in this) {\n          rv = fn.call(null, rv, this[i], i, this);\n        }\n      }\n      return rv;\n    };\n  }\n\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n\n})();\n\n\n(function() {\n\n  /* _ES5_COMPAT_START_ */\n  if (!String.prototype.trim) {\n    /**\n     * Trims a string (removing whitespace from the beginning and the end)\n     * @function external:String#trim\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n     */\n    String.prototype.trim = function () {\n      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n    };\n  }\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n       .replace(/\"/g, '&quot;')\n       .replace(/'/g, '&apos;')\n       .replace(/</g, '&lt;')\n       .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml\n  };\n})();\n\n\n/* _ES5_COMPAT_START_ */\n(function() {\n\n  var slice = Array.prototype.slice,\n      apply = Function.prototype.apply,\n      Dummy = function() { };\n\n  if (!Function.prototype.bind) {\n    /**\n     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n     * @param {Object} thisArg Object to bind function to\n     * @param {Any[]} Values to pass to a bound function\n     * @return {Function}\n     */\n    Function.prototype.bind = function(thisArg) {\n      var _this = this, args = slice.call(arguments, 1), bound;\n      if (args.length) {\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n        };\n      }\n      else {\n        /** @ignore */\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n        };\n      }\n      Dummy.prototype = this.prototype;\n      bound.prototype = new Dummy();\n\n      return bound;\n    };\n  }\n\n})();\n/* _ES5_COMPAT_END_ */\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n    // need to investigate later\n        return (typeof event.clientX !== unknown ? event.clientX : 0);\n      },\n\n      pointerY = function(event) {\n        return (typeof event.clientY !== unknown ? event.clientY : 0);\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n              ? options.colorEasing(currentTime, duration)\n              : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata|clipPath|mask)$/i,\n      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'originX',\n        opacity:              'opacity'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = (value === 'none' || value === 'hidden') ? false : true;\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'originX' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList;\n    for (var i = 0; i < nodeNames.length; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (var i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, nodelist = doc.getElementsByTagName('*');\n    for (i = 0; i < nodelist.length; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (var i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances) {\n      if (callback) {\n        callback(instances, options);\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return reAllowedParents.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      i = 0;\n      len = points.length;\n      for (; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (var i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options) {\n          callback && callback(results, _options);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options) {\n        callback(results, _options);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  if (klass.async) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n  }\n  else {\n    var obj = klass.fromElement(el, this.options);\n    this.resolveGradient(obj, 'fill');\n    this.resolveGradient(obj, 'stroke');\n    this.reviver && this.reviver(el, obj);\n    this.instances[index] = obj;\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Miltiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Miltiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter;\n\n    for (var i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length;\n\n    for (var i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = source[3] * 255;\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource();\n\n      for (var i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n   // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 17 basic color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n   */\n  fabric.Color.colorNameMap = {\n    aqua:    '#00FFFF',\n    black:   '#000000',\n    blue:    '#0000FF',\n    fuchsia: '#FF00FF',\n    gray:    '#808080',\n    grey:    '#808080',\n    green:   '#008000',\n    lime:    '#00FF00',\n    maroon:  '#800000',\n    navy:    '#000080',\n    olive:   '#808000',\n    orange:  '#FFA500',\n    purple:  '#800080',\n    red:     '#FF0000',\n    silver:  '#C0C0C0',\n    teal:    '#008080',\n    white:   '#FFFFFF',\n    yellow:  '#FFFF00'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (var i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true),\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (!(object.group && object.group.type === 'path-group')) {\n        for (var prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += this.offsetX - object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += this.offsetY - object.height / 2;\n          }\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (var i = 0; i < colorStops.length; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (var i = 0; i < colorStops.length; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (var i = 0; i < colorStops.length; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n            'offset=\"', (colorStop.offset * 100) + '%',\n            '\" style=\"stop-color:', colorStop.color,\n            (colorStop.opacity !== null ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} object\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object.group && object.group.type === 'path-group') {\n        for (prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += -this.offsetX + object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += -this.offsetY + object.height / 2;\n          }\n        }\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (var i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        });\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n     * (followed by a manual rendering after addition/deletion)\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    skipOffscreen: false,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function(canvasEl) {\n      var element = fabric.util.createCanvasElement(canvasEl);\n      if (!element.style) {\n        element.style = { };\n      }\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.renderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeGroup = this._activeGroup, object, ignoreVpt = false, skipAbsolute = true;\n      this.viewportTransform = vpt;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeGroup) {\n        activeGroup.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.getWidth(), height = this.getHeight(),\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform.apply(ctx, this.viewportTransform);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      for (var i = 0, length = objects.length; i < length; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'];\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          ctx.save();\n          ctx.transform.apply(ctx, this.viewportTransform);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.getHeight() / 2,\n        left: this.getWidth() / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n          'version=\"1.1\" ',\n          'width=\"', width, '\" ',\n          'height=\"', height, '\" ',\n          viewBox,\n          'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n          this.createSVGFontFacesMarkup(),\n          this.createSVGRefElementsMarkup(),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex,\n          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance;\n      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * push single object svg representation in the markup\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n            ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n            'width=\"',\n              (repeat === 'repeat-y' || repeat === 'no-repeat'\n                ? filler.source.width\n                : this.width),\n            '\" height=\"',\n              (repeat === 'repeat-x' || repeat === 'no-repeat'\n                ? filler.source.height\n                : this.height),\n            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n            'width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (var i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (var i = idx + 1; i < this._objects.length; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.clear();\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return;\n      }\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n        originX: 'center',\n        originY: 'center'\n      });\n      var position = new fabric.Point(path.left, path.top);\n      path.originX = fabric.Object.prototype.originX;\n      path.originY = fabric.Object.prototype.originY;\n      position = path.translateToGivenOrigin(\n        position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.renderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n\n      this.canvas.add(path);\n      path.setCoords();\n\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._resetShadow();\n      this.canvas.renderAll();\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (var i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n                        .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key;\n\n    for (var i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2;\n\n    for (var i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transfrom\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key enable multiple click selection\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          object, objsToRender = [], activeGroupObjects = [];\n\n      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeGroup) {\n          activeGroup._set('_objects', activeGroupObjects);\n          objsToRender.push(activeGroup);\n        }\n        activeObject && objsToRender.push(activeObject);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this.getActiveGroup()) {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var hasBorders = target.hasBorders,\n          transparentCorners = target.transparentCorners,\n          ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor;\n\n      target.hasBorders = target.transparentCorners = false;\n      target.selectionBackgroundColor = '';\n\n      ctx.save();\n      ctx.transform.apply(ctx, this.viewportTransform);\n      target.render(ctx);\n      ctx.restore();\n\n      target.active && target._renderControls(ctx);\n\n      target.hasBorders = hasBorders;\n      target.transparentCorners = transparentCorners;\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      this.clearContext(ctx);\n\n      return isTransparent;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n\n      return (\n        !target\n        ||\n        (target &&\n          activeGroup &&\n          !activeGroup.contains(target) &&\n          activeGroup !== target &&\n          !e[this.selectionKey])\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x / Math.abs(localMouse.x),\n          signY = localMouse.y / Math.abs(localMouse.y);\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRoated = true;\n\n      if (t.target.snapAngle > 0) {\n        var snapAngle  = t.target.snapAngle,\n            snapThreshold  = t.target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (t.target.angle === angle) {\n        hasRoated = false;\n      }\n      else {\n        t.target.angle = angle;\n      }\n\n      return hasRoated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.setAngle(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          activeTarget, activeTargetSubs;\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n      if (activeGroup && !skipGroup && activeGroup === this._searchPossibleTargets([activeGroup], pointer)) {\n        this._fireOverOutEvents(activeGroup, e);\n        return activeGroup;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (activeObject && activeObject._findTargetCorner(pointer)) {\n        this._fireOverOutEvents(activeObject, e);\n        return activeObject;\n      }\n      if (activeObject && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          this._fireOverOutEvents(activeObject, e);\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      this._fireOverOutEvents(target, e);\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var overOpt, outOpt, hoveredTarget = this._hoveredTarget;\n      if (hoveredTarget !== target) {\n        overOpt = { e: e, target: target, previousTarget: this._hoveredTarget };\n        outOpt = { e: e, target: this._hoveredTarget, nextTarget: target };\n        this._hoveredTarget = target;\n      }\n      if (target) {\n        if (hoveredTarget !== target) {\n          if (hoveredTarget) {\n            this.fire('mouse:out', outOpt);\n            hoveredTarget.fire('mouseout', outOpt);\n          }\n          this.fire('mouse:over', overOpt);\n          target.fire('mouseover', overOpt);\n        }\n      }\n      else if (hoveredTarget) {\n        this.fire('mouse:out', outOpt);\n        hoveredTarget.fire('mouseout', outOpt);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // untill we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.getWidth() + 'px',\n        height: this.getHeight() + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.getWidth() || element.width,\n          height = this.getHeight() || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _setActiveObject: function(object) {\n      var obj = this._activeObject;\n      if (obj) {\n        obj.set('active', false);\n        if (object !== obj && obj.onDeselect && typeof obj.onDeselect === 'function') {\n          obj.onDeselect();\n        }\n      }\n      this._activeObject = object;\n      object.set('active', true);\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActiveObject = this.getActiveObject();\n      if (currentActiveObject && currentActiveObject !== object) {\n        currentActiveObject.fire('deselected', { e: e });\n      }\n      this._setActiveObject(object);\n      this.fire('object:selected', { target: object, e: e });\n      object.fire('selected', { e: e });\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (this.getActiveObject() === obj) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function() {\n      var obj = this._activeObject;\n      if (obj) {\n        obj.set('active', false);\n        if (obj.onDeselect && typeof obj.onDeselect === 'function') {\n          obj.onDeselect();\n        }\n      }\n      this._activeObject = null;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var activeObject = this._activeObject;\n      if (activeObject) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { e: e });\n        activeObject.fire('deselected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Group} group\n     */\n    _setActiveGroup: function(group) {\n      this._activeGroup = group;\n      if (group) {\n        group.set('active', true);\n      }\n    },\n\n    /**\n     * Sets active group to a specified one. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {fabric.Group} group Group to set as a current one\n     * @param {Event} e Event object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveGroup: function (group, e) {\n      this._setActiveGroup(group);\n      if (group) {\n        this.fire('object:selected', { target: group, e: e });\n        group.fire('selected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Returns currently active group\n     * @return {fabric.Group} Current group\n     */\n    getActiveGroup: function () {\n      return this._activeGroup;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveGroup: function() {\n      var g = this.getActiveGroup();\n      if (g) {\n        g.destroy();\n      }\n      this.setActiveGroup(null);\n    },\n\n    /**\n     * Discards currently active group and fire events If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveGroup: function (e) {\n      var g = this.getActiveGroup();\n      if (g) {\n        this.fire('before:selection:cleared', { e: e, target: g });\n        this._discardActiveGroup();\n        this.fire('selection:cleared', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Deactivates all objects on canvas, removing any active group or object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAll: function () {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length,\n          obj;\n      for ( ; i < len; i++) {\n        obj = allObjects[i];\n        obj && obj.set('active', false);\n      }\n      this._discardActiveGroup();\n      this._discardActiveObject();\n      return this;\n    },\n\n    /**\n     * Deactivates all objects and dispatches appropriate events If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAllWithDispatch: function (e) {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length,\n          obj;\n      for ( ; i < len; i++) {\n        obj = allObjects[i];\n        obj && obj.set('active', false);\n      }\n      this.discardActiveGroup(e);\n      this.discardActiveObject(e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup) {\n        activeGroup._renderControls(ctx);\n      }\n      else {\n        this._drawObjectsControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _drawObjectsControls: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; ++i) {\n        if (!this._objects[i] || !this._objects[i].active) {\n          continue;\n        }\n        this._objects[i]._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group === this.getActiveGroup()) {\n        //Copy all the positionally relevant properties across now\n        var originalValues = {},\n            layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this.getActiveGroup().realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      var originalProperties;\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n\n  /**\n   * @ignore\n   * @class fabric.Element\n   * @alias fabric.Canvas\n   * @deprecated Use {@link fabric.Canvas} instead.\n   * @constructor\n   */\n  fabric.Element = fabric.Canvas;\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown, { passive: false });\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBinded) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this.eventsBinded = true;\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      addListener(fabric.document, 'touchend', this._onMouseUp, { passive: false });\n      addListener(fabric.document, 'touchmove', this._onMouseMove, { passive: false });\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\n      if (activeObject && activeObject.isEditing && target === activeObject) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n          pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n\n      var target;\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', target, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', target, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      var searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', target ? target : null, LEFT_CLICK, isClick);\n      target && (target.__corner = 0);\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, targetObj, button, isClick) {\n      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target, e: e });\n        target.fire('modified', { e: e });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).renderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      var target = this.findTarget(e);\n\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target ? target : null, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', target ? target : null, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      // save pointer for check in __onMouseUp event\n      var pointer = this.getPointer(e, true);\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this.deactivateAllWithDispatch(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this.getActiveGroup();\n      }\n\n      if (this.selection && (!target || (!target.selectable && !target.isEditing))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        if (target.selectable && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n        var activeObject = this.getActiveObject();\n        if (target !== this.getActiveGroup() && target !== activeObject) {\n          this.deactivateAll();\n          if (target.selectable) {\n            activeObject && activeObject.fire('deselected', { e: e });\n            this.setActiveObject(target, e);\n          }\n        }\n      }\n      this._handleEvent(e, 'down', target ? target : null);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e);\n        this._setCursorFromEvent(e, target);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', target ? target : null);\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._handleEvent(e, 'wheel');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeGroup = this.getActiveGroup(),\n          // only show proper corner when group selection is not active\n          corner = target._findTargetCorner\n                    && (!activeGroup || !activeGroup.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this._setCornerCursor(corner, target, e);\n      }\n      //actually unclear why it should return something\n      //is never evaluated\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _setCornerCursor: function(corner, target, e) {\n      if (corner in cursorOffset) {\n        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        this.setCursor(this.rotationCursor);\n      }\n      else {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.getAngle() % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this.getActiveObject();\n      return e[this.selectionKey] && target && target.selectable &&\n            (this.getActiveGroup() || (activeObject && activeObject !== target))\n            && this.selection;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeGroup = this.getActiveGroup();\n\n      if (target === activeGroup) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeGroup) {\n        this._updateActiveGroup(target, e);\n      }\n      else {\n        this._createActiveGroup(target, e);\n      }\n\n      if (this._activeGroup) {\n        this._activeGroup.saveCoords();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveGroup: function(target, e) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup.contains(target)) {\n\n        activeGroup.removeWithUpdate(target);\n        target.set('active', false);\n\n        if (activeGroup.size() === 1) {\n          // remove group alltogether if after removal it only contains 1 object\n          this.discardActiveGroup(e);\n          // activate last remaining object\n          this.setActiveObject(activeGroup.item(0), e);\n          return;\n        }\n      }\n      else {\n        activeGroup.addWithUpdate(target);\n      }\n      this.fire('selection:created', { target: activeGroup, e: e });\n      activeGroup.set('active', true);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveGroup: function(target, e) {\n\n      if (this._activeObject && target !== this._activeObject) {\n\n        var group = this._createGroup(target);\n        group.addWithUpdate();\n\n        this.setActiveGroup(group, e);\n        this._activeObject = null;\n\n        this.fire('selection:created', { target: group, e: e });\n      }\n\n      target.set('active', true);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.Group(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects();\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        group = new fabric.Group(group.reverse(), {\n          canvas: this\n        });\n        group.addWithUpdate();\n        this.setActiveGroup(group, e);\n        group.saveCoords();\n        this.fire('selection:created', { target: group, e: e });\n        this.renderAll();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          currentObject.set('active', true);\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        activeGroup.setObjectsCoords().setCoords();\n        activeGroup.isMoving = false;\n        this.setCursor(this.defaultCursor);\n      }\n\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = options.multiplier || 1,\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.getWidth(),\n          origHeight = this.getHeight(),\n          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n          scaledHeight = (cropping.height || this.getHeight()) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive;\n\n      this.viewportTransform = newVp;\n      // setting interactive to false avoid exporting controls\n      this.interactive && (this.interactive = false);\n      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n        // this.setDimensions is going to renderAll also;\n        this.setDimensions({ width: scaledWidth, height: scaledHeight }, { backstoreOnly: true });\n      }\n      else {\n        this.renderAll();\n      }\n      var data = this.__toDataURL(format, quality, cropping);\n      originalInteractive && (this.interactive = originalInteractive);\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.renderAll()\n      this.setDimensions({ width: origWidth, height: origHeight }, { backstoreOnly: true });\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n                ? canvasEl.toDataURL('image/' + format, quality)\n                : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n\n    /**\n     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n     * @deprecated since 1.0.13\n     * @param {String} format (png|jpeg)\n     * @param {Number} multiplier\n     * @param {Number} quality (0..1)\n     * @return {String}\n     */\n    toDataURLWithMultiplier: function (format, multiplier, quality) {\n      return this.toDataURL({\n        format: format,\n        multiplier: multiplier,\n        quality: quality\n      });\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.getWidth();\n    el.height = this.getHeight();\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n     * @method getClipTo\n     * @memberOf fabric.Object.prototype\n     * @return {Function}\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#clipTo|clipping function}\n     * @method setClipTo\n     * @memberOf fabric.Object.prototype\n     * @param {Function} clipTo Clipping function\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method getTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @return {Array} transformMatrix\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method setTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @param {Array} transformMatrix\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#visible|visible} state\n     * @method getVisible\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} True if visible\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#visible|visible} state\n     * @method setVisible\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value visible value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#shadow|shadow}\n     * @method getShadow\n     * @memberOf fabric.Object.prototype\n     * @return {Object} Shadow instance\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#stroke|stroke}\n     * @method getStroke\n     * @memberOf fabric.Object.prototype\n     * @return {String} stroke value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#stroke|stroke}\n     * @method setStroke\n     * @memberOf fabric.Object.prototype\n     * @param {String} value stroke value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method getStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @return {Number} strokeWidth value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method setStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value strokeWidth value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originX|originX}\n     * @method getOriginX\n     * @memberOf fabric.Object.prototype\n     * @return {String} originX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originX|originX}\n     * @method setOriginX\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originY|originY}\n     * @method getOriginY\n     * @memberOf fabric.Object.prototype\n     * @return {String} originY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originY|originY}\n     * @method setOriginY\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#fill|fill}\n     * @method getFill\n     * @memberOf fabric.Object.prototype\n     * @return {String} Fill value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#fill|fill}\n     * @method setFill\n     * @memberOf fabric.Object.prototype\n     * @param {String} value Fill value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#opacity|opacity}\n     * @method getOpacity\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Opacity value (0-1)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#opacity|opacity}\n     * @method setOpacity\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Opacity value (0-1)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n     * @method getAngle\n     * @memberOf fabric.Object.prototype\n     * @return {Number}\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#top|top position}\n     * @method getTop\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Top value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#top|top position}\n     * @method setTop\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Top value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#left|left position}\n     * @method getLeft\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Left value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#left|left position}\n     * @method setLeft\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Left value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n     * @method getScaleX\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n     * @method setScaleX\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n     * @method getScaleY\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n     * @method setScaleY\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n     * @method getFlipX\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipX|flipX} value\n     * @method setFlipX\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n     * @method getFlipY\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipY|flipY} value\n     * @method setFlipY\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0.01,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big pathgroups, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      options = options || { };\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var zoom = this.canvas && this.canvas.getZoom() || 1,\n          objectScale = this.getObjectScaling(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var target = this.canvas._currentTransform.target,\n            action = this.canvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n     */\n    transform: function(ctx, fromLeft) {\n      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n        this.group.transform(ctx);\n      }\n      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n      ctx.translate(center.x, center.y);\n      this.angle && ctx.rotate(degreesToRadians(this.angle));\n      ctx.scale(\n        this.scaleX * (this.flipX ? -1 : 1),\n        this.scaleY * (this.flipY ? -1 : 1)\n      );\n      this.skewX && ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n      this.skewY && ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged && this.cacheProperties.indexOf(key) > -1) {\n        if (this.group) {\n          this.group.set('dirty', true);\n        }\n        this.dirty = true;\n      }\n\n      if (isChanged && this.group && this.stateProperties.indexOf(key) > -1) {\n        this.group.set('dirty', true);\n      }\n\n      if (key === 'width' || key === 'height') {\n        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Sets sourcePath of an object\n     * @param {String} value Value to set sourcePath to\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setSourcePath: function(value) {\n      this.sourcePath = value;\n      return this;\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    render: function(ctx, noTransform) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      //setup fill rule for current object\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache(noTransform)) {\n        if (!this._cacheCanvas) {\n          this._createCacheCanvas();\n        }\n        if (this.isCacheDirty(noTransform)) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext, noTransform);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx, noTransform);\n        if (noTransform && this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * This function is created to be subclassed by custom classes.\n     * since 1.7.12\n     * @type function\n     * @return false\n     */\n    needsItsOwnCache: function() {\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @param {Boolean} noTransform if rendereing in pathGroup, caching is not supported at object level\n     * @return {Boolean}\n     */\n    shouldCache: function(noTransform) {\n      return !noTransform && this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx, noTransform) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      this._render(ctx, noTransform);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      ctx.globalAlpha *= this.opacity;\n    },\n\n    _setStrokeStyles: function(ctx) {\n      if (this.stroke) {\n        ctx.lineWidth = this.strokeWidth;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.lineJoin = this.strokeLineJoin;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.strokeStyle = this.stroke.toLive\n          ? this.stroke.toLive(ctx, this)\n          : this.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx) {\n      if (this.fill) {\n        ctx.fillStyle = this.fill.toLive\n          ? this.fill.toLive(ctx, this)\n          : this.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderControls: function(ctx) {\n      if (!this.active || (this.group && this.group !== this.canvas.getActiveGroup())) {\n        return;\n      }\n\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (this.group && this.group === this.canvas.getActiveGroup()) {\n        ctx.rotate(degreesToRadians(options.angle));\n        this.drawBordersInGroup(ctx, options);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        this.drawBorders(ctx);\n      }\n      this.drawControls(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler.toLive) {\n        return;\n      }\n      var transform = filler.gradientTransform || filler.patternTransform;\n      if (transform) {\n        ctx.transform.apply(ctx, transform);\n      }\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Clones an instance, some objects are async, so using callback method will work for every object.\n     * Using the direct return does not work for images and groups.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {fabric.Object} clone of an instance\n     */\n    clone: function(callback, propertiesToInclude) {\n      if (this.constructor.fromObject) {\n        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n      }\n      return new fabric.Object(this.toObject(propertiesToInclude));\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        active: this.get('active'),\n        left: this.getLeft(),\n        top: this.getTop()\n      };\n\n      this.set('active', false);\n      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setAngle: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Removes object from canvas to which it was added last\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    remove: function() {\n      if (this.canvas) {\n        if (this.group && this.group === this.canvas._activeGroup) {\n          this.group.remove(this);\n        }\n        this.canvas.remove(this);\n      }\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors(fabric.Object);\n\n  /**\n   * Alias for {@link fabric.Object.prototype.setAngle}\n   * @alias rotate -> setAngle\n   * @memberOf fabric.Object\n   */\n  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, forceAsync, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    if (forceAsync) {\n      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n        if (typeof patterns[0] !== 'undefined') {\n          object.fill = patterns[0];\n        }\n        if (typeof patterns[1] !== 'undefined') {\n          object.stroke = patterns[1];\n        }\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    }\n    else {\n      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n      callback && callback(instance);\n      return instance;\n    }\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n\n    /**\n    * Callback; invoked right before object is about to go from active to inactive\n    */\n    onDeselect: function() {\n      /* NOOP */\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n            this.getCoords(absolute, calculate),\n            other.getCoords(absolute, calculate)\n          );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n        calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n      ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appear on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true)) {\n        return true;\n      }\n      // worst case scenario the object is so big that contanins the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n     // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns width of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} width value\n     */\n    getBoundingRectWidth: function() {\n      return this.getBoundingRect().width;\n    },\n\n    /**\n     * Returns height of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} height value\n     */\n    getBoundingRectHeight: function() {\n      return this.getBoundingRect().height;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * to be renamed in 2.0\n     * @return {Number} height value\n     */\n    getHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      value = this._constrainScale(value);\n\n      if (value < 0) {\n        this.flipX = !this.flipX;\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n\n      this.scaleX = value;\n      this.scaleY = value;\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = absolute ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y,\n          sinTh = Math.sin(theta),\n          cosTh = Math.cos(theta),\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n          center = this.getCenterPoint(),\n          // offset added for rotate and scale actions\n          coords = absolute ? center : fabric.util.transformPoint(center, vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n      if (!absolute) {\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      }\n\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        // trying to keep rounding error small, ugly but it works.\n        if (cos === 6.123233995736766e-17 || cos === -1.8369701987210297e-16) {\n          cos = 0;\n        }\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      var center = this.getCenterPoint(),\n          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n          matrix;\n      if (this.group && !skipGroup) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), translateMatrix);\n      }\n      else {\n        matrix = translateMatrix;\n      }\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      if (this.group && this.group.type === 'path-group') {\n        return '';\n      }\n      var toFixed = fabric.util.toFixed,\n          angle = this.getAngle(),\n          skewX = (this.getSkewX() % 360),\n          skewY = (this.getSkewY() % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\n          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      /* eslint-disable camelcase */\n      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n      /* eslint-enable camelcase */\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      if (!this.hasControls || !this.active) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor || this.group || !this.active ||\n        (this.canvas && !this.canvas.interactive)) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      ctx.strokeStyle = this.borderColor;\n      this._setLineDash(ctx, this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, this.borderDashArray, null);\n      ctx.strokeStyle = this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx) {\n      if (!this.hasControls) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2);\n      }\n\n      // middle-top-rotate\n      if (this.hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top) {\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('left'),\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('top'),\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('opacity'),\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onStart: function() {\n        object.set('active', false);\n      },\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n\n      if (noTransform) {\n        //  Line coords are distances from left-top of canvas to origin of line.\n        //  To render line in a path-group, we need to translate them to\n        //  distances from center of path-group to center of line.\n        var cp = this.getCenterPoint(),\n            offset = this.strokeWidth / 2;\n        ctx.translate(\n          cp.x - (this.strokeLineCap === 'butt' && this.height === 0 ? 0 : offset),\n          cp.y - (this.strokeLineCap === 'butt' && this.width === 0 ? 0 : offset)\n        );\n      }\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        p = this.calcLinePoints();\n      }\n      markup.push(\n        '<line ', this.getSvgId(),\n          'x1=\"', p.x1,\n          '\" y1=\"', p.y1,\n          '\" x2=\"', p.x2,\n          '\" y2=\"', p.y2,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromElement = function(element, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    options.originX = 'left';\n    options.originY = 'top';\n    return new fabric.Line(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromObject = function(object, callback, forceAsync) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    var line = fabric.Object._fromObject('Line', options, _callback, forceAsync, 'points');\n    if (line) {\n      delete line.points;\n    }\n    return line;\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('radius', options && options.radius || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        if (this.group && this.group.type === 'path-group') {\n          x = this.left + this.radius;\n          y = this.top + this.radius;\n        }\n        markup.push(\n          '<circle ', this.getSvgId(),\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n            'r=\"', this.radius,\n            '\" style=\"', this.getSvgStyles(),\n            '\" transform=\"', this.getSvgTransform(),\n            ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.arc(noTransform ? this.left + this.radius : 0,\n              noTransform ? this.top + this.radius : 0,\n              this.radius,\n              this.startAngle,\n              this.endAngle, false);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   * @return {fabric.Circle} Instance of fabric.Circle\n   */\n  fabric.Circle.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\n    obj.left -= obj.radius;\n    obj.top -= obj.radius;\n    return obj;\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Circle', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('width', options && options.width || 100)\n          .set('height', options && options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n          .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n          'points=\"', points,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n        '\"/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Triangle}\n   */\n  fabric.Triangle.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Triangle', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left + this.rx;\n        y = this.top + this.ry;\n      }\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n          'cx=\"', x, '\" cy=\"', y, '\" ',\n          'rx=\"', this.rx,\n          '\" ry=\"', this.ry,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        noTransform ? this.left + this.rx : 0,\n        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\n    ellipse.top -= ellipse.ry;\n    ellipse.left -= ellipse.rx;\n    return ellipse;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Ellipse', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = noTransform ? this.left : -this.width / 2,\n          y = noTransform ? this.top : -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n      if (!(this.group && this.group.type === 'path-group')) {\n        x = -this.width / 2;\n        y = -this.height / 2;\n      }\n      markup.push(\n        '<rect ', this.getSvgId(),\n          'x=\"', x, '\" y=\"', y,\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Rect} Instance of fabric.Rect\n   */\n  fabric.Rect.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    return rect;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {Object} instance of fabric.Rect\n   */\n  fabric.Rect.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Rect', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._calcDimensions();\n      if (!('top' in options)) {\n        this.top = this.minY;\n      }\n      if (!('left' in options)) {\n        this.left = this.minX;\n      }\n      this.pathOffset = {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x'),\n          minY = min(points, 'y'),\n          maxX = max(points, 'x'),\n          maxY = max(points, 'y');\n\n      this.width = (maxX - minX) || 0;\n      this.height = (maxY - minY) || 0;\n      this.minX = minX || 0;\n      this.minY = minY || 0;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [],\n          diffX = 0,\n          diffY = 0,\n          markup = this._createBaseSVGMarkup();\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        diffX = this.pathOffset.x;\n        diffY = this.pathOffset.y;\n      }\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n          'points=\"', points.join(''),\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    commonRender: function(ctx, noTransform) {\n      var point, len = this.points.length,\n          x = noTransform ? 0 : this.pathOffset.x,\n          y = noTransform ? 0 : this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Polyline', object, callback, forceAsync, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    return new fabric.Polygon(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Polygon', object, callback, forceAsync, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.minX = calcDim.left;\n      this.minY = calcDim.top;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left + (this.originX === 'center'\n          ? this.width / 2\n          : this.originX === 'right'\n            ? this.width\n            : 0);\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top + (this.originY === 'center'\n          ? this.height / 2\n          : this.originY === 'bottom'\n            ? this.height\n            : 0);\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      if (this.group && this.group.type === 'path-group') {\n        l = 0;\n        t = 0;\n      }\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', ['sourcePath', 'pathOffset'].concat(propertiesToInclude)), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.path = this.sourcePath;\n      }\n      delete o.sourcePath;\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<path ', this.getSvgId(),\n          'd=\"', path,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   */\n  fabric.Path.fromObject = function(object, callback, forceAsync) {\n    // remove this pattern rom 2.0, accept just object.\n    var path;\n    if (typeof object.path === 'string') {\n      fabric.loadSVGFromURL(object.path, function (elements) {\n        var pathUrl = object.path;\n        path = elements[0];\n        delete object.path;\n\n        path.setOptions(object);\n        path.setSourcePath(pathUrl);\n\n        callback && callback(path);\n      });\n    }\n    else {\n      return fabric.Object._fromObject('Path', object, callback, forceAsync, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Path\n   * @type Boolean\n   * @default\n   */\n  fabric.Path.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.PathGroup) {\n    fabric.warn('fabric.PathGroup is already defined');\n    return;\n  }\n\n  /**\n   * Path group class\n   * @class fabric.PathGroup\n   * @extends fabric.Path\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.PathGroup#initialize} for constructor definition\n   */\n  fabric.PathGroup = fabric.util.createClass(fabric.Object, /** @lends fabric.PathGroup.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path-group',\n\n    /**\n     * Fill value\n     * @type String\n     * @default\n     */\n    fill: '',\n\n    /**\n     * Pathgroups are container, do not render anything on theyr own, ence no cache properties\n     * @type Boolean\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * Constructor\n     * @param {Array} paths\n     * @param {Object} [options] Options object\n     * @return {fabric.PathGroup} thisArg\n     */\n    initialize: function(paths, options) {\n\n      options = options || { };\n      this.paths = paths || [];\n\n      for (var i = this.paths.length; i--;) {\n        this.paths[i].group = this;\n      }\n\n      if (options.toBeParsed) {\n        this.parseDimensionsFromPaths(options);\n        delete options.toBeParsed;\n      }\n      this.setOptions(options);\n      this.setCoords();\n    },\n\n    /**\n     * Calculate width and height based on paths contained\n     */\n    parseDimensionsFromPaths: function(options) {\n      var points, p, xC = [], yC = [], path, height, width,\n          m;\n      for (var j = this.paths.length; j--;) {\n        path = this.paths[j];\n        height = path.height + path.strokeWidth;\n        width = path.width + path.strokeWidth;\n        points = [\n          { x: path.left, y: path.top },\n          { x: path.left + width, y: path.top },\n          { x: path.left, y: path.top + height },\n          { x: path.left + width, y: path.top + height }\n        ];\n        m = this.paths[j].transformMatrix;\n        for (var i = 0; i < points.length; i++) {\n          p = points[i];\n          if (m) {\n            p = fabric.util.transformPoint(p, m, false);\n          }\n          xC.push(p.x);\n          yC.push(p.y);\n        }\n      }\n      options.width = Math.max.apply(null, xC);\n      options.height = Math.max.apply(null, yC);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      ctx.save();\n      ctx.translate(-this.width / 2, -this.height / 2);\n      for (var i = 0, l = this.paths.length; i < l; ++i) {\n        this.paths[i].render(ctx, true);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n      this.caching = parentCache;\n      if (parentCache) {\n        for (var i = 0, len = this.paths.length; i < len; i++) {\n          if (this.paths[i].willDrawShadow()) {\n            this.caching = false;\n            return false;\n          }\n        }\n      }\n      return parentCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return true;\n      }\n      for (var i = 0, len = this.paths.length; i < len; i++) {\n        if (this.paths[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isCaching: function() {\n      return this.caching || this.group && this.group.isCaching();\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this.paths.length; i < len; i++) {\n        if (this.paths[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets certain property to a certain value\n     * @param {String} prop\n     * @param {*} value\n     * @return {fabric.PathGroup} thisArg\n     */\n    _set: function(prop, value) {\n\n      if (prop === 'fill' && value && this.isSameColor()) {\n        var i = this.paths.length;\n        while (i--) {\n          this.paths[i]._set(prop, value);\n        }\n      }\n\n      return this.callSuper('_set', prop, value);\n    },\n\n    /**\n     * Returns object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var pathsToObject = this.paths.map(function(path) {\n        var originalDefaults = path.includeDefaultValues;\n        path.includeDefaultValues = path.group.includeDefaultValues;\n        var obj = path.toObject(propertiesToInclude);\n        path.includeDefaultValues = originalDefaults;\n        return obj;\n      });\n      var o = extend(this.callSuper('toObject', ['sourcePath'].concat(propertiesToInclude)), {\n        paths: pathsToObject\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} dataless object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.paths = this.sourcePath;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var objects = this.getObjects(),\n          p = this.getPointByOrigin('left', 'top'),\n          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n          markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(),\n        'style=\"', this.getSvgStyles(), '\" ',\n        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n        '>\\n'\n      );\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        markup.push('\\t', objects[i].toSVG(reviver));\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns a string representation of this path group\n     * @return {String} string representation of an object\n     */\n    toString: function() {\n      return '#<fabric.PathGroup (' + this.complexity() +\n        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns true if all paths in this group are of same color\n     * @return {Boolean} true if all paths are of the same color (`fill`)\n     */\n    isSameColor: function() {\n      var firstPathFill = this.getObjects()[0].get('fill') || '';\n      if (typeof firstPathFill !== 'string') {\n        return false;\n      }\n      firstPathFill = firstPathFill.toLowerCase();\n      return this.getObjects().every(function(path) {\n        var pathFill = path.get('fill') || '';\n        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n      });\n    },\n\n    /**\n     * Returns number representation of object's complexity\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return this.paths.reduce(function(total, path) {\n        return total + ((path && path.complexity) ? path.complexity() : 0);\n      }, 0);\n    },\n\n    /**\n     * Returns all paths in this path group\n     * @return {Array} array of path objects included in this path group\n     */\n    getObjects: function() {\n      return this.paths;\n    }\n  });\n\n  /**\n   * Creates fabric.PathGroup instance from an object representation\n   * @static\n   * @memberOf fabric.PathGroup\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n   */\n  fabric.PathGroup.fromObject = function(object, callback) {\n    var originalPaths = object.paths;\n    delete object.paths;\n    if (typeof originalPaths === 'string') {\n      fabric.loadSVGFromURL(originalPaths, function (elements) {\n        var pathUrl = originalPaths;\n        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n        object.paths = originalPaths;\n        callback(pathGroup);\n      });\n    }\n    else {\n      fabric.util.enlivenObjects(originalPaths, function(enlivenedObjects) {\n        var pathGroup = new fabric.PathGroup(enlivenedObjects, object);\n        object.paths = originalPaths;\n        callback(pathGroup);\n      });\n    }\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.PathGroup\n   * @type Boolean\n   * @default\n   */\n  fabric.PathGroup.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  // lock-related properties, for use in fabric.Group#get\n  // to enable locking behavior on group\n  // when one of its objects has lock-related properties set\n  var _lockProperties = {\n    lockMovementX:  true,\n    lockMovementY:  true,\n    lockRotation:   true,\n    lockScalingX:   true,\n    lockScalingY:   true,\n    lockUniScaling: true\n  };\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Boolean\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || { };\n\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      // because delegatedProperties propagate to objects.\n      isAlreadyGrouped && this.callSuper('initialize', options);\n\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (isAlreadyGrouped) {\n        // do not change coordinate of objects enclosed in a group,\n        // because objects coordinate system have been group coodinate system already.\n        this._updateObjectsCoords(true);\n        this._updateObjectsACoords();\n      }\n      else {\n        this._calcBounds();\n        this._updateObjectsCoords();\n        this.callSuper('initialize', options);\n      }\n\n      this.setCoords();\n      this.saveCoords();\n    },\n\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(skipCoordsChange) {\n      var center = this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center, skipCoordsChange);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n     */\n    _updateObjectCoords: function(object, center, skipCoordsChange) {\n      // do not display corners of objects enclosed in a group\n      object.__origHasControls = object.hasControls;\n      object.hasControls = false;\n\n      if (skipCoordsChange) {\n        return;\n      }\n\n      var objectLeft = object.getLeft(),\n          objectTop = object.getTop(),\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _setObjectActive: function(object) {\n      object.set('active', true);\n      object.group = this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n      object.set('active', false);\n    },\n\n    /**\n     * Properties that are delegated to group objects when reading/writing\n     * @param {Object} delegatedProperties\n     */\n    delegatedProperties: {\n      fill:             true,\n      stroke:           true,\n      strokeWidth:      true,\n      fontFamily:       true,\n      fontWeight:       true,\n      fontSize:         true,\n      fontStyle:        true,\n      lineHeight:       true,\n      textDecoration:   true,\n      textAlign:        true,\n      backgroundColor:  true\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n\n      if (this.delegatedProperties[key] || key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      else {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toDatalessObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n      this.caching = parentCache;\n      if (parentCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.caching = false;\n            return false;\n          }\n        }\n      }\n      return parentCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.callSuper('willDrawShadow')) {\n        return true;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isCaching: function() {\n      return this.caching || this.group && this.group.isCaching();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._renderObject(this._objects[i], ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, noTransform);\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _renderObject: function(object, ctx) {\n      // do not render if object is not visible\n      if (!object.visible) {\n        return;\n      }\n\n      var originalHasRotatingPoint = object.hasRotatingPoint;\n      object.hasRotatingPoint = false;\n      object.render(ctx);\n      object.hasRotatingPoint = originalHasRotatingPoint;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      object.hasControls = object.__origHasControls;\n      delete object.__origHasControls;\n      object.set('active', false);\n      delete object.group;\n\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Saves coordinates of this instance (to be used together with `hasMoved`)\n     * @saveCoords\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    saveCoords: function() {\n      this._originalLeft = this.get('left');\n      this._originalTop = this.get('top');\n      return this;\n    },\n\n    /**\n     * Checks whether this group was moved (since `saveCoords` was called last)\n     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n     */\n    hasMoved: function() {\n      return this._originalLeft !== this.get('left') ||\n             this._originalTop !== this.get('top');\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns requested property\n     * @param {String} prop Property to get\n     * @return {*}\n     */\n    get: function(prop) {\n      if (prop in _lockProperties) {\n        if (this[prop]) {\n          return this[prop];\n        }\n        else {\n          for (var i = 0, len = this._objects.length; i < len; i++) {\n            if (this._objects[i][prop]) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n      else {\n        if (prop in this.delegatedProperties) {\n          return this._objects[0] && this._objects[0].get(prop);\n        }\n        return this[prop];\n      }\n    }\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      var options = fabric.util.object.clone(object, true);\n      delete options.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Group\n   * @type Boolean\n   * @default\n   */\n  fabric.Group.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n     * @type String\n     * @default\n     */\n    alignX: 'none',\n\n    /**\n     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n     * @type String\n     * @default\n     */\n    alignY: 'none',\n\n    /**\n     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * @type String\n     * @default\n     */\n    meetOrSlice: 'meet',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 can be used in case we want to scale with some filter above\n     * the natural image dimensions\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat(\n      'alignX',\n      'alignY',\n      'meetOrSlice'),\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options, callback) {\n      options || (options = { });\n      this.filters = [];\n      this.resizeFilters = [];\n      this.callSuper('initialize', options);\n      this._initElement(element, options, callback);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, callback, options) {\n\n      var _callback, _this;\n\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n\n      if (this.resizeFilters.length === 0) {\n        _callback = callback;\n      }\n      else {\n        _this = this;\n        _callback = function() {\n          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n        };\n      }\n\n      if (this.filters.length !== 0) {\n        this.applyFilters(_callback);\n      }\n      else if (_callback) {\n        _callback(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [], resizeFilters = [],\n          scaleX = 1, scaleY = 1;\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          if (filterObj.type === 'Resize') {\n            scaleX *= filterObj.scaleX;\n            scaleY *= filterObj.scaleY;\n          }\n          filters.push(filterObj.toObject());\n        }\n      });\n\n      this.resizeFilters.forEach(function(filterObj) {\n        filterObj && resizeFilters.push(filterObj.toObject());\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'alignX', 'alignY', 'meetOrSlice'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n          resizeFilters: resizeFilters,\n        });\n\n      object.width /= scaleX;\n      object.height /= scaleY;\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n          preserveAspectRatio = 'none', filtered = true;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left;\n        y = this.top;\n      }\n      if (this.alignX !== 'none' && this.alignY !== 'none') {\n        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n      }\n      markup.push(\n        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n            '\" x=\"', x, '\" y=\"', y,\n            '\" style=\"', this.getSvgStyles(),\n            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n            // so that object's center aligns with container's left/top\n            '\" width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n          '></image>\\n'\n      );\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '<rect ',\n            'x=\"', x, '\" y=\"', y,\n            '\" width=\"', this.width, '\" height=\"', this.height,\n            '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        return fabric.isLikelyNode ? element._src : element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        return this.setElement(img, callback, options);\n      }, this, options && options.crossOrigin);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array)\n     * @method applyFilters\n     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n     * @param {Array} filters to be applied\n     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n     * @param {Boolean} forResizing\n     * @return {CanvasElement} canvasEl to be drawn immediately\n     * @chainable\n     */\n    applyFilters: function(callback, filters, imgElement, forResizing) {\n\n      filters = filters || this.filters;\n      imgElement = imgElement || this._originalElement;\n\n      if (!imgElement) {\n        return;\n      }\n\n      var replacement = fabric.util.createImage(),\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n          minimumScale = this.minimumScaleTrigger / retinaScaling,\n          _this = this, scaleX, scaleY;\n\n      if (filters.length === 0) {\n        this._element = imgElement;\n        callback && callback(this);\n        return imgElement;\n      }\n\n      var canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = imgElement.width;\n      canvasEl.height = imgElement.height;\n      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\n      filters.forEach(function(filter) {\n        if (!filter) {\n          return;\n        }\n        if (forResizing) {\n          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n          if (scaleX * retinaScaling < 1) {\n            scaleX *= retinaScaling;\n          }\n          if (scaleY * retinaScaling < 1) {\n            scaleY *= retinaScaling;\n          }\n        }\n        else {\n          scaleX = filter.scaleX;\n          scaleY = filter.scaleY;\n        }\n        filter.applyTo(canvasEl, scaleX, scaleY);\n        if (!forResizing && filter.type === 'Resize') {\n          _this.width *= filter.scaleX;\n          _this.height *= filter.scaleY;\n        }\n      });\n\n      /** @ignore */\n      replacement.width = canvasEl.width;\n      replacement.height = canvasEl.height;\n      if (fabric.isLikelyNode) {\n        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n        // onload doesn't fire in some node versions, so we invoke callback manually\n        _this._element = replacement;\n        !forResizing && (_this._filteredEl = replacement);\n        callback && callback(_this);\n      }\n      else {\n        replacement.onload = function() {\n          _this._element = replacement;\n          !forResizing && (_this._filteredEl = replacement);\n          callback && callback(_this);\n          replacement.onload = canvasEl = null;\n        };\n        replacement.src = canvasEl.toDataURL('image/png');\n      }\n      return canvasEl;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\n      x = (noTransform ? this.left : -this.width / 2);\n      y = (noTransform ? this.top : -this.height / 2);\n\n      if (this.meetOrSlice === 'slice') {\n        ctx.beginPath();\n        ctx.rect(x, y, this.width, this.height);\n        ctx.clip();\n      }\n\n      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n      }\n      else {\n        elementToDraw = this._element;\n      }\n      elementToDraw && ctx.drawImage(elementToDraw,\n                                     x + imageMargins.marginX,\n                                     y + imageMargins.marginY,\n                                     imageMargins.width,\n                                     imageMargins.height\n                                    );\n\n      this._stroke(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _findMargins: function() {\n      var width = this.width, height = this.height, scales,\n          scale, marginX = 0, marginY = 0;\n\n      if (this.alignX !== 'none' || this.alignY !== 'none') {\n        scales = [this.width / this._element.width, this.height / this._element.height];\n        scale = this.meetOrSlice === 'meet'\n                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n        width = this._element.width * scale;\n        height = this._element.height * scale;\n        if (this.alignX === 'Mid') {\n          marginX = (this.width - width) / 2;\n        }\n        if (this.alignX === 'Max') {\n          marginX = this.width - width;\n        }\n        if (this.alignY === 'Mid') {\n          marginY = (this.height - height) / 2;\n        }\n        if (this.alignY === 'Max') {\n          marginY = this.height - height;\n        }\n      }\n      return {\n        width:  width,\n        height: height,\n        marginX: marginX,\n        marginY: marginY\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options, callback) {\n      this.setElement(fabric.util.getById(element), callback, options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n            ? this.getElement().width || 0\n            : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n            ? this.getElement().height || 0\n            : 0);\n    },\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n          object.resizeFilters = resizeFilters || [];\n          return new fabric.Image(img, object, callback);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @param {Object} [options] Options object\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n        preserveAR;\n\n    if (parsedAttributes.preserveAspectRatio) {\n      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n      extend(parsedAttributes, preserveAR);\n    }\n\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.async = true;\n\n  /**\n   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n   * @static\n   * @type Number\n   * @default\n   */\n  fabric.Image.pngCompression = 1;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.getAngle() % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.setAngle(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.setAngle(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n      onStart: function() {\n        _this.set('active', false);\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.renderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.renderAll.bind(this)\n    });\n    return this;\n  }\n});\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    return { type: this.type };\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Brightness.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.brightness=0] Value to brighten the image up (-255..255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.brightness = options.brightness || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          brightness = this.brightness;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        brightness: this.brightness\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.opaque = options.opaque;\n      this.matrix = options.matrix || [\n        0, 0, 0,\n        0, 1, 0,\n        0, 0, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n\n      var weights = this.matrix,\n          context = canvasEl.getContext('2d'),\n          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          src = pixels.data,\n          sw = pixels.width,\n          sh = pixels.height,\n          output = context.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt;\n\n      for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (var cy = 0; cy < side; cy++) {\n            for (var cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += src[srcOff] * wt;\n              g += src[srcOff + 1] * wt;\n              b += src[srcOff + 2] * wt;\n              a += src[srcOff + 3] * wt;\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n      }\n\n      context.putImageData(output, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * GradientTransparency filter class\n   * @class fabric.Image.filters.GradientTransparency\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.GradientTransparency({\n   *   threshold: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n   // eslint-disable-next-line max-len\n  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'GradientTransparency',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=100] Threshold value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 100;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          total = data.length;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i + 3] = threshold + 255 * (total - i) / total;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n   */\n  fabric.Image.filters.GradientTransparency.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Grayscale.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          len = imageData.width * imageData.height * 4,\n          index = 0,\n          average;\n\n      while (index < len) {\n        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n        data[index]     = average;\n        data[index + 1] = average;\n        data[index + 2] = average;\n        index += 4;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Grayscale';\n    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Invert.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Invert';\n    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Mask filter class\n   * See http://resources.aleph-1.com/mask/\n   * @class fabric.Image.filters.Mask\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n   */\n  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Mask',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Mask.prototype\n     * @param {Object} [options] Options object\n     * @param {fabric.Image} [options.mask] Mask image object\n     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.mask = options.mask;\n      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      if (!this.mask) {\n        return;\n      }\n\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          maskEl = this.mask.getElement(),\n          maskCanvasEl = fabric.util.createCanvasElement(),\n          channel = this.channel,\n          i,\n          iLen = imageData.width * imageData.height * 4;\n\n      maskCanvasEl.width = canvasEl.width;\n      maskCanvasEl.height = canvasEl.height;\n\n      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\n      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n          maskData = maskImageData.data;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i + 3] = maskData[i + channel];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        mask: this.mask.toObject(),\n        channel: this.channel\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n   */\n  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.mask.src, function(img) {\n      object.mask = new fabric.Image(img, object.mask);\n      return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.filters.Mask.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Noise.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.noise=0] Noise value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.noise = options.noise || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          noise = this.noise, rand;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Pixelate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.blocksize = options.blocksize || 4;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          /*\n           blocksize: 4\n\n           [1,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [1,1,1,1,1]\n           */\n\n          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        blocksize: this.blocksize\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveWhite\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveWhite({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveWhite',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=30] Threshold value\n     * @param {Number} [options.distance=20] Distance value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 30;\n      this.distance = options.distance || 20;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          distance = this.distance,\n          limit = 255 - threshold,\n          abs = Math.abs,\n          r, g, b;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > limit &&\n            g > limit &&\n            b > limit &&\n            abs(r - g) < distance &&\n            abs(r - b) < distance &&\n            abs(g - b) < distance\n        ) {\n          data[i + 3] = 0;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveWhite.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia filter class\n   * @class fabric.Image.filters.Sepia\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, avg;\n\n      for (i = 0; i < iLen; i += 4) {\n        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n        data[i] = avg + 100;\n        data[i + 1] = avg + 50;\n        data[i + 2] = avg + 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n   */\n  fabric.Image.filters.Sepia.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Sepia';\n    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia2 filter class\n   * @class fabric.Image.filters.Sepia2\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia2();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia2',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, r, g, b;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n   */\n  fabric.Image.filters.Sepia2.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Sepia2';\n    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Tint filter class\n   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n   * @class fabric.Image.filters.Tint\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Tint filter with hex color and opacity</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: '#3513B0',\n   *   opacity: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Tint filter with rgba color</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: 'rgba(53, 21, 176, 0.5)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Tint',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Tint.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to tint the image with\n     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n      this.opacity = typeof options.opacity !== 'undefined'\n                      ? options.opacity\n                      : new fabric.Color(this.color).getAlpha();\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          tintR, tintG, tintB,\n          r, g, b, alpha1,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      tintR = source[0] * this.opacity;\n      tintG = source[1] * this.opacity;\n      tintB = source[2] * this.opacity;\n\n      alpha1 = 1 - this.opacity;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        // alpha compositing\n        data[i] = tintR + r * alpha1;\n        data[i + 1] = tintG + g * alpha1;\n        data[i + 2] = tintB + b * alpha1;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        opacity: this.opacity\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n   */\n  fabric.Image.filters.Tint.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Multiply filter class\n   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n   * @class fabric.Image.filters.Multiply\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example <caption>Multiply filter with hex color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: '#F0F'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Multiply filter with rgb color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: 'rgb(53, 21, 176)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Multiply',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Multiply.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] *= source[0] / 255;\n        data[i + 1] *= source[1] / 255;\n        data[i + 2] *= source[2] / 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n   */\n  fabric.Image.filters.Multiply.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.Blend\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.Blend({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.Blend({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'Blend',\n\n    initialize: function(options) {\n      options = options || {};\n      this.color = options.color || '#000';\n      this.image = options.image || false;\n      this.mode = options.mode || 'multiply';\n      this.alpha = options.alpha || 1;\n    },\n\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          tr, tg, tb,\n          r, g, b,\n          _r, _g, _b,\n          source,\n          isImage = false;\n\n      if (this.image) {\n        // Blend images\n        isImage = true;\n\n        var _el = fabric.util.createCanvasElement();\n        _el.width = this.image.width;\n        _el.height = this.image.height;\n\n        var tmpCanvas = new fabric.StaticCanvas(_el);\n        tmpCanvas.add(this.image);\n        var context2 =  tmpCanvas.getContext('2d');\n        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n      }\n      else {\n        // Blend color\n        source = new fabric.Color(this.color).getSource();\n\n        tr = source[0] * this.alpha;\n        tg = source[1] * this.alpha;\n        tb = source[2] * this.alpha;\n      }\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (isImage) {\n          tr = source[i] * this.alpha;\n          tg = source[i + 1] * this.alpha;\n          tb = source[i + 2] * this.alpha;\n        }\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 1 - (1 - r) * (1 - tr);\n            data[i + 1] = 1 - (1 - g) * (1 - tg);\n            data[i + 2] = 1 - (1 - b) * (1 - tb);\n            break;\n          case 'add':\n            data[i] = Math.min(255, r + tr);\n            data[i + 1] = Math.min(255, g + tg);\n            data[i + 2] = Math.min(255, b + tb);\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            _r = r - tr;\n            _g = g - tg;\n            _b = b - tb;\n\n            data[i] = (_r < 0) ? 0 : _r;\n            data[i + 1] = (_g < 0) ? 0 : _g;\n            data[i + 2] = (_b < 0) ? 0 : _b;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        color: this.color,\n        image: this.image,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Blend} Instance of fabric.Image.filters.Blend\n   */\n  fabric.Image.filters.Blend.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo: function(canvasEl, scaleX, scaleY) {\n      if (scaleX === 1 && scaleY === 1) {\n        return;\n      }\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = canvasEl.width, oH = canvasEl.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          imageData;\n\n      if (this.resizeType === 'sliceHack') {\n        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'hermite') {\n        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'bilinear') {\n        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'lanczos') {\n        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n      }\n      canvasEl.width = dW;\n      canvasEl.height = dH;\n      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n      var context = canvasEl.getContext('2d'), imageData,\n          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n          doneW = false, doneH = false, stepW = oW, stepH = oH,\n          tmpCanvas = fabric.util.createCanvasElement(),\n          tmpCtx = tmpCanvas.getContext('2d');\n      dW = floor(dW);\n      dH = floor(dH);\n      tmpCanvas.width = max(dW, oW);\n      tmpCanvas.height = max(dH, oH);\n\n      if (dW > oW) {\n        multW = 2;\n        signW = -1;\n      }\n      if (dH > oH) {\n        multH = 2;\n        signH = -1;\n      }\n      imageData = context.getImageData(0, 0, oW, oH);\n      canvasEl.width = max(dW, oW);\n      canvasEl.height = max(dH, oH);\n      context.putImageData(imageData, 0, 0);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW * signW < floor(stepW * multW * signW)) {\n          stepW = floor(stepW * multW);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH * signH < floor(stepH * multH * signH)) {\n          stepH = floor(stepH * multH);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        imageData = context.getImageData(0, 0, oW, oH);\n        tmpCtx.putImageData(imageData, 0, 0);\n        context.clearRect(0, 0, stepW, stepH);\n        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n      }\n      return context.getImageData(0, 0, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\n      function lanczosCreate(lobes) {\n        return function(x) {\n          if (x > lobes) {\n            return 0;\n          }\n          x *= Math.PI;\n          if (abs(x) < 1e-16) {\n            return 1;\n          }\n          var xx = x / lobes;\n          return sin(x) * sin(xx) / x / xx;\n        };\n      }\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var context = canvasEl.getContext('2d'),\n          srcImg = context.getImageData(0, 0, oW, oH),\n          destImg = context.getImageData(0, 0, dW, dH),\n          srcData = srcImg.data, destData = destImg.data,\n          lanczos = lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          context = canvasEl.getContext('2d'),\n          img = context.getImageData(0, 0, oW, oH), data = img.data,\n          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n     * @param {Object} [options] Options object\n     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n     */\n    initialize: function( options ) {\n      options || ( options = {} );\n      this.matrix = options.matrix || [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function( canvasEl ) {\n      var context = canvasEl.getContext( '2d' ),\n          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n          data = imageData.data,\n          iLen = data.length,\n          i,\n          r,\n          g,\n          b,\n          a,\n          m = this.matrix;\n\n      for ( i = 0; i < iLen; i += 4 ) {\n        r = data[ i ];\n        g = data[ i + 1 ];\n        b = data[ i + 2 ];\n        a = data[ i + 3 ];\n\n        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n      }\n\n      context.putImageData( imageData, 0, 0 );\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        type: this.type,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-255...255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.contrast = options.contrast || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          contrastF = 259 * (this.contrast + 255) / (255 * (259 - this.contrast));\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        contrast: this.contrast\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturate({\n   *   saturate: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Saturate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-100...100)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.saturate = options.saturate || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          max, adjust = -this.saturate * 0.01;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        saturate: this.saturate\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturate} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n      MIN_TEXT_WIDTH = 2;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign'\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\n    /**\n     * Retrieves object's fontSize\n     * @method getFontSize\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font size (in pixels)\n     */\n\n    /**\n     * Sets object's fontSize\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontSize\n     * @memberOf fabric.Text.prototype\n     * @param {Number} fontSize Font size (in pixels)\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontWeight\n     * @method getFontWeight\n     * @memberOf fabric.Text.prototype\n     * @return {(String|Number)} Font weight\n     */\n\n    /**\n     * Sets object's fontWeight\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontWeight\n     * @memberOf fabric.Text.prototype\n     * @param {(Number|String)} fontWeight Font weight\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontFamily\n     * @method getFontFamily\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font family\n     */\n\n    /**\n     * Sets object's fontFamily\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontFamily\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontFamily Font family\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's text\n     * @method getText\n     * @memberOf fabric.Text.prototype\n     * @return {String} text\n     */\n\n    /**\n     * Sets object's text\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setText\n     * @memberOf fabric.Text.prototype\n     * @param {String} text Text\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textDecoration\n     * @method getTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text decoration\n     */\n\n    /**\n     * Sets object's textDecoration\n     * @method setTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @param {String} textDecoration Text decoration\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontStyle\n     * @method getFontStyle\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font style\n     */\n\n    /**\n     * Sets object's fontStyle\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontStyle\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontStyle Font style\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's lineHeight\n     * @method getLineHeight\n     * @memberOf fabric.Text.prototype\n     * @return {Number} Line height\n     */\n\n    /**\n     * Sets object's lineHeight\n     * @method setLineHeight\n     * @memberOf fabric.Text.prototype\n     * @param {Number} lineHeight Line height\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textAlign\n     * @method getTextAlign\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text alignment\n     */\n\n    /**\n     * Sets object's textAlign\n     * @method setTextAlign\n     * @memberOf fabric.Text.prototype\n     * @param {String} textAlign Text alignment\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textBackgroundColor\n     * @method getTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text background color\n     */\n\n    /**\n     * Sets object's textBackgroundColor\n     * @method setTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @param {String} textBackgroundColor Text background color\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n     * @type String\n     * @default\n     */\n    textDecoration:       '',\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            '',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat(\n      'fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'textDecoration',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat(\n      'fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'textDecoration',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.25,\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      options = options || { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this._initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n      this._textLines = this._splitTextIntoLines();\n      this._clearCache();\n      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n      this.height = this._getTextHeight(ctx);\n      this.setCoords();\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      if (this.group && this.group.type === 'path-group') {\n        ctx.translate(this.left, this.top);\n      }\n      this._renderTextLinesBackground(ctx);\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setTextStyles: function(ctx) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration();\n    },\n\n    /**\n     * @private\n     * @return {Number} Height of fabric.Text object\n     */\n    _getTextHeight: function() {\n      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    _getTextWidth: function(ctx) {\n      var maxWidth = this._getLineWidth(ctx, 0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this._getLineWidth(ctx, i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} chars Chars to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     */\n    _renderChars: function(method, ctx, chars, left, top) {\n      // remove Text word from method var\n      var shortM = method.slice(0, -4), _char, width;\n      if (this[shortM].toLive) {\n        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n        ctx.save();\n        ctx.translate(offsetX, offsetY);\n        left -= offsetX;\n        top -= offsetY;\n      }\n      if (this.charSpacing !== 0) {\n        var additionalSpace = this._getWidthOfCharSpacing();\n        chars = chars.split('');\n        for (var i = 0, len = chars.length; i < len; i++) {\n          _char = chars[i];\n          width = ctx.measureText(_char).width + additionalSpace;\n          ctx[method](_char, left, top);\n          left += width > 0 ? width : 0;\n        }\n      }\n      else {\n        ctx[method](chars, left, top);\n      }\n      this[shortM].toLive && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // lift the line by quarter of fontSize\n      top -= this.fontSize * this._fontSizeFraction;\n\n      // short-circuit\n      var lineWidth = this._getLineWidth(ctx, lineIndex);\n      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n        this._renderChars(method, ctx, line, left, top, lineIndex);\n        return;\n      }\n\n      // stretch the line\n      var words = line.split(/\\s+/),\n          charOffset = 0,\n          wordsWidth = this._getWidthOfWords(ctx, words.join(' '), lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          leftOffset = 0, word;\n\n      for (var i = 0, len = words.length; i < len; i++) {\n        while (line[charOffset] === ' ' && charOffset < line.length) {\n          charOffset++;\n        }\n        word = words[i];\n        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n        charOffset += word.length;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} word\n     */\n    _getWidthOfWords: function (ctx, word) {\n      var width = ctx.measureText(word).width, charCount, additionalSpace;\n      if (this.charSpacing !== 0) {\n        charCount = word.split('').length;\n        additionalSpace = charCount * this._getWidthOfCharSpacing();\n        width += additionalSpace;\n      }\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * Returns true because text has no style\n     */\n    isEmptyStyles: function() {\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight,\n            lineWidth = this._getLineWidth(ctx, i),\n            leftOffset = this._getLineLeftOffset(lineWidth);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset,\n          top + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && this.isEmptyStyles()) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line\n     */\n    _getHeightOfLine: function() {\n      return this._getHeightOfSingleLine() * this.lineHeight;\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line without lineHeight\n     */\n    _getHeightOfSingleLine: function() {\n      return this.fontSize * this._fontSizeMult;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset, originalFill = ctx.fillStyle;\n\n      ctx.fillStyle = this.textBackgroundColor;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        lineWidth = this._getLineWidth(ctx, i);\n        if (lineWidth > 0) {\n          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n          ctx.fillRect(\n            this._getLeftOffset() + lineLeftOffset,\n            this._getTopOffset() + lineTopOffset,\n            lineWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Number} lineWidth Width of text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineWidth) {\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\n        this.dirty = true;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _getLineWidth: function(ctx, lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n      }\n\n      var width, wordCount, line = this._textLines[lineIndex];\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        width = this._measureLine(ctx, lineIndex);\n      }\n      this.__lineWidths[lineIndex] = width;\n\n      if (width && this.textAlign === 'justify') {\n        wordCount = line.split(/\\s+/);\n        if (wordCount.length > 1) {\n          this.__lineWidths[lineIndex] = -1;\n        }\n      }\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      var line = this._textLines[lineIndex],\n          width = ctx.measureText(line).width,\n          additionalSpace = 0, charCount, finalWidth;\n      if (this.charSpacing !== 0) {\n        charCount = line.split('').length;\n        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n      }\n      finalWidth = width + additionalSpace;\n      return finalWidth > 0 ? finalWidth : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (!this.textDecoration) {\n        return;\n      }\n      var halfOfVerticalBox = this.height / 2,\n          _this = this, offsets = [];\n\n      /** @ignore */\n      function renderLinesAtOffset(offsets) {\n        var i, lineHeight = 0, len, j, oLen, lineWidth,\n            lineLeftOffset, heightOfLine;\n\n        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\n          lineWidth = _this._getLineWidth(ctx, i);\n          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n          heightOfLine = _this._getHeightOfLine(ctx, i);\n\n          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n            ctx.fillRect(\n              _this._getLeftOffset() + lineLeftOffset,\n              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n              lineWidth,\n              _this.fontSize / 15);\n          }\n          lineHeight += heightOfLine;\n        }\n      }\n\n      if (this.textDecoration.indexOf('underline') > -1) {\n        offsets.push(0.85); // 1 - 3/16\n      }\n      if (this.textDecoration.indexOf('line-through') > -1) {\n        offsets.push(0.43);\n      }\n      if (this.textDecoration.indexOf('overline') > -1) {\n        offsets.push(-0.12);\n      }\n      if (offsets.length > 0) {\n        renderLinesAtOffset(offsets);\n      }\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function() {\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n        this.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this._setTextStyles(ctx);\n        this._initDimensions(ctx);\n      }\n      this.callSuper('render', ctx, noTransform);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function() {\n      return this.text.split(this._reNewline);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'textDecoration',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing'\n      ].concat(propertiesToInclude);\n      return this.callSuper('toObject', additionalProperties);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      if (!this.ctx) {\n        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n      }\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(this.ctx),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function(ctx) {\n      var lineTop = this._getHeightOfLine(ctx, 0),\n          textLeft = -this.width / 2,\n          textTop = 0;\n\n      return {\n        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n        lineTop: lineTop\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n          style, '>\\n',\n          textAndBg.textBgRects.join(''),\n          '\\t\\t<text xml:space=\"preserve\" ',\n            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n            textAndBg.textSpans.join(''),\n          '\\t\\t</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = 0;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textBackgroundColor) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n        }\n        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n        height += this._getHeightOfLine(this.ctx, i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n        - textTopOffset + height - this.height / 2;\n      if (this.textAlign === 'justify') {\n        // i call from here to do not intefere with IText\n        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n        return;\n      }\n      textSpans.push(\n        '\\t\\t\\t<tspan x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n          'y=\"',\n          toFixed(yPos, NUM_FRACTION_DIGITS),\n          '\" ',\n          // doing this on <tspan> elements since setting opacity\n          // on containing <text> one doesn't work in Illustrator\n          this._getFillAttributes(this.fill), '>',\n          fabric.util.string.escapeXml(this._textLines[i]),\n        '</tspan>\\n'\n      );\n    },\n\n    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\n      this._setTextStyles(ctx);\n\n      var line = this._textLines[i],\n          words = line.split(/\\s+/),\n          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          word, attributes = this._getFillAttributes(this.fill),\n          len;\n\n      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\n      for (i = 0, len = words.length; i < len; i++) {\n        word = words[i];\n        textSpans.push(\n          '\\t\\t\\t<tspan x=\"',\n            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n            'y=\"',\n            toFixed(yPos, NUM_FRACTION_DIGITS),\n            '\" ',\n            // doing this on <tspan> elements since setting opacity\n            // on containing <text> one doesn't work in Illustrator\n            attributes, '>',\n            fabric.util.string.escapeXml(word),\n          '</tspan>\\n'\n        );\n        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n      }\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n          this._getFillAttributes(this.textBackgroundColor),\n          ' x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n            this._getFillAttributes(this.backgroundColor),\n            ' x=\"',\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n            '\" y=\"',\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n            '\" width=\"',\n            toFixed(this.width, NUM_FRACTION_DIGITS),\n            '\" height=\"',\n            toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Sets specified property to a specified value\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Text} thisArg\n     * @chainable\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (this._dimensionAffectingProps.indexOf(key) > -1) {\n        this._initDimensions();\n        this.setCoords();\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    if (!options.originX) {\n      options.originX = 'left';\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        top/left properties in Fabric correspond to center point of text bounding box\n    */\n    if (text.originX === 'left') {\n      offX = text.getWidth() / 2;\n    }\n    if (text.originX === 'right') {\n      offX = -text.getWidth() / 2;\n    }\n    text.set({\n      left: text.getLeft() + offX,\n      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n    });\n\n    return text;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Text', object, callback, forceAsync, 'text');\n  };\n\n  fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.callSuper('_clearCache');\n      this.__widthOfSpace = [];\n    },\n\n    /**\n     * Returns true if object has no styling\n     */\n    isEmptyStyles: function() {\n      if (!this.styles) {\n        return true;\n      }\n      var obj = this.styles;\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at\n     * @return {Object} styles Style object at a specified (or current) index\n     */\n    getSelectionStyles: function(startIndex, endIndex) {\n\n      if (arguments.length === 2) {\n        var styles = [];\n        for (var i = startIndex; i < endIndex; i++) {\n          styles.push(this.getSelectionStyles(i));\n        }\n        return styles;\n      }\n\n      var loc = this.get2DCursorLocation(startIndex),\n          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection\n     * @param {Object} [styles] Styles object\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles) {\n      if (this.selectionStart === this.selectionEnd) {\n        this._extendStyles(this.selectionStart, styles);\n      }\n      else {\n        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n          this._extendStyles(i, styles);\n        }\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (!ctx) {\n        this.clearContextTop();\n      }\n      this.callSuper('_initDimensions', ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      this.clearContextTop();\n      this.callSuper('render', ctx, noTransform);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n      this.ctx = ctx;\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      var chars = this.text.split(''),\n          boundaries, ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n      }\n      else {\n        ctx = this.ctx;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        boundaries = this._getCursorBoundaries(chars, 'cursor');\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        boundaries = this._getCursorBoundaries(chars, 'selection');\n        this.renderSelection(chars, boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var len = this._textLines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= this._textLines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= this._textLines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Returns complete style of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Object} Character style\n     */\n    getCurrentCharStyle: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\n      return {\n        fontSize: style && style.fontSize || this.fontSize,\n        fill: style && style.fill || this.fill,\n        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n        textDecoration: style && style.textDecoration || this.textDecoration,\n        fontFamily: style && style.fontFamily || this.fontFamily,\n        fontWeight: style && style.fontWeight || this.fontWeight,\n        fontStyle: style && style.fontStyle || this.fontStyle,\n        stroke: style && style.stroke || this.stroke,\n        strokeWidth: style && style.strokeWidth || this.strokeWidth\n      };\n    },\n\n    /**\n     * Returns fontSize of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * Returns color (fill) of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fill ? style.fill : this.cursorColor;\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      var left = Math.round(this._getLeftOffset()),\n          top = this._getTopOffset(),\n\n          offsets = this._getCursorBoundariesOffsets(\n                      chars, typeOfBoundaries);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left + offsets.lineLeft,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset = 0,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries;\n\n      for (var i = 0; i < this.selectionStart; i++) {\n        if (chars[i] === '\\n') {\n          leftOffset = 0;\n          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\n          lineIndex++;\n          charIndex = 0;\n        }\n        else {\n          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n          charIndex++;\n        }\n\n        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n      }\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n      }\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: leftOffset > 0 ? leftOffset : 0,\n        lineLeft: lineLeftOffset\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = boundaries.leftOffset,\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier;\n\n      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\n      ctx.fillRect(\n        boundaries.left + leftOffset - cursorWidth / 2,\n        boundaries.top + boundaries.topOffset,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Array} chars Array of characters\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(chars, boundaries, ctx) {\n\n      ctx.fillStyle = this.selectionColor;\n\n      var start = this.get2DCursorLocation(this.selectionStart),\n          end = this.get2DCursorLocation(this.selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex;\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n            lineHeight = this._getHeightOfLine(this.ctx, i),\n            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\n        if (i === startLine) {\n          for (var j = 0, len = line.length; j < len; j++) {\n            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n            if (j < start.charIndex) {\n              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n          }\n          if (j === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        else if (i > startLine && i < endLine) {\n          boxWidth += this._getLineWidth(ctx, i) || 5;\n        }\n        else if (i === endLine) {\n          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n          }\n          if (end.charIndex === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        ctx.fillRect(\n          boundaries.left + lineOffset,\n          boundaries.top + boundaries.topOffset,\n          boxWidth > 0 ? boxWidth : 0,\n          lineHeight);\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\n      if (this.isEmptyStyles()) {\n        return this._renderCharsFast(method, ctx, line, left, top);\n      }\n\n      charOffset = charOffset || 0;\n\n      // set proper line offset\n      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n          prevStyle,\n          thisStyle,\n          charsToRender = '';\n\n      ctx.save();\n      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\n        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          prevStyle = thisStyle;\n        }\n        charsToRender += line[i - charOffset];\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     */\n    _renderCharsFast: function(method, ctx, line, left, top) {\n\n      if (method === 'fillText' && this.fill) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} i\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n      var charWidth, charHeight, shouldFill, shouldStroke,\n          decl = this._getStyleDeclaration(lineIndex, i),\n          offset, textDecoration, chars, additionalSpace, _charWidth;\n\n      if (decl) {\n        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n        shouldStroke = decl.stroke;\n        shouldFill = decl.fill;\n        textDecoration = decl.textDecoration;\n      }\n      else {\n        charHeight = this.fontSize;\n      }\n\n      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\n      decl && ctx.save();\n\n      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n      textDecoration = textDecoration || this.textDecoration;\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (this.charSpacing !== 0) {\n        additionalSpace = this._getWidthOfCharSpacing();\n        chars = _char.split('');\n        charWidth = 0;\n        for (var j = 0, len = chars.length, jChar; j < len; j++) {\n          jChar = chars[j];\n          shouldFill && ctx.fillText(jChar, left + charWidth, top);\n          shouldStroke && ctx.strokeText(jChar, left + charWidth, top);\n          _charWidth = ctx.measureText(jChar).width + additionalSpace;\n          charWidth += _charWidth > 0 ? _charWidth : 0;\n        }\n      }\n      else {\n        shouldFill && ctx.fillText(_char, left, top);\n        shouldStroke && ctx.strokeText(_char, left, top);\n      }\n\n      if (textDecoration || textDecoration !== '') {\n        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n      }\n\n      decl && ctx.restore();\n      ctx.translate(charWidth, 0);\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n              prevStyle.textDecoration !== thisStyle.textDecoration ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth\n      );\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\n      if (!textDecoration) {\n        return;\n      }\n\n      var decorationWeight = charHeight / 15,\n          positions = {\n            underline: top + charHeight / 10,\n            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n          },\n          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\n      for (i = 0; i < decorations.length; i++) {\n        decoration = decorations[i];\n        if (textDecoration.indexOf(decoration) > -1) {\n          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n      // the adding 0.03 is just to align text with itext by overlap test\n      if (!this.isEmptyStyles()) {\n        top += this.fontSize * (this._fontSizeFraction + 0.03);\n      }\n      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (this.isEmptyStyles()) {\n        return this.callSuper('_renderTextDecoration', ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      this.callSuper('_renderTextLinesBackground', ctx);\n\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          colorCache = '',\n          line, _char, style, leftCache,\n          topCache, widthCache, heightCache;\n      ctx.save();\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        line = this._textLines[i];\n\n        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        lineWidth = this._getLineWidth(ctx, i);\n        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n        leftCache = topCache = widthCache = heightCache = 0;\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          style = this._getStyleDeclaration(i, j) || {};\n\n          if (colorCache !== style.textBackgroundColor) {\n            if (heightCache && widthCache) {\n              ctx.fillStyle = colorCache;\n              ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n            }\n            leftCache = topCache = widthCache = heightCache = 0;\n            colorCache = style.textBackgroundColor || '';\n          }\n\n          if (!style.textBackgroundColor) {\n            colorCache = '';\n            continue;\n          }\n          _char = line[j];\n\n          if (colorCache === style.textBackgroundColor) {\n            colorCache = style.textBackgroundColor;\n            if (!leftCache) {\n              leftCache = leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j);\n            }\n            topCache = topOffset + lineTopOffset;\n            widthCache += this._getWidthOfChar(ctx, _char, i, j);\n            heightCache = heightOfLine / this.lineHeight;\n          }\n        }\n        // if a textBackgroundColor ends on the last character of a line\n        if (heightCache && widthCache) {\n          ctx.fillStyle = colorCache;\n          ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n          leftCache = topCache = widthCache = heightCache = 0;\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _getCacheProp: function(_char, styleDeclaration) {\n      return _char +\n             styleDeclaration.fontSize +\n             styleDeclaration.fontWeight +\n             styleDeclaration.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {String} fontFamily name\n     * @return {Object} reference to cache\n     */\n    _getFontCache: function(fontFamily) {\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      return fabric.charWidthsCache[fontFamily];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n          styleDeclaration = clone(charDecl),\n          width, cacheProp, charWidthsCache;\n\n      this._applyFontStyles(styleDeclaration);\n      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      // short-circuit if no styles for this char\n      // global style from object is always applyed and handled by save and restore\n      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n        return charWidthsCache[cacheProp];\n      }\n\n      if (typeof styleDeclaration.shadow === 'string') {\n        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n      }\n\n      var fill = styleDeclaration.fill || this.fill;\n      ctx.fillStyle = fill.toLive\n        ? fill.toLive(ctx, this)\n        : fill;\n\n      if (styleDeclaration.stroke) {\n        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n          ? styleDeclaration.stroke.toLive(ctx, this)\n          : styleDeclaration.stroke;\n      }\n\n      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\n      //if we want this._setShadow.call to work with styleDeclarion\n      //we have to add those references\n      if (styleDeclaration.shadow) {\n        styleDeclaration.scaleX = this.scaleX;\n        styleDeclaration.scaleY = this.scaleY;\n        styleDeclaration.canvas = this.canvas;\n        styleDeclaration.getObjectScaling = this.getObjectScaling;\n        this._setShadow.call(styleDeclaration, ctx);\n      }\n\n      if (!this.caching || !charWidthsCache[cacheProp]) {\n        width = ctx.measureText(_char).width;\n        this.caching && (charWidthsCache[cacheProp] = width);\n        return width;\n      }\n\n      return charWidthsCache[cacheProp];\n    },\n\n    /**\n     * @private\n     * @param {Object} styleDeclaration\n     */\n    _applyFontStyles: function(styleDeclaration) {\n      if (!styleDeclaration.fontFamily) {\n        styleDeclaration.fontFamily = this.fontFamily;\n      }\n      if (!styleDeclaration.fontSize) {\n        styleDeclaration.fontSize = this.fontSize;\n      }\n      if (!styleDeclaration.fontWeight) {\n        styleDeclaration.fontWeight = this.fontWeight;\n      }\n      if (!styleDeclaration.fontStyle) {\n        styleDeclaration.fontStyle = this.fontStyle;\n      }\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (returnCloneOrEmpty) {\n        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n          ? clone(this.styles[lineIndex][charIndex])\n          : { };\n      }\n\n      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n        return this._getWidthOfSpace(ctx, lineIndex);\n      }\n      ctx.save();\n      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n      }\n      ctx.restore();\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n      var width = 0, i, _char;\n      for (i = 0; i < charIndex; i++) {\n        _char = this._textLines[lineIndex][i];\n        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n      }\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      this._isMeasuring = true;\n      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n      if (this.charSpacing !== 0) {\n        width -= this._getWidthOfCharSpacing();\n      }\n      this._isMeasuring = false;\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     */\n    _getWidthOfSpace: function (ctx, lineIndex) {\n      if (this.__widthOfSpace[lineIndex]) {\n        return this.__widthOfSpace[lineIndex];\n      }\n      var line = this._textLines[lineIndex],\n          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n      this.__widthOfSpace[lineIndex] = width;\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n      var width = 0;\n\n      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n        var _char = line[charIndex];\n\n        if (!_char.match(/\\s/)) {\n          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n        }\n      }\n\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfLine: function(ctx, lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getTextHeight: function(ctx) {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this._getHeightOfLine(ctx, i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        styles: clone(this.styles, true)\n      });\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.IText} instance of fabric.IText\n   */\n  fabric.IText.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('IText', object, callback, forceAsync, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n      this.callSuper('onDeselect');\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = (function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      }).bind(this);\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear) {\n        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this.text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this.text.slice(this.selectionStart, this.selectionEnd);\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Returns number of newlines in selected text\n     * @return {Number} Number of newlines in selected text\n     */\n    getNumNewLinesInSelectedText: function() {\n      var selectedText = this.getSelectedText(),\n          numNewLines  = 0;\n\n      for (var i = 0, len = selectedText.length; i < len; i++) {\n        if (selectedText[i] === '\\n') {\n          numNewLines++;\n        }\n      }\n      return numNewLines;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n      this.selected = true;\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.renderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      if (!this.hiddenTextarea || this.inCompositionMode) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.hiddenTextarea.value = this.text;\n      this.hiddenTextarea.selectionStart = this.selectionStart;\n      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n        this.hiddenTextarea.style.fontSize = style.fontSize;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var chars = this.text.split(''),\n          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n          cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.overCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _removeCharsFromTo: function(start, end) {\n      while (end !== start) {\n        this._removeSingleCharAndStyle(start + 1);\n        end--;\n      }\n      this.selectionStart = start;\n      this.selectionEnd = start;\n    },\n\n    _removeSingleCharAndStyle: function(index) {\n      var isBeginningOfLine = this.text[index - 1] === '\\n',\n          indexStyle        = isBeginningOfLine ? index : index - 1;\n      this.removeStyleObject(isBeginningOfLine, indexStyle);\n      this.text = this.text.slice(0, index - 1) +\n        this.text.slice(index);\n\n      this._textLines = this._splitTextIntoLines();\n    },\n\n    /**\n     * Inserts characters where cursor is (replacing selection if one exists)\n     * @param {String} _chars Characters to insert\n     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n     */\n    insertChars: function(_chars, useCopiedStyle) {\n      var style;\n\n      if (this.selectionEnd - this.selectionStart > 1) {\n        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n      }\n      //short circuit for block paste\n      if (!useCopiedStyle && this.isEmptyStyles()) {\n        this.insertChar(_chars, false);\n        return;\n      }\n      for (var i = 0, len = _chars.length; i < len; i++) {\n        if (useCopiedStyle) {\n          style = fabric.util.object.clone(fabric.copiedTextStyle[i], true);\n        }\n        this.insertChar(_chars[i], i < len - 1, style);\n      }\n    },\n\n    /**\n     * Inserts a character where cursor is\n     * @param {String} _char Characters to insert\n     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n     * @param {Object} styleObject Style to be inserted for the new char\n     */\n    insertChar: function(_char, skipUpdate, styleObject) {\n      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n      this.text = this.text.slice(0, this.selectionStart) +\n        _char + this.text.slice(this.selectionEnd);\n      this._textLines = this._splitTextIntoLines();\n      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n      this.selectionStart += _char.length;\n      this.selectionEnd = this.selectionStart;\n      if (skipUpdate) {\n        return;\n      }\n      this._updateTextarea();\n      this.setCoords();\n      this._fireSelectionChanged();\n      this.fire('changed');\n      this.restartCursorIfNeeded();\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.renderAll();\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\n      this.shiftLineStyles(lineIndex, +1);\n\n      var currentCharStyle = {},\n          newLineStyles    = {};\n\n      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n      }\n\n      // if there's nothing after cursor,\n      // we clone current char style onto the next (otherwise empty) line\n      if (isEndOfLine && currentCharStyle) {\n        newLineStyles[0] = clone(currentCharStyle);\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      // otherwise we clone styles of all chars\n      // after cursor onto the next line, from the beginning\n      else {\n        var somethingAdded = false;\n        for (var index in this.styles[lineIndex]) {\n          var numIndex = parseInt(index, 10);\n          if (numIndex >= charIndex) {\n            somethingAdded = true;\n            newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n            // remove lines from the previous line since they're on a new line now\n            delete this.styles[lineIndex][index];\n          }\n        }\n        somethingAdded && (this.styles[lineIndex + 1] = newLineStyles);\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = clone(currentLineStyles);\n\n      if (charIndex === 0 && !style) {\n        charIndex = 1;\n      }\n\n      // shift all char styles by 1 forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - 1]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      var newStyle = style || clone(currentLineStyles[charIndex - 1]);\n      newStyle && (this.styles[lineIndex][charIndex] = newStyle);\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {String} _chars Characters at the location where style is inserted\n     * @param {Boolean} isEndOfLine True if it's end of line\n     * @param {Object} [styleObject] Style to insert\n     */\n    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n      // removed shortcircuit over isEmptyStyles\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      if (!this._getLineStyle(lineIndex)) {\n        this._setLineStyle(lineIndex, {});\n      }\n\n      if (_chars === '\\n') {\n        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n      }\n      else {\n        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward or downward\n      var clonedStyles = clone(this.styles);\n      for (var line in clonedStyles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine <= lineIndex) {\n          delete clonedStyles[numericLine];\n        }\n      }\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    },\n\n    _getTextOnPreviousLine: function(lIndex) {\n      return this._textLines[lIndex - 1];\n    },\n\n    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\n      if (isBeginningOfLine) {\n        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\n        if (!this.styles[lineIndex - 1]) {\n          this.styles[lineIndex - 1] = {};\n        }\n        for (charIndex in this.styles[lineIndex]) {\n          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n            = this.styles[lineIndex][charIndex];\n        }\n        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n      }\n      else {\n        var currentLineStyles = this.styles[lineIndex];\n\n        if (currentLineStyles) {\n          delete currentLineStyles[charIndex];\n        }\n        var currentLineStylesCloned = clone(currentLineStyles);\n        // shift all styles by 1 backwards\n        for (var i in currentLineStylesCloned) {\n          var numericIndex = parseInt(i, 10);\n          if (numericIndex >= charIndex && numericIndex !== 0) {\n            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n    },\n\n    /**\n     * Inserts new line\n     */\n    insertNewline: function() {\n      this.insertChars('\\n');\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer, options.e)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    else if (this.isDoubleClick(newPointer)) {\n      this.fire('dblclick', options);\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isDoubleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('dblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n      if (!this.editable || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n      var pointer = this.canvas.getPointer(options.e);\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        if (this.selectionStart === this.selectionEnd) {\n          this.abortCursorAnimation();\n        }\n        this.renderCursorOrSelection();\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e) || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        newSelectionStart,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      line = this._textLines[i];\n      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\n      var widthOfLine = this._getLineWidth(this.ctx, i),\n          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\n      width = lineLeftOffset * this.scaleX;\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\n        prevWidth = width;\n\n        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n                 this.scaleX;\n\n        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n          charIndex++;\n          continue;\n        }\n\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i, jlen);\n      }\n\n      if (mouseOffset.y < height) {\n        //this happens just on end of lines.\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n      }\n    }\n\n    // clicked somewhere after all chars, so set at the end\n    if (typeof newSelectionStart === 'undefined') {\n      return this.text.length;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n        newSelectionStart = index + offset;\n\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this.text.length) {\n      newSelectionStart = this.text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    8:  'removeChars',\n    9:  'exitEditing',\n    27: 'exitEditing',\n    13: 'insertNewline',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n    46: 'forwardDelete'\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.renderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    var offset = this.selectionStart || 0,\n        offsetEnd = this.selectionEnd || 0,\n        textLength = this.text.length,\n        newTextLength = this.hiddenTextarea.value.length,\n        diff, charsToInsert, start;\n    if (newTextLength > textLength) {\n      //we added some character\n      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n      diff = newTextLength - textLength;\n      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n    }\n    else {\n      //we selected a portion of text and then input something else.\n      //Internet explorer does not trigger this else\n      diff = newTextLength - textLength + offsetEnd - offset;\n      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n    }\n    this.insertChars(charsToInsert);\n    e.stopPropagation();\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n    this.prevCompositionLength = 0;\n    this.compositionStart = this.selectionStart;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  /**\n   * Composition update\n   */\n  onCompositionUpdate: function(e) {\n    var data = e.data;\n    this.selectionStart = this.compositionStart;\n    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n    this.insertChars(data, false);\n    this.prevCompositionLength = data.length;\n  },\n\n  /**\n   * Forward delete\n   */\n  forwardDelete: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      if (this.selectionStart === this.text.length) {\n        return;\n      }\n      this.moveCursorRight(e);\n    }\n    this.removeChars(e);\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    var selectedText = this.getSelectedText(),\n        clipboardData = this._getClipboardData(e);\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      clipboardData.setData('text', selectedText);\n    }\n\n    fabric.copiedText = selectedText;\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd);\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function(e) {\n    var copiedText = null,\n        clipboardData = this._getClipboardData(e),\n        useCopiedStyle = true;\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n        useCopiedStyle = false;\n      }\n    }\n    else {\n      copiedText = fabric.copiedText;\n    }\n\n    if (copiedText) {\n      this.insertChars(copiedText, useCopiedStyle);\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  },\n\n  /**\n   * Cuts text\n   * @param {Event} e Event object\n   */\n  cut: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      return;\n    }\n\n    this.copy(e);\n    this.removeChars(e);\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\n    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n      _char = textBeforeCursor[i];\n      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this.text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * find for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        textOnLine = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\n      var _char = textOnLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnLine += widthOfChar;\n\n      if (widthOfCharsOnLine > width) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnLine - widthOfChar,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = textOnLine.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n    ? this.selectionStart + offset\n    : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this.text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters selected by selection\n   * @param {Event} e Event object\n   */\n  removeChars: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      this._removeCharsNearCursor(e);\n    }\n    else {\n      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n    }\n\n    this.set('dirty', true);\n    this.setSelectionEnd(this.selectionStart);\n\n    this._removeExtraneousStyles();\n\n    this.canvas && this.canvas.renderAll();\n\n    this.setCoords();\n    this.fire('changed');\n    this.canvas && this.canvas.fire('text:changed', { target: this });\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   */\n  _removeCharsNearCursor: function(e) {\n    if (this.selectionStart === 0) {\n      return;\n    }\n    if (e.metaKey) {\n      // remove all till the start of current line\n      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n      this.setSelectionStart(leftLineBoundary);\n    }\n    else if (e.altKey) {\n      // remove all till the start of current word\n      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n      this.setSelectionStart(leftWordBoundary);\n    }\n    else {\n      this._removeSingleCharAndStyle(this.selectionStart);\n      this.setSelectionStart(this.selectionStart - 1);\n    }\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * @private\n     */\n    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n      if (!this._getLineStyle(lineIndex)) {\n        fabric.Text.prototype._setSVGTextLineText.call(this,\n          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n      }\n      else {\n        this._setSVGTextLineChars(\n          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\n      var chars = this._textLines[lineIndex],\n          charOffset = 0,\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n          lineOffset = this._getSVGLineTopOffset(lineIndex),\n          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\n      for (var i = 0, len = chars.length; i < len; i++) {\n        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\n        textSpans.push(\n          this._createTextCharSpan(\n            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\n        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\n        if (styleDecl.textBackgroundColor) {\n          textBgRects.push(\n            this._createTextCharBg(\n              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n        }\n\n        charOffset += charWidth;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n      }\n      lastHeight = this._getHeightOfLine(this.ctx, j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n      return [\n        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n'\n      ].join('');\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\n      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n        visible: true,\n        fill: this.fill,\n        stroke: this.stroke,\n        type: 'text',\n        getSvgFilter: fabric.Object.prototype.getSvgFilter\n      }, styleDecl));\n\n      return [\n        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n        'style=\"', fillStyles, '\">',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>\\n'\n      ].join('');\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingY: true,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n\n      this.callSuper('initialize', text, options);\n      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n      this.ctx = this.objectCaching ? this._cacheContext : fabric.util.createCanvasElement().getContext('2d');\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @private\n     * @override\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n        this.clearContextTop();\n      }\n\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n\n      // wrap lines\n      this._textLines = this._splitTextIntoLines(ctx);\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      // clear cache and re-calculate height\n      this._clearCache();\n      this.height = this._getTextHeight(ctx);\n      this.setCoords();\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function() {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        if (this.text[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this.text[charCount] === ' ' && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += this._textLines[i].length;\n        realLineCharCount += this._textLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (this._styleMap) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return returnCloneOrEmpty ? { } : null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text that is split into lines\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(ctx, text) {\n      var lines = text.split(this._reNewline), wrapped = [], i;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n      }\n\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     *\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureText: function(ctx, text, lineIndex, charOffset) {\n      var width = 0;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = text.length; i < len; i++) {\n        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text to split into lines\n     * @param {Number} lineIndex\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(ctx, text, lineIndex) {\n      var lineWidth        = 0,\n          lines            = [],\n          line             = '',\n          words            = text.split(' '),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n\n      for (var i = 0; i < words.length; i++) {\n        word = words[i];\n        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= this.width && !lineJustStarted) {\n          lines.push(line);\n          line = '';\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted) {\n          line += infix;\n        }\n        line += word;\n\n        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && lines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return lines;\n    },\n    /**\n     * Gets lines of text to render in the Textbox. This function calculates\n     * text wrapping on the fly everytime it is called.\n     * @returns {Array} Array of lines in the Textbox.\n     * @override\n     */\n    _splitTextIntoLines: function(ctx) {\n      ctx = ctx || this.ctx;\n      var originalAlign = this.textAlign;\n      this._styleMap = null;\n      ctx.save();\n      this._setTextStyles(ctx);\n      this.textAlign = 'left';\n      var lines = this._wrapText(ctx, this.text);\n      this.textAlign = originalAlign;\n      ctx.restore();\n      this._textLines = lines;\n      this._styleMap = this._generateStyleMap();\n      return lines;\n    },\n\n    /**\n     * When part of a group, we don't want the Textbox's scale to increase if\n     * the group's increases. That's why we reduce the scale of the Textbox by\n     * the amount that the group's increases. This is to maintain the effective\n     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n     * the same font-size value would result in different actual size depending\n     * on the value of the scale.\n     * @param {String} key\n     * @param {*} value\n     */\n    setOnGroup: function(key, value) {\n      if (key === 'scaleX') {\n        this.set('scaleX', Math.abs(1 / value));\n        this.set('width', (this.get('width') * value) /\n          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n        this.__oldScaleX = value;\n      }\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n     * Overrides the superclass function to take into account text wrapping.\n     *\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var numLines = this._textLines.length,\n          removed  = 0;\n\n      for (var i = 0; i < numLines; i++) {\n        var line    = this._textLines[i],\n            lineLen = line.length;\n\n        if (selectionStart <= removed + lineLen) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart - removed\n          };\n        }\n\n        removed += lineLen;\n\n        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n          removed++;\n        }\n      }\n\n      return {\n        lineIndex: numLines - 1,\n        charIndex: this._textLines[numLines - 1].length\n      };\n    },\n\n    /**\n     * Overrides superclass function and uses text wrapping data to get cursor\n     * boundary offsets instead of the array of chars.\n     * @param {Array} chars Unused\n     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      var topOffset      = 0,\n          leftOffset     = 0,\n          cursorLocation = this.get2DCursorLocation(),\n          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\n      for (var i = 0; i < cursorLocation.charIndex; i++) {\n        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n      }\n\n      for (i = 0; i < cursorLocation.lineIndex; i++) {\n        topOffset += this._getHeightOfLine(this.ctx, i);\n      }\n\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n          * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Textbox} instance of fabric.Textbox\n   */\n  fabric.Textbox.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Textbox', object, callback, forceAsync, 'text');\n  };\n\n  /**\n   * Returns the default controls visibility required for Textboxes.\n   * @returns {Object}\n   */\n  fabric.Textbox.getTextboxControlVisibility = function() {\n    return {\n      tl: false,\n      tr: false,\n      br: false,\n      bl: false,\n      ml: true,\n      mt: false,\n      mr: true,\n      mb: false,\n      mtr: true\n    };\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (t instanceof fabric.Textbox) {\n      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  /**\n   * Sets controls of this group to the Textbox's special configuration if\n   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n   * it gets initialized to default value at runtime.\n   */\n  fabric.Group.prototype._refreshControlsVisibility = function() {\n    if (typeof fabric.Textbox === 'undefined') {\n      return;\n    }\n    for (var i = this._objects.length; i--;) {\n      if (this._objects[i] instanceof fabric.Textbox) {\n        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n        return;\n      }\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n    },\n\n    /**\n     * Shifts line styles up or down. This function is slightly different than the one in\n     * itext_behaviour as it takes into account the styleMap.\n     *\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var map = this._styleMap[lineIndex];\n      // adjust line index\n      lineIndex = map.line;\n      fabric.IText.prototype.shiftLineStyles.call(this, lineIndex, offset);\n    },\n\n    /**\n     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n     *\n     * @param {Number} lIndex\n     * @returns {String}\n     * @private\n     */\n    _getTextOnPreviousLine: function(lIndex) {\n      var textOnPreviousLine = this._textLines[lIndex - 1];\n\n      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\n        lIndex--;\n      }\n\n      return textOnPreviousLine;\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          map            = this._styleMap[cursorLocation.lineIndex],\n          lineIndex      = map.line,\n          charIndex      = map.offset + cursorLocation.charIndex;\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    }\n  });\n})();\n\n\n(function() {\n  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n  /**\n   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n   *\n   * @param {Number} mouseOffset\n   * @param {Number} prevWidth\n   * @param {Number} width\n   * @param {Number} index\n   * @param {Number} jlen\n   * @returns {Number}\n   */\n  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\n    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n    var tmp     = 0,\n        removed = 0;\n\n    // account for removed characters\n    for (var i = 0; i < this._textLines.length; i++) {\n      tmp += this._textLines[i].length;\n\n      if (tmp + removed >= index) {\n        break;\n      }\n\n      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n        removed++;\n      }\n    }\n\n    return index - i + removed;\n  };\n})();\n\n\n(function() {\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    return;\n  }\n\n  var DOMParser = require('xmldom').DOMParser,\n      URL = require('url'),\n      HTTP = require('http'),\n      HTTPS = require('https'),\n\n      Canvas = require('canvas'),\n      Image = require('canvas').Image;\n\n  /** @private */\n  function request(url, encoding, callback) {\n    var oURL = URL.parse(url);\n\n    // detect if http or https is used\n    if ( !oURL.port ) {\n      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n    }\n\n    // assign request handler based on protocol\n    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n        req = reqHandler.request({\n          hostname: oURL.hostname,\n          port: oURL.port,\n          path: oURL.path,\n          method: 'GET'\n        }, function(response) {\n          var body = '';\n          if (encoding) {\n            response.setEncoding(encoding);\n          }\n          response.on('end', function () {\n            callback(body);\n          });\n          response.on('data', function (chunk) {\n            if (response.statusCode === 200) {\n              body += chunk;\n            }\n          });\n        });\n\n    req.on('error', function(err) {\n      if (err.errno === process.ECONNREFUSED) {\n        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n      }\n      else {\n        fabric.log(err.message);\n      }\n      callback(null);\n    });\n\n    req.end();\n  }\n\n  /** @private */\n  function requestFs(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, data) {\n      if (err) {\n        fabric.log(err);\n        throw err;\n      }\n      else {\n        callback(data);\n      }\n    });\n  }\n\n  fabric.util.loadImage = function(url, callback, context) {\n    function createImageAndCallBack(data) {\n      if (data) {\n        img.src = new Buffer(data, 'binary');\n        // preserving original url, which seems to be lost in node-canvas\n        img._src = url;\n        callback && callback.call(context, img);\n      }\n      else {\n        img = null;\n        callback && callback.call(context, null, true);\n      }\n    }\n    var img = new Image();\n    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n      img.src = img._src = url;\n      callback && callback.call(context, img);\n    }\n    else if (url && url.indexOf('http') !== 0) {\n      requestFs(url, createImageAndCallBack);\n    }\n    else if (url) {\n      request(url, 'binary', createImageAndCallBack);\n    }\n    else {\n      callback && callback.call(context, url);\n    }\n  };\n\n  fabric.loadSVGFromURL = function(url, callback, reviver) {\n    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n    if (url.indexOf('http') !== 0) {\n      requestFs(url, function(body) {\n        fabric.loadSVGFromString(body.toString(), callback, reviver);\n      });\n    }\n    else {\n      request(url, '', function(body) {\n        fabric.loadSVGFromString(body, callback, reviver);\n      });\n    }\n  };\n\n  fabric.loadSVGFromString = function(string, callback, reviver) {\n    var doc = new DOMParser().parseFromString(string);\n    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n      callback && callback(results, options);\n    }, reviver);\n  };\n\n  fabric.util.getScript = function(url, callback) {\n    request(url, '', function(body) {\n      // eslint-disable-next-line no-eval\n      eval(body);\n      callback && callback();\n    });\n  };\n\n  // fabric.util.createCanvasElement = function(_, width, height) {\n  //   return new Canvas(width, height);\n  // }\n\n  /**\n   * Only available when running fabric on node.js\n   * @param {Number} width Canvas width\n   * @param {Number} height Canvas height\n   * @param {Object} [options] Options to pass to FabricCanvas.\n   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n   * @return {Object} wrapped canvas instance\n   */\n  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n    nodeCanvasOptions = nodeCanvasOptions || options;\n\n    var canvasEl = fabric.document.createElement('canvas'),\n        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\n    // jsdom doesn't create style on canvas element, so here be temp. workaround\n    canvasEl.style = { };\n\n    canvasEl.width = nodeCanvas.width;\n    canvasEl.height = nodeCanvas.height;\n    options = options || { };\n    options.nodeCanvas = nodeCanvas;\n    options.nodeCacheCanvas = nodeCacheCanvas;\n    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n        fabricCanvas = new FabricCanvas(canvasEl, options);\n    fabricCanvas.nodeCanvas = nodeCanvas;\n    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n    fabricCanvas.Font = Canvas.Font;\n    return fabricCanvas;\n  };\n\n  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n    el = el || fabric.document.createElement('canvas');\n    this.nodeCanvas = new Canvas(el.width, el.height);\n    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n    originaInitStatic.call(this, el, options);\n    this.contextContainer = this.nodeCanvas.getContext('2d');\n    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n    this.Font = Canvas.Font;\n  };\n\n  /** @ignore */\n  fabric.StaticCanvas.prototype.createPNGStream = function() {\n    return this.nodeCanvas.createPNGStream();\n  };\n\n  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n    return this.nodeCanvas.createJPEGStream(opts);\n  };\n\n  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n    if (!this._isRetinaScaling()) {\n      return;\n    }\n\n    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n  }\n\n  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n    origSetBackstoreDimension.call(this, prop, value);\n    this.nodeCanvas[prop] = value;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  }\n\n})();\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fabric/dist/fabric.js\n// module id = 7\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 8\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 9\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 10\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 11\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 12\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/url.js\n// module id = 16\n// module chunks = 0","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/~/punycode/punycode.js\n// module id = 17\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/util.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/index.js\n// module id = 20\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/decode.js\n// module id = 21\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/encode.js\n// module id = 22\n// module chunks = 0","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/index.js\n// module id = 23\n// module chunks = 0","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tvar fetchTimer = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/lib/request.js\n// module id = 24\n// module chunks = 0","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/lib/capability.js\n// module id = 25\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 26\n// module chunks = 0","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/lib/response.js\n// module id = 27\n// module chunks = 0","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/~/readable-stream/readable-browser.js\n// module id = 28\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/~/readable-stream/lib/_stream_readable.js\n// module id = 29\n// module chunks = 0","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process-nextick-args/index.js\n// module id = 30\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 31\n// module chunks = 0","module.exports = require('events').EventEmitter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/~/readable-stream/lib/internal/streams/stream-browser.js\n// module id = 32\n// module chunks = 0","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/safe-buffer/index.js\n// module id = 33\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-util-is/lib/util.js\n// module id = 34\n// module chunks = 0","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/~/readable-stream/lib/internal/streams/BufferList.js\n// module id = 36\n// module chunks = 0","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/~/readable-stream/lib/internal/streams/destroy.js\n// module id = 38\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/~/readable-stream/lib/_stream_duplex.js\n// module id = 39\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/~/readable-stream/lib/_stream_writable.js\n// module id = 40\n// module chunks = 0","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 41\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 42\n// module chunks = 0","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util-deprecate/browser.js\n// module id = 43\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/~/string_decoder/lib/string_decoder.js\n// module id = 44\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/~/readable-stream/lib/_stream_transform.js\n// module id = 45\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/~/readable-stream/lib/_stream_passthrough.js\n// module id = 46\n// module chunks = 0","var Buffer = require('buffer').Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/to-arraybuffer/index.js\n// module id = 47\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xtend/immutable.js\n// module id = 48\n// module chunks = 0","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/builtin-status-codes/browser.js\n// module id = 49\n// module chunks = 0","var http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    params.protocol = 'https:';\n    return http.request.call(this, params, cb);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/https-browserify/index.js\n// module id = 50\n// module chunks = 0","import { fabric } from 'fabric'\r\nimport * as shapes from './shapes'\r\nimport * as utils from './utils'\r\n\r\nexport default class Asteroid {\r\n    constructor({ id, x, y, r }, canvas) {\r\n\r\n        this.roid = new fabric.Polygon(shapes.asteroid(r), {\r\n            left: x,\r\n            top: y,\r\n            fill: 'black',\r\n            stroke: 'white',\r\n            selectable: false,\r\n            originX: 'center',\r\n            originY: 'center'\r\n        })\r\n\r\n        this.id = id\r\n        this.canvas = canvas\r\n        this.canvas.add(this.roid)\r\n    }\r\n\r\n    update({ x, y }, duration) {\r\n        let animation = {\r\n            left: x,\r\n            top: y,\r\n            angle: '+=' + (duration / 20)\r\n        }\r\n\r\n        //let textAnimation = { left: this.roid.left - 15, top: this.roid.top - 25 }\r\n        let animationSettings = { duration: duration, easing: utils.easing.linear }\r\n\r\n        if (Math.abs(this.roid.left - x) > 100) {\r\n            this.roid.set('left', x)\r\n            //this.text.set('left', x)\r\n        }\r\n        if (Math.abs(this.top - y) > 100) {\r\n            this.roid.set('top', y)\r\n            //this.text.set('top', y)\r\n        }\r\n        this.roid.animate(animation, animationSettings)\r\n    }\r\n\r\n    remove() {\r\n        this.canvas.remove(this.roid)\r\n        //this.canvas.remove(this.text)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Asteroid.js","\r\nconst scale = (value, radius) => value / 10 * radius \r\n\r\nexport const asteroid = (radius) => ([\r\n    { x: scale(-10, radius), y: scale(0, radius)},\r\n    { x: scale(-5, radius), y: scale(7, radius)},\r\n    { x: scale(-3, radius), y: scale(4, radius)},\r\n    { x: scale(1, radius), y: scale(10, radius)},\r\n    { x: scale(5, radius), y: scale(4, radius)},\r\n    { x: scale(10, radius), y: scale(0, radius)},\r\n    { x: scale(5, radius), y: scale(-6, radius)},\r\n    { x: scale(2, radius), y: scale(-10, radius)},\r\n    { x: scale(-4, radius), y: scale(-10, radius)},\r\n    { x: scale(-4, radius), y: scale(-5, radius)}\r\n])\r\n\r\nexport const ship = (radius) => ([\r\n    {x: scale(-5, radius), y: scale(4, radius)},\r\n    {x: scale(0, radius), y: scale(-12, radius)},\r\n    {x: scale(5, radius), y: scale(4, radius)}\r\n])\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shapes.js","\r\nexport const easing = {\r\n    linear: (t, b, c, d) => c*t/d + b\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","import { fabric } from 'fabric'\nimport * as shapes from './shapes'\nimport * as utils from './utils'\n\nexport default class Ship {\n    constructor({id, x, y, r, colour}, canvas) {\n        this.ship = new fabric.Polygon(shapes.ship(r), {\n            left: x,\n            top: y,\n            fill: 'transparent',\n            stroke: fabric.Color.fromHex(colour).toRgb(),\n            selectable: false,\n            originX: 'center',\n            originY: 'center'\n        })\n\n        this.text = new fabric.Text(id + '', {\n            fontFamily: 'Source Code Pro,Courier New',\n            left: x,\n            top: y + r,\n            fontSize: 16,\n            fill: fabric.Color.fromHex(colour).toRgb(),\n            originX: 'center',\n            originY: 'top',\n        })\n\n        this.id = id\n\n        canvas.add(this.ship)\n        canvas.add(this.text)\n    }\n\n    update({x, y, r,  angle}, duration) {\n        this.ship.set('angle', angle)\n        this.ship.set('left', x)\n        this.ship.set('top', y)\n        this.text.set('left', x)\n        this.text.set('top', y + r)\n        var animation = { angle: Math.abs(angle) }\n        let animationSettings = { duration: duration, easing: utils.easing.linear }\n\n        this.ship.animate(animation, animationSettings)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Ship.js","import { fabric } from 'fabric'\nimport * as shapes from './shapes'\nimport * as utils from './utils'\n\nexport default function Explosion({x, y}, canvas) {\n  let lines = [];\n    for (var i = 0; i < 50; i++) {\n      // var x1 = Math.cos(rad)// * Math.random()\n      // var y1 = Math.sin(rad)// * Math.random()\n      var line = new fabric.Line([-5, -5, 5, 5], {\n          left: x,\n          top: y,\n          fill: 'transparent',\n          stroke: 'yellow',\n          selectable: false,\n          originX: 'left',\n          originY: 'top',\n          angle: 360 * Math.random()\n      })\n      canvas.add(line)\n      lines.push(line)\n    }\n    \n    lines.forEach((line) => {\n      line.animate({\n        left: line.get('left') + 80 * Math.random() * Math.cos(line.get('angle') * Math.PI / 180),\n        top: line.get('top') + 80 * Math.random() * Math.sin(line.get('angle') * Math.PI / 180)\n        //angle: 720 * (Math.random() - 0.5)\n      }, {\n        duration: 500,\n        easing: utils.easing.linear,\n        onComplete: () => canvas.remove(line)\n      })\n    })\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Explosion.js","import { fabric } from 'fabric'\nimport * as shapes from './shapes'\nimport * as utils from './utils'\n\n\nexport default class Bullet {\n    constructor({id, x, y}, canvas) {\n        var bullet = new fabric.Circle({\n            radius: 1.2,\n            left: x,\n            top: y,\n            fill: '#7DF9FF',\n            stroke: '#FFFFFF',\n            selectable: false,\n            originX: 'left',\n            originY: 'top',\n            opacity: 0.9\n        })\n\n        canvas.add(bullet)\n        this.canvas = canvas\n        this.id = id\n        this.bullet = bullet\n    }\n\n    update({x, y}, duration = 50) {\n        let animation = {\n            left: x,\n            top: y,\n            opacity: 0.1\n        }\n\n        let animationSettings = { duration: duration, easing: utils.easing.linear }\n\n        if(Math.abs(this.bullet.left - x) > 100) {\n            this.bullet.set('left', x)\n        }\n        if(Math.abs(this.bullet.top - y) > 100) {\n            this.bullet.set('top', y)\n        }\n        this.bullet.animate(animation, animationSettings)\n    }\n\n    remove() {\n        let self = this;\n        setTimeout(function() {\n            self.canvas.remove(self.bullet)\n        }, 50)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Bullet.js","import { fabric } from 'fabric'\n\nexport default class FpsCounter {\n\n    constructor(canvas) {\n        this.text = new fabric.Text('FPS: 0', {\n            fontFamily: 'Source Code Pro,Arial,Sans',\n            fontSize: 12,\n            fill: '#410000',\n            fontWeight: 'bold',\n            left: 5,\n            top: 5,\n            selectable: false\n        })\n\n        canvas.add(this.text)\n\n        this.frames = 0\n        this.startTime = Date.now()\n        this.prevTime = this.startTime\n    }\n\n    update() {\n        var time = Date.now()\n        this.frames++\n\n        if ( time > this.prevTime + 1000 ) {\n            let fps = Math.round( ( this.frames * 1000 ) / ( time - this.prevTime ) )\n            this.prevTime = time\n            this.frames = 0\n\n            if (fps < 50) {\n                this.text.setText(\"FPS: \" + fps)\n            } else {\n                this.text.setText(\"\")\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/FpsCounter.js","\n\nexport default function transformFrame(frame, ratio, serverDimmensions) {\n    const transformAsteroid = ([id, x, y, r]) => ({\n        id, \n        x: x / ratio.WIDTH, \n        y: (serverDimmensions.HEIGHT - y) / ratio.HEIGHT, \n        r: r / ratio.WIDTH\n    })\n\n    const transformShip = ([id, x, y, r, angle, colour]) => ({\n        id,\n        x: x / ratio.WIDTH, \n        y: (serverDimmensions.HEIGHT - y) / ratio.HEIGHT, \n        r: r / ratio.WIDTH,\n        angle: 360 - angle * (180 / Math.PI) + 90, // server measures angles conuterclockwise starting from 12 o'clock\n        colour\n    })\n\n    const transformExplosion = ([x, y]) => ({\n        x: x / ratio.WIDTH, \n        y: (serverDimmensions.HEIGHT - y) / ratio.HEIGHT\n    })\n\n    const transformBullet = ([id, x, y]) => ({\n        id, \n        x: x / ratio.WIDTH, \n        y: (serverDimmensions.HEIGHT - y) / ratio.HEIGHT\n    })\n\n    return {\n        asteroids: frame.a.map((a) => transformAsteroid(a)),\n        ships: frame.s.map((s) => transformShip(s)),\n        explosions: frame.x.map((x) => transformExplosion(x)),\n        bullets: frame.b.map(b => transformBullet(b))\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/transformFrame.js"],"sourceRoot":""}